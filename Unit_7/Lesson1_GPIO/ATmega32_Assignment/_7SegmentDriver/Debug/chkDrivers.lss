
chkDrivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001dd8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00001dd8  00001e4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00001e60  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001e90  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  00001ecc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e81  00000000  00000000  00001fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000805  00000000  00000000  00002e4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000fe2  00000000  00000000  00003652  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000031c  00000000  00000000  00004634  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000744  00000000  00000000  00004950  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000651  00000000  00000000  00005094  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  000056e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ed       	ldi	r30, 0xD8	; 216
      68:	fd e1       	ldi	r31, 0x1D	; 29
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a4 37       	cpi	r26, 0x74	; 116
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 43 03 	call	0x686	; 0x686 <main>
      7a:	0c 94 ea 0e 	jmp	0x1dd4	; 0x1dd4 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <GPIO_voidSetPinDirection>:
	GPIO_PIND = CLR ;
	
}

void GPIO_voidSetPinDirection(u8 copy_u8PortId,u8 copy_u8PinNumber ,u8 copy_u8PinDirection)
{
      82:	cf 93       	push	r28
      84:	df 93       	push	r29
      86:	00 d0       	rcall	.+0      	; 0x88 <GPIO_voidSetPinDirection+0x6>
      88:	1f 92       	push	r1
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	89 83       	std	Y+1, r24	; 0x01
      90:	6a 83       	std	Y+2, r22	; 0x02
      92:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8PinNumber >= GPIO_FIRST_PIN && copy_u8PinNumber <= GPIO_LAST_PIN)
      94:	8a 81       	ldd	r24, Y+2	; 0x02
      96:	88 30       	cpi	r24, 0x08	; 8
      98:	08 f0       	brcs	.+2      	; 0x9c <GPIO_voidSetPinDirection+0x1a>
      9a:	f5 c1       	rjmp	.+1002   	; 0x486 <__stack+0x27>
	{
		switch(copy_u8PortId)
      9c:	89 81       	ldd	r24, Y+1	; 0x01
      9e:	88 2f       	mov	r24, r24
      a0:	90 e0       	ldi	r25, 0x00	; 0
      a2:	81 30       	cpi	r24, 0x01	; 1
      a4:	91 05       	cpc	r25, r1
      a6:	09 f4       	brne	.+2      	; 0xaa <GPIO_voidSetPinDirection+0x28>
      a8:	86 c0       	rjmp	.+268    	; 0x1b6 <GPIO_voidSetPinDirection+0x134>
      aa:	82 30       	cpi	r24, 0x02	; 2
      ac:	91 05       	cpc	r25, r1
      ae:	1c f4       	brge	.+6      	; 0xb6 <GPIO_voidSetPinDirection+0x34>
      b0:	89 2b       	or	r24, r25
      b2:	49 f0       	breq	.+18     	; 0xc6 <GPIO_voidSetPinDirection+0x44>
						SET_BIT(GPIO_DDRD,copy_u8PinNumber);
						break;
					default:	break ;
				}
				break ;
			default: break ;
      b4:	e8 c1       	rjmp	.+976    	; 0x486 <__stack+0x27>

void GPIO_voidSetPinDirection(u8 copy_u8PortId,u8 copy_u8PinNumber ,u8 copy_u8PinDirection)
{
	if(copy_u8PinNumber >= GPIO_FIRST_PIN && copy_u8PinNumber <= GPIO_LAST_PIN)
	{
		switch(copy_u8PortId)
      b6:	82 30       	cpi	r24, 0x02	; 2
      b8:	91 05       	cpc	r25, r1
      ba:	09 f4       	brne	.+2      	; 0xbe <GPIO_voidSetPinDirection+0x3c>
      bc:	f4 c0       	rjmp	.+488    	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
      be:	03 97       	sbiw	r24, 0x03	; 3
      c0:	09 f4       	brne	.+2      	; 0xc4 <GPIO_voidSetPinDirection+0x42>
      c2:	69 c1       	rjmp	.+722    	; 0x396 <__EEPROM_REGION_LENGTH__+0x196>
						SET_BIT(GPIO_DDRD,copy_u8PinNumber);
						break;
					default:	break ;
				}
				break ;
			default: break ;
      c4:	e0 c1       	rjmp	.+960    	; 0x486 <__stack+0x27>
	if(copy_u8PinNumber >= GPIO_FIRST_PIN && copy_u8PinNumber <= GPIO_LAST_PIN)
	{
		switch(copy_u8PortId)
		{
			case PORTA :
				switch(copy_u8PinDirection)
      c6:	8b 81       	ldd	r24, Y+3	; 0x03
      c8:	88 2f       	mov	r24, r24
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	81 30       	cpi	r24, 0x01	; 1
      ce:	91 05       	cpc	r25, r1
      d0:	09 f4       	brne	.+2      	; 0xd4 <GPIO_voidSetPinDirection+0x52>
      d2:	5b c0       	rjmp	.+182    	; 0x18a <GPIO_voidSetPinDirection+0x108>
      d4:	82 30       	cpi	r24, 0x02	; 2
      d6:	91 05       	cpc	r25, r1
      d8:	71 f1       	breq	.+92     	; 0x136 <GPIO_voidSetPinDirection+0xb4>
      da:	89 2b       	or	r24, r25
      dc:	09 f0       	breq	.+2      	; 0xe0 <GPIO_voidSetPinDirection+0x5e>
						break;
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRA,copy_u8PinNumber);
						break;
					default:	break ;
      de:	6a c0       	rjmp	.+212    	; 0x1b4 <GPIO_voidSetPinDirection+0x132>
			case PORTA :
				switch(copy_u8PinDirection)
				{
					case INPUT_FLOAT:
						/*	CLEAR DDxn AND PORTxn	*/
						CLR_BIT(GPIO_DDRA,copy_u8PinNumber);
      e0:	8a e3       	ldi	r24, 0x3A	; 58
      e2:	90 e0       	ldi	r25, 0x00	; 0
      e4:	2a e3       	ldi	r18, 0x3A	; 58
      e6:	30 e0       	ldi	r19, 0x00	; 0
      e8:	f9 01       	movw	r30, r18
      ea:	20 81       	ld	r18, Z
      ec:	62 2f       	mov	r22, r18
      ee:	2a 81       	ldd	r18, Y+2	; 0x02
      f0:	42 2f       	mov	r20, r18
      f2:	50 e0       	ldi	r21, 0x00	; 0
      f4:	21 e0       	ldi	r18, 0x01	; 1
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	02 c0       	rjmp	.+4      	; 0xfe <GPIO_voidSetPinDirection+0x7c>
      fa:	22 0f       	add	r18, r18
      fc:	33 1f       	adc	r19, r19
      fe:	4a 95       	dec	r20
     100:	e2 f7       	brpl	.-8      	; 0xfa <GPIO_voidSetPinDirection+0x78>
     102:	20 95       	com	r18
     104:	26 23       	and	r18, r22
     106:	fc 01       	movw	r30, r24
     108:	20 83       	st	Z, r18
						CLR_BIT(GPIO_PORTA,copy_u8PinNumber);
     10a:	8b e3       	ldi	r24, 0x3B	; 59
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	2b e3       	ldi	r18, 0x3B	; 59
     110:	30 e0       	ldi	r19, 0x00	; 0
     112:	f9 01       	movw	r30, r18
     114:	20 81       	ld	r18, Z
     116:	62 2f       	mov	r22, r18
     118:	2a 81       	ldd	r18, Y+2	; 0x02
     11a:	42 2f       	mov	r20, r18
     11c:	50 e0       	ldi	r21, 0x00	; 0
     11e:	21 e0       	ldi	r18, 0x01	; 1
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	02 c0       	rjmp	.+4      	; 0x128 <GPIO_voidSetPinDirection+0xa6>
     124:	22 0f       	add	r18, r18
     126:	33 1f       	adc	r19, r19
     128:	4a 95       	dec	r20
     12a:	e2 f7       	brpl	.-8      	; 0x124 <GPIO_voidSetPinDirection+0xa2>
     12c:	20 95       	com	r18
     12e:	26 23       	and	r18, r22
     130:	fc 01       	movw	r30, r24
     132:	20 83       	st	Z, r18
						break;
     134:	3f c0       	rjmp	.+126    	; 0x1b4 <GPIO_voidSetPinDirection+0x132>
					case INPUT_PULLUP:
						/*	CLEAR DDxn AND SET PORTxn	*/
						CLR_BIT(GPIO_DDRA,copy_u8PinNumber);
     136:	8a e3       	ldi	r24, 0x3A	; 58
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	2a e3       	ldi	r18, 0x3A	; 58
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	f9 01       	movw	r30, r18
     140:	20 81       	ld	r18, Z
     142:	62 2f       	mov	r22, r18
     144:	2a 81       	ldd	r18, Y+2	; 0x02
     146:	42 2f       	mov	r20, r18
     148:	50 e0       	ldi	r21, 0x00	; 0
     14a:	21 e0       	ldi	r18, 0x01	; 1
     14c:	30 e0       	ldi	r19, 0x00	; 0
     14e:	02 c0       	rjmp	.+4      	; 0x154 <GPIO_voidSetPinDirection+0xd2>
     150:	22 0f       	add	r18, r18
     152:	33 1f       	adc	r19, r19
     154:	4a 95       	dec	r20
     156:	e2 f7       	brpl	.-8      	; 0x150 <GPIO_voidSetPinDirection+0xce>
     158:	20 95       	com	r18
     15a:	26 23       	and	r18, r22
     15c:	fc 01       	movw	r30, r24
     15e:	20 83       	st	Z, r18
						SET_BIT(GPIO_PORTA,copy_u8PinNumber);
     160:	8b e3       	ldi	r24, 0x3B	; 59
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	2b e3       	ldi	r18, 0x3B	; 59
     166:	30 e0       	ldi	r19, 0x00	; 0
     168:	f9 01       	movw	r30, r18
     16a:	20 81       	ld	r18, Z
     16c:	62 2f       	mov	r22, r18
     16e:	2a 81       	ldd	r18, Y+2	; 0x02
     170:	42 2f       	mov	r20, r18
     172:	50 e0       	ldi	r21, 0x00	; 0
     174:	21 e0       	ldi	r18, 0x01	; 1
     176:	30 e0       	ldi	r19, 0x00	; 0
     178:	02 c0       	rjmp	.+4      	; 0x17e <GPIO_voidSetPinDirection+0xfc>
     17a:	22 0f       	add	r18, r18
     17c:	33 1f       	adc	r19, r19
     17e:	4a 95       	dec	r20
     180:	e2 f7       	brpl	.-8      	; 0x17a <GPIO_voidSetPinDirection+0xf8>
     182:	26 2b       	or	r18, r22
     184:	fc 01       	movw	r30, r24
     186:	20 83       	st	Z, r18
						break;
     188:	15 c0       	rjmp	.+42     	; 0x1b4 <GPIO_voidSetPinDirection+0x132>
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRA,copy_u8PinNumber);
     18a:	8a e3       	ldi	r24, 0x3A	; 58
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	2a e3       	ldi	r18, 0x3A	; 58
     190:	30 e0       	ldi	r19, 0x00	; 0
     192:	f9 01       	movw	r30, r18
     194:	20 81       	ld	r18, Z
     196:	62 2f       	mov	r22, r18
     198:	2a 81       	ldd	r18, Y+2	; 0x02
     19a:	42 2f       	mov	r20, r18
     19c:	50 e0       	ldi	r21, 0x00	; 0
     19e:	21 e0       	ldi	r18, 0x01	; 1
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <GPIO_voidSetPinDirection+0x126>
     1a4:	22 0f       	add	r18, r18
     1a6:	33 1f       	adc	r19, r19
     1a8:	4a 95       	dec	r20
     1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <GPIO_voidSetPinDirection+0x122>
     1ac:	26 2b       	or	r18, r22
     1ae:	fc 01       	movw	r30, r24
     1b0:	20 83       	st	Z, r18
						break;
     1b2:	00 00       	nop
					default:	break ;
				}
				break ;
     1b4:	68 c1       	rjmp	.+720    	; 0x486 <__stack+0x27>
			case PORTB :
				switch(copy_u8PinDirection)
     1b6:	8b 81       	ldd	r24, Y+3	; 0x03
     1b8:	88 2f       	mov	r24, r24
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	81 30       	cpi	r24, 0x01	; 1
     1be:	91 05       	cpc	r25, r1
     1c0:	09 f4       	brne	.+2      	; 0x1c4 <GPIO_voidSetPinDirection+0x142>
     1c2:	5b c0       	rjmp	.+182    	; 0x27a <__EEPROM_REGION_LENGTH__+0x7a>
     1c4:	82 30       	cpi	r24, 0x02	; 2
     1c6:	91 05       	cpc	r25, r1
     1c8:	71 f1       	breq	.+92     	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
     1ca:	89 2b       	or	r24, r25
     1cc:	09 f0       	breq	.+2      	; 0x1d0 <GPIO_voidSetPinDirection+0x14e>
						break;
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRB,copy_u8PinNumber);
						break;
					default:	break ;
     1ce:	6a c0       	rjmp	.+212    	; 0x2a4 <__EEPROM_REGION_LENGTH__+0xa4>
			case PORTB :
				switch(copy_u8PinDirection)
				{
					case INPUT_FLOAT:
						/*	CLEAR DDxn AND PORTxn	*/
						CLR_BIT(GPIO_DDRB,copy_u8PinNumber);
     1d0:	87 e3       	ldi	r24, 0x37	; 55
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	27 e3       	ldi	r18, 0x37	; 55
     1d6:	30 e0       	ldi	r19, 0x00	; 0
     1d8:	f9 01       	movw	r30, r18
     1da:	20 81       	ld	r18, Z
     1dc:	62 2f       	mov	r22, r18
     1de:	2a 81       	ldd	r18, Y+2	; 0x02
     1e0:	42 2f       	mov	r20, r18
     1e2:	50 e0       	ldi	r21, 0x00	; 0
     1e4:	21 e0       	ldi	r18, 0x01	; 1
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	02 c0       	rjmp	.+4      	; 0x1ee <GPIO_voidSetPinDirection+0x16c>
     1ea:	22 0f       	add	r18, r18
     1ec:	33 1f       	adc	r19, r19
     1ee:	4a 95       	dec	r20
     1f0:	e2 f7       	brpl	.-8      	; 0x1ea <GPIO_voidSetPinDirection+0x168>
     1f2:	20 95       	com	r18
     1f4:	26 23       	and	r18, r22
     1f6:	fc 01       	movw	r30, r24
     1f8:	20 83       	st	Z, r18
						CLR_BIT(GPIO_PORTB,copy_u8PinNumber);
     1fa:	88 e3       	ldi	r24, 0x38	; 56
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	28 e3       	ldi	r18, 0x38	; 56
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	f9 01       	movw	r30, r18
     204:	20 81       	ld	r18, Z
     206:	62 2f       	mov	r22, r18
     208:	2a 81       	ldd	r18, Y+2	; 0x02
     20a:	42 2f       	mov	r20, r18
     20c:	50 e0       	ldi	r21, 0x00	; 0
     20e:	21 e0       	ldi	r18, 0x01	; 1
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	02 c0       	rjmp	.+4      	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
     214:	22 0f       	add	r18, r18
     216:	33 1f       	adc	r19, r19
     218:	4a 95       	dec	r20
     21a:	e2 f7       	brpl	.-8      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
     21c:	20 95       	com	r18
     21e:	26 23       	and	r18, r22
     220:	fc 01       	movw	r30, r24
     222:	20 83       	st	Z, r18
						break;
     224:	3f c0       	rjmp	.+126    	; 0x2a4 <__EEPROM_REGION_LENGTH__+0xa4>
					case INPUT_PULLUP:
						/*	CLEAR DDxn AND SET PORTxn	*/
						CLR_BIT(GPIO_DDRB,copy_u8PinNumber);
     226:	87 e3       	ldi	r24, 0x37	; 55
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	27 e3       	ldi	r18, 0x37	; 55
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	f9 01       	movw	r30, r18
     230:	20 81       	ld	r18, Z
     232:	62 2f       	mov	r22, r18
     234:	2a 81       	ldd	r18, Y+2	; 0x02
     236:	42 2f       	mov	r20, r18
     238:	50 e0       	ldi	r21, 0x00	; 0
     23a:	21 e0       	ldi	r18, 0x01	; 1
     23c:	30 e0       	ldi	r19, 0x00	; 0
     23e:	02 c0       	rjmp	.+4      	; 0x244 <__EEPROM_REGION_LENGTH__+0x44>
     240:	22 0f       	add	r18, r18
     242:	33 1f       	adc	r19, r19
     244:	4a 95       	dec	r20
     246:	e2 f7       	brpl	.-8      	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
     248:	20 95       	com	r18
     24a:	26 23       	and	r18, r22
     24c:	fc 01       	movw	r30, r24
     24e:	20 83       	st	Z, r18
						SET_BIT(GPIO_PORTB,copy_u8PinNumber);
     250:	88 e3       	ldi	r24, 0x38	; 56
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	28 e3       	ldi	r18, 0x38	; 56
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	f9 01       	movw	r30, r18
     25a:	20 81       	ld	r18, Z
     25c:	62 2f       	mov	r22, r18
     25e:	2a 81       	ldd	r18, Y+2	; 0x02
     260:	42 2f       	mov	r20, r18
     262:	50 e0       	ldi	r21, 0x00	; 0
     264:	21 e0       	ldi	r18, 0x01	; 1
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	02 c0       	rjmp	.+4      	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
     26a:	22 0f       	add	r18, r18
     26c:	33 1f       	adc	r19, r19
     26e:	4a 95       	dec	r20
     270:	e2 f7       	brpl	.-8      	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
     272:	26 2b       	or	r18, r22
     274:	fc 01       	movw	r30, r24
     276:	20 83       	st	Z, r18
						break;
     278:	15 c0       	rjmp	.+42     	; 0x2a4 <__EEPROM_REGION_LENGTH__+0xa4>
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRB,copy_u8PinNumber);
     27a:	87 e3       	ldi	r24, 0x37	; 55
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	27 e3       	ldi	r18, 0x37	; 55
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	f9 01       	movw	r30, r18
     284:	20 81       	ld	r18, Z
     286:	62 2f       	mov	r22, r18
     288:	2a 81       	ldd	r18, Y+2	; 0x02
     28a:	42 2f       	mov	r20, r18
     28c:	50 e0       	ldi	r21, 0x00	; 0
     28e:	21 e0       	ldi	r18, 0x01	; 1
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	02 c0       	rjmp	.+4      	; 0x298 <__EEPROM_REGION_LENGTH__+0x98>
     294:	22 0f       	add	r18, r18
     296:	33 1f       	adc	r19, r19
     298:	4a 95       	dec	r20
     29a:	e2 f7       	brpl	.-8      	; 0x294 <__EEPROM_REGION_LENGTH__+0x94>
     29c:	26 2b       	or	r18, r22
     29e:	fc 01       	movw	r30, r24
     2a0:	20 83       	st	Z, r18
						break;
     2a2:	00 00       	nop
					default:	break ;
				}	
				break ;
     2a4:	f0 c0       	rjmp	.+480    	; 0x486 <__stack+0x27>
			case PORTC :
				switch(copy_u8PinDirection)
     2a6:	8b 81       	ldd	r24, Y+3	; 0x03
     2a8:	88 2f       	mov	r24, r24
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	81 30       	cpi	r24, 0x01	; 1
     2ae:	91 05       	cpc	r25, r1
     2b0:	09 f4       	brne	.+2      	; 0x2b4 <__EEPROM_REGION_LENGTH__+0xb4>
     2b2:	5b c0       	rjmp	.+182    	; 0x36a <__EEPROM_REGION_LENGTH__+0x16a>
     2b4:	82 30       	cpi	r24, 0x02	; 2
     2b6:	91 05       	cpc	r25, r1
     2b8:	71 f1       	breq	.+92     	; 0x316 <__EEPROM_REGION_LENGTH__+0x116>
     2ba:	89 2b       	or	r24, r25
     2bc:	09 f0       	breq	.+2      	; 0x2c0 <__EEPROM_REGION_LENGTH__+0xc0>
						break;
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRC,copy_u8PinNumber);
						break;
					default:	break ;
     2be:	6a c0       	rjmp	.+212    	; 0x394 <__EEPROM_REGION_LENGTH__+0x194>
			case PORTC :
				switch(copy_u8PinDirection)
				{
					case INPUT_FLOAT:
						/*	CLEAR DDxn AND PORTxn	*/
						CLR_BIT(GPIO_DDRC,copy_u8PinNumber);
     2c0:	84 e3       	ldi	r24, 0x34	; 52
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	24 e3       	ldi	r18, 0x34	; 52
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	f9 01       	movw	r30, r18
     2ca:	20 81       	ld	r18, Z
     2cc:	62 2f       	mov	r22, r18
     2ce:	2a 81       	ldd	r18, Y+2	; 0x02
     2d0:	42 2f       	mov	r20, r18
     2d2:	50 e0       	ldi	r21, 0x00	; 0
     2d4:	21 e0       	ldi	r18, 0x01	; 1
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	02 c0       	rjmp	.+4      	; 0x2de <__EEPROM_REGION_LENGTH__+0xde>
     2da:	22 0f       	add	r18, r18
     2dc:	33 1f       	adc	r19, r19
     2de:	4a 95       	dec	r20
     2e0:	e2 f7       	brpl	.-8      	; 0x2da <__EEPROM_REGION_LENGTH__+0xda>
     2e2:	20 95       	com	r18
     2e4:	26 23       	and	r18, r22
     2e6:	fc 01       	movw	r30, r24
     2e8:	20 83       	st	Z, r18
						CLR_BIT(GPIO_PORTC,copy_u8PinNumber);
     2ea:	85 e3       	ldi	r24, 0x35	; 53
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	25 e3       	ldi	r18, 0x35	; 53
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	f9 01       	movw	r30, r18
     2f4:	20 81       	ld	r18, Z
     2f6:	62 2f       	mov	r22, r18
     2f8:	2a 81       	ldd	r18, Y+2	; 0x02
     2fa:	42 2f       	mov	r20, r18
     2fc:	50 e0       	ldi	r21, 0x00	; 0
     2fe:	21 e0       	ldi	r18, 0x01	; 1
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	02 c0       	rjmp	.+4      	; 0x308 <__EEPROM_REGION_LENGTH__+0x108>
     304:	22 0f       	add	r18, r18
     306:	33 1f       	adc	r19, r19
     308:	4a 95       	dec	r20
     30a:	e2 f7       	brpl	.-8      	; 0x304 <__EEPROM_REGION_LENGTH__+0x104>
     30c:	20 95       	com	r18
     30e:	26 23       	and	r18, r22
     310:	fc 01       	movw	r30, r24
     312:	20 83       	st	Z, r18
						break;
     314:	3f c0       	rjmp	.+126    	; 0x394 <__EEPROM_REGION_LENGTH__+0x194>
					case INPUT_PULLUP:
						/*	CLEAR DDxn AND SET PORTxn	*/
						CLR_BIT(GPIO_DDRC,copy_u8PinNumber);
     316:	84 e3       	ldi	r24, 0x34	; 52
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	24 e3       	ldi	r18, 0x34	; 52
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	f9 01       	movw	r30, r18
     320:	20 81       	ld	r18, Z
     322:	62 2f       	mov	r22, r18
     324:	2a 81       	ldd	r18, Y+2	; 0x02
     326:	42 2f       	mov	r20, r18
     328:	50 e0       	ldi	r21, 0x00	; 0
     32a:	21 e0       	ldi	r18, 0x01	; 1
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	02 c0       	rjmp	.+4      	; 0x334 <__EEPROM_REGION_LENGTH__+0x134>
     330:	22 0f       	add	r18, r18
     332:	33 1f       	adc	r19, r19
     334:	4a 95       	dec	r20
     336:	e2 f7       	brpl	.-8      	; 0x330 <__EEPROM_REGION_LENGTH__+0x130>
     338:	20 95       	com	r18
     33a:	26 23       	and	r18, r22
     33c:	fc 01       	movw	r30, r24
     33e:	20 83       	st	Z, r18
						SET_BIT(GPIO_PORTC,copy_u8PinNumber);
     340:	85 e3       	ldi	r24, 0x35	; 53
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	25 e3       	ldi	r18, 0x35	; 53
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	f9 01       	movw	r30, r18
     34a:	20 81       	ld	r18, Z
     34c:	62 2f       	mov	r22, r18
     34e:	2a 81       	ldd	r18, Y+2	; 0x02
     350:	42 2f       	mov	r20, r18
     352:	50 e0       	ldi	r21, 0x00	; 0
     354:	21 e0       	ldi	r18, 0x01	; 1
     356:	30 e0       	ldi	r19, 0x00	; 0
     358:	02 c0       	rjmp	.+4      	; 0x35e <__EEPROM_REGION_LENGTH__+0x15e>
     35a:	22 0f       	add	r18, r18
     35c:	33 1f       	adc	r19, r19
     35e:	4a 95       	dec	r20
     360:	e2 f7       	brpl	.-8      	; 0x35a <__EEPROM_REGION_LENGTH__+0x15a>
     362:	26 2b       	or	r18, r22
     364:	fc 01       	movw	r30, r24
     366:	20 83       	st	Z, r18
						break;
     368:	15 c0       	rjmp	.+42     	; 0x394 <__EEPROM_REGION_LENGTH__+0x194>
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRC,copy_u8PinNumber);
     36a:	84 e3       	ldi	r24, 0x34	; 52
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	24 e3       	ldi	r18, 0x34	; 52
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	f9 01       	movw	r30, r18
     374:	20 81       	ld	r18, Z
     376:	62 2f       	mov	r22, r18
     378:	2a 81       	ldd	r18, Y+2	; 0x02
     37a:	42 2f       	mov	r20, r18
     37c:	50 e0       	ldi	r21, 0x00	; 0
     37e:	21 e0       	ldi	r18, 0x01	; 1
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	02 c0       	rjmp	.+4      	; 0x388 <__EEPROM_REGION_LENGTH__+0x188>
     384:	22 0f       	add	r18, r18
     386:	33 1f       	adc	r19, r19
     388:	4a 95       	dec	r20
     38a:	e2 f7       	brpl	.-8      	; 0x384 <__EEPROM_REGION_LENGTH__+0x184>
     38c:	26 2b       	or	r18, r22
     38e:	fc 01       	movw	r30, r24
     390:	20 83       	st	Z, r18
						break;
     392:	00 00       	nop
					default:	break ;
				}
				break ;
     394:	78 c0       	rjmp	.+240    	; 0x486 <__stack+0x27>
			case PORTD :
				switch(copy_u8PinDirection)
     396:	8b 81       	ldd	r24, Y+3	; 0x03
     398:	88 2f       	mov	r24, r24
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	81 30       	cpi	r24, 0x01	; 1
     39e:	91 05       	cpc	r25, r1
     3a0:	09 f4       	brne	.+2      	; 0x3a4 <__EEPROM_REGION_LENGTH__+0x1a4>
     3a2:	5b c0       	rjmp	.+182    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
     3a4:	82 30       	cpi	r24, 0x02	; 2
     3a6:	91 05       	cpc	r25, r1
     3a8:	71 f1       	breq	.+92     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
     3aa:	89 2b       	or	r24, r25
     3ac:	09 f0       	breq	.+2      	; 0x3b0 <__EEPROM_REGION_LENGTH__+0x1b0>
						break;
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRD,copy_u8PinNumber);
						break;
					default:	break ;
     3ae:	6a c0       	rjmp	.+212    	; 0x484 <__stack+0x25>
			case PORTD :
				switch(copy_u8PinDirection)
				{
					case INPUT_FLOAT:
						/*	CLEAR DDxn AND PORTxn	*/
						CLR_BIT(GPIO_DDRD,copy_u8PinNumber);
     3b0:	81 e3       	ldi	r24, 0x31	; 49
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	21 e3       	ldi	r18, 0x31	; 49
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	f9 01       	movw	r30, r18
     3ba:	20 81       	ld	r18, Z
     3bc:	62 2f       	mov	r22, r18
     3be:	2a 81       	ldd	r18, Y+2	; 0x02
     3c0:	42 2f       	mov	r20, r18
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	21 e0       	ldi	r18, 0x01	; 1
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	02 c0       	rjmp	.+4      	; 0x3ce <__EEPROM_REGION_LENGTH__+0x1ce>
     3ca:	22 0f       	add	r18, r18
     3cc:	33 1f       	adc	r19, r19
     3ce:	4a 95       	dec	r20
     3d0:	e2 f7       	brpl	.-8      	; 0x3ca <__EEPROM_REGION_LENGTH__+0x1ca>
     3d2:	20 95       	com	r18
     3d4:	26 23       	and	r18, r22
     3d6:	fc 01       	movw	r30, r24
     3d8:	20 83       	st	Z, r18
						CLR_BIT(GPIO_PORTD,copy_u8PinNumber);
     3da:	82 e3       	ldi	r24, 0x32	; 50
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	22 e3       	ldi	r18, 0x32	; 50
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	f9 01       	movw	r30, r18
     3e4:	20 81       	ld	r18, Z
     3e6:	62 2f       	mov	r22, r18
     3e8:	2a 81       	ldd	r18, Y+2	; 0x02
     3ea:	42 2f       	mov	r20, r18
     3ec:	50 e0       	ldi	r21, 0x00	; 0
     3ee:	21 e0       	ldi	r18, 0x01	; 1
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <__EEPROM_REGION_LENGTH__+0x1f8>
     3f4:	22 0f       	add	r18, r18
     3f6:	33 1f       	adc	r19, r19
     3f8:	4a 95       	dec	r20
     3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <__EEPROM_REGION_LENGTH__+0x1f4>
     3fc:	20 95       	com	r18
     3fe:	26 23       	and	r18, r22
     400:	fc 01       	movw	r30, r24
     402:	20 83       	st	Z, r18
						break;
     404:	3f c0       	rjmp	.+126    	; 0x484 <__stack+0x25>
					case INPUT_PULLUP:
						/*	CLEAR DDxn AND SET PORTxn	*/
						CLR_BIT(GPIO_DDRD,copy_u8PinNumber);
     406:	81 e3       	ldi	r24, 0x31	; 49
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	21 e3       	ldi	r18, 0x31	; 49
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	f9 01       	movw	r30, r18
     410:	20 81       	ld	r18, Z
     412:	62 2f       	mov	r22, r18
     414:	2a 81       	ldd	r18, Y+2	; 0x02
     416:	42 2f       	mov	r20, r18
     418:	50 e0       	ldi	r21, 0x00	; 0
     41a:	21 e0       	ldi	r18, 0x01	; 1
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	02 c0       	rjmp	.+4      	; 0x424 <__DATA_REGION_LENGTH__+0x24>
     420:	22 0f       	add	r18, r18
     422:	33 1f       	adc	r19, r19
     424:	4a 95       	dec	r20
     426:	e2 f7       	brpl	.-8      	; 0x420 <__DATA_REGION_LENGTH__+0x20>
     428:	20 95       	com	r18
     42a:	26 23       	and	r18, r22
     42c:	fc 01       	movw	r30, r24
     42e:	20 83       	st	Z, r18
						SET_BIT(GPIO_PORTD,copy_u8PinNumber);
     430:	82 e3       	ldi	r24, 0x32	; 50
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	22 e3       	ldi	r18, 0x32	; 50
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	f9 01       	movw	r30, r18
     43a:	20 81       	ld	r18, Z
     43c:	62 2f       	mov	r22, r18
     43e:	2a 81       	ldd	r18, Y+2	; 0x02
     440:	42 2f       	mov	r20, r18
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	21 e0       	ldi	r18, 0x01	; 1
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	02 c0       	rjmp	.+4      	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     44a:	22 0f       	add	r18, r18
     44c:	33 1f       	adc	r19, r19
     44e:	4a 95       	dec	r20
     450:	e2 f7       	brpl	.-8      	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
     452:	26 2b       	or	r18, r22
     454:	fc 01       	movw	r30, r24
     456:	20 83       	st	Z, r18
						break;
     458:	15 c0       	rjmp	.+42     	; 0x484 <__stack+0x25>
					case OUTPUT:	
						/* SET DDxn	*/
						SET_BIT(GPIO_DDRD,copy_u8PinNumber);
     45a:	81 e3       	ldi	r24, 0x31	; 49
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	21 e3       	ldi	r18, 0x31	; 49
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	f9 01       	movw	r30, r18
     464:	20 81       	ld	r18, Z
     466:	62 2f       	mov	r22, r18
     468:	2a 81       	ldd	r18, Y+2	; 0x02
     46a:	42 2f       	mov	r20, r18
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	21 e0       	ldi	r18, 0x01	; 1
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	02 c0       	rjmp	.+4      	; 0x478 <__stack+0x19>
     474:	22 0f       	add	r18, r18
     476:	33 1f       	adc	r19, r19
     478:	4a 95       	dec	r20
     47a:	e2 f7       	brpl	.-8      	; 0x474 <__stack+0x15>
     47c:	26 2b       	or	r18, r22
     47e:	fc 01       	movw	r30, r24
     480:	20 83       	st	Z, r18
						break;
     482:	00 00       	nop
					default:	break ;
				}
				break ;
     484:	00 00       	nop
	}
	else
	{
		//<!TODO> ERROR STATE
	}
}
     486:	00 00       	nop
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	08 95       	ret

00000494 <GPIO_voidSetPinValue>:
void GPIO_voidSetPinValue(u8 copy_u8PortId,u8 copy_u8PinNumber ,u8 copy_u8Value)
{
     494:	cf 93       	push	r28
     496:	df 93       	push	r29
     498:	00 d0       	rcall	.+0      	; 0x49a <GPIO_voidSetPinValue+0x6>
     49a:	1f 92       	push	r1
     49c:	cd b7       	in	r28, 0x3d	; 61
     49e:	de b7       	in	r29, 0x3e	; 62
     4a0:	89 83       	std	Y+1, r24	; 0x01
     4a2:	6a 83       	std	Y+2, r22	; 0x02
     4a4:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8PinNumber >= GPIO_FIRST_PIN && copy_u8PinNumber <= GPIO_LAST_PIN)
     4a6:	8a 81       	ldd	r24, Y+2	; 0x02
     4a8:	88 30       	cpi	r24, 0x08	; 8
     4aa:	08 f0       	brcs	.+2      	; 0x4ae <GPIO_voidSetPinValue+0x1a>
     4ac:	e5 c0       	rjmp	.+458    	; 0x678 <GPIO_voidSetPinValue+0x1e4>
	{
		switch(copy_u8PortId)
     4ae:	89 81       	ldd	r24, Y+1	; 0x01
     4b0:	88 2f       	mov	r24, r24
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	81 30       	cpi	r24, 0x01	; 1
     4b6:	91 05       	cpc	r25, r1
     4b8:	09 f4       	brne	.+2      	; 0x4bc <GPIO_voidSetPinValue+0x28>
     4ba:	42 c0       	rjmp	.+132    	; 0x540 <GPIO_voidSetPinValue+0xac>
     4bc:	82 30       	cpi	r24, 0x02	; 2
     4be:	91 05       	cpc	r25, r1
     4c0:	1c f4       	brge	.+6      	; 0x4c8 <GPIO_voidSetPinValue+0x34>
     4c2:	89 2b       	or	r24, r25
     4c4:	49 f0       	breq	.+18     	; 0x4d8 <GPIO_voidSetPinValue+0x44>
						CLR_BIT(GPIO_PORTD,copy_u8PinNumber);
						break;
					default:	break ;
				}
				break ;
			default: break ;
     4c6:	d8 c0       	rjmp	.+432    	; 0x678 <GPIO_voidSetPinValue+0x1e4>
}
void GPIO_voidSetPinValue(u8 copy_u8PortId,u8 copy_u8PinNumber ,u8 copy_u8Value)
{
	if(copy_u8PinNumber >= GPIO_FIRST_PIN && copy_u8PinNumber <= GPIO_LAST_PIN)
	{
		switch(copy_u8PortId)
     4c8:	82 30       	cpi	r24, 0x02	; 2
     4ca:	91 05       	cpc	r25, r1
     4cc:	09 f4       	brne	.+2      	; 0x4d0 <GPIO_voidSetPinValue+0x3c>
     4ce:	6c c0       	rjmp	.+216    	; 0x5a8 <GPIO_voidSetPinValue+0x114>
     4d0:	03 97       	sbiw	r24, 0x03	; 3
     4d2:	09 f4       	brne	.+2      	; 0x4d6 <GPIO_voidSetPinValue+0x42>
     4d4:	9d c0       	rjmp	.+314    	; 0x610 <GPIO_voidSetPinValue+0x17c>
						CLR_BIT(GPIO_PORTD,copy_u8PinNumber);
						break;
					default:	break ;
				}
				break ;
			default: break ;
     4d6:	d0 c0       	rjmp	.+416    	; 0x678 <GPIO_voidSetPinValue+0x1e4>
	if(copy_u8PinNumber >= GPIO_FIRST_PIN && copy_u8PinNumber <= GPIO_LAST_PIN)
	{
		switch(copy_u8PortId)
		{
			case PORTA :
				switch(copy_u8Value)
     4d8:	8b 81       	ldd	r24, Y+3	; 0x03
     4da:	88 2f       	mov	r24, r24
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	00 97       	sbiw	r24, 0x00	; 0
     4e0:	c1 f0       	breq	.+48     	; 0x512 <GPIO_voidSetPinValue+0x7e>
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	09 f0       	breq	.+2      	; 0x4e8 <GPIO_voidSetPinValue+0x54>
						break;
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTA,copy_u8PinNumber);
						break;
					default:	break ;
     4e6:	2b c0       	rjmp	.+86     	; 0x53e <GPIO_voidSetPinValue+0xaa>
			case PORTA :
				switch(copy_u8Value)
				{
					case HIGH:
						/*	SET PORTxn	*/
						SET_BIT(GPIO_PORTA,copy_u8PinNumber);
     4e8:	8b e3       	ldi	r24, 0x3B	; 59
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	2b e3       	ldi	r18, 0x3B	; 59
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	f9 01       	movw	r30, r18
     4f2:	20 81       	ld	r18, Z
     4f4:	62 2f       	mov	r22, r18
     4f6:	2a 81       	ldd	r18, Y+2	; 0x02
     4f8:	42 2f       	mov	r20, r18
     4fa:	50 e0       	ldi	r21, 0x00	; 0
     4fc:	21 e0       	ldi	r18, 0x01	; 1
     4fe:	30 e0       	ldi	r19, 0x00	; 0
     500:	02 c0       	rjmp	.+4      	; 0x506 <GPIO_voidSetPinValue+0x72>
     502:	22 0f       	add	r18, r18
     504:	33 1f       	adc	r19, r19
     506:	4a 95       	dec	r20
     508:	e2 f7       	brpl	.-8      	; 0x502 <GPIO_voidSetPinValue+0x6e>
     50a:	26 2b       	or	r18, r22
     50c:	fc 01       	movw	r30, r24
     50e:	20 83       	st	Z, r18
						break;
     510:	16 c0       	rjmp	.+44     	; 0x53e <GPIO_voidSetPinValue+0xaa>
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTA,copy_u8PinNumber);
     512:	8b e3       	ldi	r24, 0x3B	; 59
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	2b e3       	ldi	r18, 0x3B	; 59
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	f9 01       	movw	r30, r18
     51c:	20 81       	ld	r18, Z
     51e:	62 2f       	mov	r22, r18
     520:	2a 81       	ldd	r18, Y+2	; 0x02
     522:	42 2f       	mov	r20, r18
     524:	50 e0       	ldi	r21, 0x00	; 0
     526:	21 e0       	ldi	r18, 0x01	; 1
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	02 c0       	rjmp	.+4      	; 0x530 <GPIO_voidSetPinValue+0x9c>
     52c:	22 0f       	add	r18, r18
     52e:	33 1f       	adc	r19, r19
     530:	4a 95       	dec	r20
     532:	e2 f7       	brpl	.-8      	; 0x52c <GPIO_voidSetPinValue+0x98>
     534:	20 95       	com	r18
     536:	26 23       	and	r18, r22
     538:	fc 01       	movw	r30, r24
     53a:	20 83       	st	Z, r18
						break;
     53c:	00 00       	nop
					default:	break ;
				}
				break ;
     53e:	9c c0       	rjmp	.+312    	; 0x678 <GPIO_voidSetPinValue+0x1e4>
			case PORTB : 
				switch(copy_u8Value)
     540:	8b 81       	ldd	r24, Y+3	; 0x03
     542:	88 2f       	mov	r24, r24
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	00 97       	sbiw	r24, 0x00	; 0
     548:	c1 f0       	breq	.+48     	; 0x57a <GPIO_voidSetPinValue+0xe6>
     54a:	01 97       	sbiw	r24, 0x01	; 1
     54c:	09 f0       	breq	.+2      	; 0x550 <GPIO_voidSetPinValue+0xbc>
						break;
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTB,copy_u8PinNumber);
						break;
					default:	break ;
     54e:	2b c0       	rjmp	.+86     	; 0x5a6 <GPIO_voidSetPinValue+0x112>
			case PORTB : 
				switch(copy_u8Value)
				{
					case HIGH:
						/*	SET PORTxn	*/
						SET_BIT(GPIO_PORTB,copy_u8PinNumber);
     550:	88 e3       	ldi	r24, 0x38	; 56
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	28 e3       	ldi	r18, 0x38	; 56
     556:	30 e0       	ldi	r19, 0x00	; 0
     558:	f9 01       	movw	r30, r18
     55a:	20 81       	ld	r18, Z
     55c:	62 2f       	mov	r22, r18
     55e:	2a 81       	ldd	r18, Y+2	; 0x02
     560:	42 2f       	mov	r20, r18
     562:	50 e0       	ldi	r21, 0x00	; 0
     564:	21 e0       	ldi	r18, 0x01	; 1
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	02 c0       	rjmp	.+4      	; 0x56e <GPIO_voidSetPinValue+0xda>
     56a:	22 0f       	add	r18, r18
     56c:	33 1f       	adc	r19, r19
     56e:	4a 95       	dec	r20
     570:	e2 f7       	brpl	.-8      	; 0x56a <GPIO_voidSetPinValue+0xd6>
     572:	26 2b       	or	r18, r22
     574:	fc 01       	movw	r30, r24
     576:	20 83       	st	Z, r18
						break;
     578:	16 c0       	rjmp	.+44     	; 0x5a6 <GPIO_voidSetPinValue+0x112>
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTB,copy_u8PinNumber);
     57a:	88 e3       	ldi	r24, 0x38	; 56
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	28 e3       	ldi	r18, 0x38	; 56
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	f9 01       	movw	r30, r18
     584:	20 81       	ld	r18, Z
     586:	62 2f       	mov	r22, r18
     588:	2a 81       	ldd	r18, Y+2	; 0x02
     58a:	42 2f       	mov	r20, r18
     58c:	50 e0       	ldi	r21, 0x00	; 0
     58e:	21 e0       	ldi	r18, 0x01	; 1
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	02 c0       	rjmp	.+4      	; 0x598 <GPIO_voidSetPinValue+0x104>
     594:	22 0f       	add	r18, r18
     596:	33 1f       	adc	r19, r19
     598:	4a 95       	dec	r20
     59a:	e2 f7       	brpl	.-8      	; 0x594 <GPIO_voidSetPinValue+0x100>
     59c:	20 95       	com	r18
     59e:	26 23       	and	r18, r22
     5a0:	fc 01       	movw	r30, r24
     5a2:	20 83       	st	Z, r18
						break;
     5a4:	00 00       	nop
					default:	break ;
				}
				break ;
     5a6:	68 c0       	rjmp	.+208    	; 0x678 <GPIO_voidSetPinValue+0x1e4>
			case PORTC :
				switch(copy_u8Value)
     5a8:	8b 81       	ldd	r24, Y+3	; 0x03
     5aa:	88 2f       	mov	r24, r24
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	00 97       	sbiw	r24, 0x00	; 0
     5b0:	c1 f0       	breq	.+48     	; 0x5e2 <GPIO_voidSetPinValue+0x14e>
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	09 f0       	breq	.+2      	; 0x5b8 <GPIO_voidSetPinValue+0x124>
						break;
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTC,copy_u8PinNumber);
						break;
					default:	break ;
     5b6:	2b c0       	rjmp	.+86     	; 0x60e <GPIO_voidSetPinValue+0x17a>
			case PORTC :
				switch(copy_u8Value)
				{
					case HIGH:
						/*	SET PORTxn	*/
						SET_BIT(GPIO_PORTC,copy_u8PinNumber);
     5b8:	85 e3       	ldi	r24, 0x35	; 53
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	25 e3       	ldi	r18, 0x35	; 53
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	f9 01       	movw	r30, r18
     5c2:	20 81       	ld	r18, Z
     5c4:	62 2f       	mov	r22, r18
     5c6:	2a 81       	ldd	r18, Y+2	; 0x02
     5c8:	42 2f       	mov	r20, r18
     5ca:	50 e0       	ldi	r21, 0x00	; 0
     5cc:	21 e0       	ldi	r18, 0x01	; 1
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <GPIO_voidSetPinValue+0x142>
     5d2:	22 0f       	add	r18, r18
     5d4:	33 1f       	adc	r19, r19
     5d6:	4a 95       	dec	r20
     5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <GPIO_voidSetPinValue+0x13e>
     5da:	26 2b       	or	r18, r22
     5dc:	fc 01       	movw	r30, r24
     5de:	20 83       	st	Z, r18
						break;
     5e0:	16 c0       	rjmp	.+44     	; 0x60e <GPIO_voidSetPinValue+0x17a>
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTC,copy_u8PinNumber);
     5e2:	85 e3       	ldi	r24, 0x35	; 53
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	25 e3       	ldi	r18, 0x35	; 53
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	f9 01       	movw	r30, r18
     5ec:	20 81       	ld	r18, Z
     5ee:	62 2f       	mov	r22, r18
     5f0:	2a 81       	ldd	r18, Y+2	; 0x02
     5f2:	42 2f       	mov	r20, r18
     5f4:	50 e0       	ldi	r21, 0x00	; 0
     5f6:	21 e0       	ldi	r18, 0x01	; 1
     5f8:	30 e0       	ldi	r19, 0x00	; 0
     5fa:	02 c0       	rjmp	.+4      	; 0x600 <GPIO_voidSetPinValue+0x16c>
     5fc:	22 0f       	add	r18, r18
     5fe:	33 1f       	adc	r19, r19
     600:	4a 95       	dec	r20
     602:	e2 f7       	brpl	.-8      	; 0x5fc <GPIO_voidSetPinValue+0x168>
     604:	20 95       	com	r18
     606:	26 23       	and	r18, r22
     608:	fc 01       	movw	r30, r24
     60a:	20 83       	st	Z, r18
						break;
     60c:	00 00       	nop
					default:	break ;
				}
				break ;
     60e:	34 c0       	rjmp	.+104    	; 0x678 <GPIO_voidSetPinValue+0x1e4>
			case PORTD :
				switch(copy_u8Value)
     610:	8b 81       	ldd	r24, Y+3	; 0x03
     612:	88 2f       	mov	r24, r24
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	00 97       	sbiw	r24, 0x00	; 0
     618:	c1 f0       	breq	.+48     	; 0x64a <GPIO_voidSetPinValue+0x1b6>
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	09 f0       	breq	.+2      	; 0x620 <GPIO_voidSetPinValue+0x18c>
						break;
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTD,copy_u8PinNumber);
						break;
					default:	break ;
     61e:	2b c0       	rjmp	.+86     	; 0x676 <GPIO_voidSetPinValue+0x1e2>
			case PORTD :
				switch(copy_u8Value)
				{
					case HIGH:
						/*	SET PORTxn	*/
						SET_BIT(GPIO_PORTD,copy_u8PinNumber);
     620:	82 e3       	ldi	r24, 0x32	; 50
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	22 e3       	ldi	r18, 0x32	; 50
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	f9 01       	movw	r30, r18
     62a:	20 81       	ld	r18, Z
     62c:	62 2f       	mov	r22, r18
     62e:	2a 81       	ldd	r18, Y+2	; 0x02
     630:	42 2f       	mov	r20, r18
     632:	50 e0       	ldi	r21, 0x00	; 0
     634:	21 e0       	ldi	r18, 0x01	; 1
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	02 c0       	rjmp	.+4      	; 0x63e <GPIO_voidSetPinValue+0x1aa>
     63a:	22 0f       	add	r18, r18
     63c:	33 1f       	adc	r19, r19
     63e:	4a 95       	dec	r20
     640:	e2 f7       	brpl	.-8      	; 0x63a <GPIO_voidSetPinValue+0x1a6>
     642:	26 2b       	or	r18, r22
     644:	fc 01       	movw	r30, r24
     646:	20 83       	st	Z, r18
						break;
     648:	16 c0       	rjmp	.+44     	; 0x676 <GPIO_voidSetPinValue+0x1e2>
					case LOW:
						/*	CLEAR PORTxn	*/
						CLR_BIT(GPIO_PORTD,copy_u8PinNumber);
     64a:	82 e3       	ldi	r24, 0x32	; 50
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	22 e3       	ldi	r18, 0x32	; 50
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	f9 01       	movw	r30, r18
     654:	20 81       	ld	r18, Z
     656:	62 2f       	mov	r22, r18
     658:	2a 81       	ldd	r18, Y+2	; 0x02
     65a:	42 2f       	mov	r20, r18
     65c:	50 e0       	ldi	r21, 0x00	; 0
     65e:	21 e0       	ldi	r18, 0x01	; 1
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	02 c0       	rjmp	.+4      	; 0x668 <GPIO_voidSetPinValue+0x1d4>
     664:	22 0f       	add	r18, r18
     666:	33 1f       	adc	r19, r19
     668:	4a 95       	dec	r20
     66a:	e2 f7       	brpl	.-8      	; 0x664 <GPIO_voidSetPinValue+0x1d0>
     66c:	20 95       	com	r18
     66e:	26 23       	and	r18, r22
     670:	fc 01       	movw	r30, r24
     672:	20 83       	st	Z, r18
						break;
     674:	00 00       	nop
					default:	break ;
				}
				break ;
     676:	00 00       	nop
	}
	else
	{
		//<!TODO> ERROR STATE
	}
}
     678:	00 00       	nop
     67a:	0f 90       	pop	r0
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	df 91       	pop	r29
     682:	cf 91       	pop	r28
     684:	08 95       	ret

00000686 <main>:
#include "BIT_MATH.h"
#include "GPIO_interface.h"
#include "_7Segment.h"
#include <util/delay.h>
int main (void)
{
     686:	cf 93       	push	r28
     688:	df 93       	push	r29
     68a:	cd b7       	in	r28, 0x3d	; 61
     68c:	de b7       	in	r29, 0x3e	; 62
     68e:	c0 54       	subi	r28, 0x40	; 64
     690:	d1 09       	sbc	r29, r1
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	f8 94       	cli
     696:	de bf       	out	0x3e, r29	; 62
     698:	0f be       	out	0x3f, r0	; 63
     69a:	cd bf       	out	0x3d, r28	; 61
	_7Segment_Config mySegment,mySegment2,mySegment3 ; 
	
	
	/************** Set 7 Segment Type ***********************/
	mySegment._7SegmentType = COMN_CATHOD ; 
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	89 8b       	std	Y+17, r24	; 0x11
	/************** Set 7 Segment Mode ***********************/
	mySegment._7SegmentMode = _7_SEG_NORMAL_MODE ;
     6a0:	1a 8a       	std	Y+18, r1	; 0x12
	/************** Set 7 Segment Pins ***********************/
	mySegment._7SegmentPins._7SEG_A_PORT = PORTA ;
     6a2:	1b 8a       	std	Y+19, r1	; 0x13
	mySegment._7SegmentPins._7SEG_A_PIN  =  PIN0 ;
     6a4:	1c 8a       	std	Y+20, r1	; 0x14
	mySegment._7SegmentPins._7SEG_B_PORT = PORTA ; 
     6a6:	1d 8a       	std	Y+21, r1	; 0x15
	mySegment._7SegmentPins._7SEG_B_PIN  =  PIN1  ;
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	8e 8b       	std	Y+22, r24	; 0x16
	mySegment._7SegmentPins._7SEG_C_PORT = PORTA ; 
     6ac:	1f 8a       	std	Y+23, r1	; 0x17
	mySegment._7SegmentPins._7SEG_C_PIN  =  PIN2  ;
     6ae:	82 e0       	ldi	r24, 0x02	; 2
     6b0:	88 8f       	std	Y+24, r24	; 0x18
	mySegment._7SegmentPins._7SEG_D_PORT = PORTA ; 
     6b2:	19 8e       	std	Y+25, r1	; 0x19
	mySegment._7SegmentPins._7SEG_D_PIN =  PIN3  ;	
     6b4:	83 e0       	ldi	r24, 0x03	; 3
     6b6:	8a 8f       	std	Y+26, r24	; 0x1a
	mySegment._7SegmentPins._7SEG_E_PORT = PORTA ; 
     6b8:	1b 8e       	std	Y+27, r1	; 0x1b
	mySegment._7SegmentPins._7SEG_E_PIN =  PIN4  ;
     6ba:	84 e0       	ldi	r24, 0x04	; 4
     6bc:	8c 8f       	std	Y+28, r24	; 0x1c
	mySegment._7SegmentPins._7SEG_F_PORT = PORTA ; 
     6be:	1d 8e       	std	Y+29, r1	; 0x1d
	mySegment._7SegmentPins._7SEG_F_PIN =  PIN5  ;
     6c0:	85 e0       	ldi	r24, 0x05	; 5
     6c2:	8e 8f       	std	Y+30, r24	; 0x1e
	mySegment._7SegmentPins._7SEG_G_PORT = PORTA  ;
     6c4:	1f 8e       	std	Y+31, r1	; 0x1f
	mySegment._7SegmentPins._7SEG_G_PIN =  PIN6  ;
     6c6:	86 e0       	ldi	r24, 0x06	; 6
     6c8:	88 a3       	std	Y+32, r24	; 0x20


	/************** Set 7 Segment2 Type ***********************/
	mySegment2._7SegmentType = COMN_ANODE ; 
     6ca:	19 a2       	std	Y+33, r1	; 0x21
	/************** Set 7 Segment2 Mode ***********************/
	mySegment2._7SegmentMode = _7_SEG_4_PIN_IC ;
     6cc:	81 e0       	ldi	r24, 0x01	; 1
     6ce:	8a a3       	std	Y+34, r24	; 0x22
	/************** Set 7 Segment2 Pins ***********************/
	mySegment2._7SegmentPins._7SEG_A_PORT = PORTD ;
     6d0:	83 e0       	ldi	r24, 0x03	; 3
     6d2:	8b a3       	std	Y+35, r24	; 0x23
	mySegment2._7SegmentPins._7SEG_A_PIN  = PIN0 ;
     6d4:	1c a2       	std	Y+36, r1	; 0x24
	mySegment2._7SegmentPins._7SEG_B_PORT = PORTD ; 
     6d6:	83 e0       	ldi	r24, 0x03	; 3
     6d8:	8d a3       	std	Y+37, r24	; 0x25
	mySegment2._7SegmentPins._7SEG_B_PIN  = PIN1  ;
     6da:	81 e0       	ldi	r24, 0x01	; 1
     6dc:	8e a3       	std	Y+38, r24	; 0x26
	mySegment2._7SegmentPins._7SEG_C_PORT = PORTD ; 
     6de:	83 e0       	ldi	r24, 0x03	; 3
     6e0:	8f a3       	std	Y+39, r24	; 0x27
	mySegment2._7SegmentPins._7SEG_C_PIN  = PIN2  ;
     6e2:	82 e0       	ldi	r24, 0x02	; 2
     6e4:	88 a7       	std	Y+40, r24	; 0x28
	mySegment2._7SegmentPins._7SEG_D_PORT = PORTD ; 
     6e6:	83 e0       	ldi	r24, 0x03	; 3
     6e8:	89 a7       	std	Y+41, r24	; 0x29
	mySegment2._7SegmentPins._7SEG_D_PIN  = PIN3  ;	
     6ea:	83 e0       	ldi	r24, 0x03	; 3
     6ec:	8a a7       	std	Y+42, r24	; 0x2a
	
	
	/************** Set 7 Segment3 Type ***********************/
	mySegment3._7SegmentType = COMN_ANODE ; 
     6ee:	19 aa       	std	Y+49, r1	; 0x31
	/************** Set 7 Segment2 Mode ***********************/
	mySegment3._7SegmentMode = _7_SEG_NORMAL_MODE ;
     6f0:	1a aa       	std	Y+50, r1	; 0x32
	/************** Set 7 Segment2 Pins ***********************/
	mySegment3._7SegmentPins._7SEG_A_PORT = PORTB ;
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	8b ab       	std	Y+51, r24	; 0x33
	mySegment3._7SegmentPins._7SEG_A_PIN  = PIN0 ;
     6f6:	1c aa       	std	Y+52, r1	; 0x34
	mySegment3._7SegmentPins._7SEG_B_PORT = PORTB ; 
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	8d ab       	std	Y+53, r24	; 0x35
	mySegment3._7SegmentPins._7SEG_B_PIN  = PIN1  ;
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	8e ab       	std	Y+54, r24	; 0x36
	mySegment3._7SegmentPins._7SEG_C_PORT = PORTB ; 
     700:	81 e0       	ldi	r24, 0x01	; 1
     702:	8f ab       	std	Y+55, r24	; 0x37
	mySegment3._7SegmentPins._7SEG_C_PIN  = PIN2  ;
     704:	82 e0       	ldi	r24, 0x02	; 2
     706:	88 af       	std	Y+56, r24	; 0x38
	mySegment3._7SegmentPins._7SEG_D_PORT = PORTB ; 
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	89 af       	std	Y+57, r24	; 0x39
	mySegment3._7SegmentPins._7SEG_D_PIN  = PIN3  ;	
     70c:	83 e0       	ldi	r24, 0x03	; 3
     70e:	8a af       	std	Y+58, r24	; 0x3a
	mySegment3._7SegmentPins._7SEG_E_PORT = PORTB ; 
     710:	81 e0       	ldi	r24, 0x01	; 1
     712:	8b af       	std	Y+59, r24	; 0x3b
	mySegment3._7SegmentPins._7SEG_E_PIN  = PIN4  ;	
     714:	84 e0       	ldi	r24, 0x04	; 4
     716:	8c af       	std	Y+60, r24	; 0x3c
	mySegment3._7SegmentPins._7SEG_F_PORT = PORTB ; 
     718:	81 e0       	ldi	r24, 0x01	; 1
     71a:	8d af       	std	Y+61, r24	; 0x3d
	mySegment3._7SegmentPins._7SEG_F_PIN  = PIN5  ;	
     71c:	85 e0       	ldi	r24, 0x05	; 5
     71e:	8e af       	std	Y+62, r24	; 0x3e
	mySegment3._7SegmentPins._7SEG_G_PORT = PORTB ; 
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	8f af       	std	Y+63, r24	; 0x3f
	mySegment3._7SegmentPins._7SEG_G_PIN  = PIN6  ;		
     724:	26 e0       	ldi	r18, 0x06	; 6
     726:	ce 01       	movw	r24, r28
     728:	80 5c       	subi	r24, 0xC0	; 192
     72a:	9f 4f       	sbci	r25, 0xFF	; 255
     72c:	fc 01       	movw	r30, r24
     72e:	20 83       	st	Z, r18
	/************** Set 7 Segment Init ***********************/
	HAL_7SegmentInit(&mySegment);
     730:	ce 01       	movw	r24, r28
     732:	41 96       	adiw	r24, 0x11	; 17
     734:	0e 94 36 04 	call	0x86c	; 0x86c <HAL_7SegmentInit>
	HAL_7SegmentInit(&mySegment2);
     738:	ce 01       	movw	r24, r28
     73a:	81 96       	adiw	r24, 0x21	; 33
     73c:	0e 94 36 04 	call	0x86c	; 0x86c <HAL_7SegmentInit>
	HAL_7SegmentInit(&mySegment3);
     740:	ce 01       	movw	r24, r28
     742:	c1 96       	adiw	r24, 0x31	; 49
     744:	0e 94 36 04 	call	0x86c	; 0x86c <HAL_7SegmentInit>
	

	while(1)
	{
		for (int i = 0 ; i <= 9 ; i++)
     748:	1a 82       	std	Y+2, r1	; 0x02
     74a:	19 82       	std	Y+1, r1	; 0x01
     74c:	89 c0       	rjmp	.+274    	; 0x860 <main+0x1da>
		{
		HAL_7SegmentWriteNumber(&mySegment,i);
     74e:	29 81       	ldd	r18, Y+1	; 0x01
     750:	ce 01       	movw	r24, r28
     752:	41 96       	adiw	r24, 0x11	; 17
     754:	62 2f       	mov	r22, r18
     756:	0e 94 da 04 	call	0x9b4	; 0x9b4 <HAL_7SegmentWriteNumber>
		HAL_7SegmentWriteNumber(&mySegment2,i);
     75a:	29 81       	ldd	r18, Y+1	; 0x01
     75c:	ce 01       	movw	r24, r28
     75e:	81 96       	adiw	r24, 0x21	; 33
     760:	62 2f       	mov	r22, r18
     762:	0e 94 da 04 	call	0x9b4	; 0x9b4 <HAL_7SegmentWriteNumber>
		HAL_7SegmentWriteNumber(&mySegment3,i);
     766:	29 81       	ldd	r18, Y+1	; 0x01
     768:	ce 01       	movw	r24, r28
     76a:	c1 96       	adiw	r24, 0x31	; 49
     76c:	62 2f       	mov	r22, r18
     76e:	0e 94 da 04 	call	0x9b4	; 0x9b4 <HAL_7SegmentWriteNumber>
     772:	80 e0       	ldi	r24, 0x00	; 0
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	a8 e4       	ldi	r26, 0x48	; 72
     778:	b4 e4       	ldi	r27, 0x44	; 68
     77a:	8b 83       	std	Y+3, r24	; 0x03
     77c:	9c 83       	std	Y+4, r25	; 0x04
     77e:	ad 83       	std	Y+5, r26	; 0x05
     780:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	4a e7       	ldi	r20, 0x7A	; 122
     788:	55 e4       	ldi	r21, 0x45	; 69
     78a:	6b 81       	ldd	r22, Y+3	; 0x03
     78c:	7c 81       	ldd	r23, Y+4	; 0x04
     78e:	8d 81       	ldd	r24, Y+5	; 0x05
     790:	9e 81       	ldd	r25, Y+6	; 0x06
     792:	0e 94 55 0e 	call	0x1caa	; 0x1caa <__mulsf3>
     796:	dc 01       	movw	r26, r24
     798:	cb 01       	movw	r24, r22
     79a:	8f 83       	std	Y+7, r24	; 0x07
     79c:	98 87       	std	Y+8, r25	; 0x08
     79e:	a9 87       	std	Y+9, r26	; 0x09
     7a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	40 e8       	ldi	r20, 0x80	; 128
     7a8:	5f e3       	ldi	r21, 0x3F	; 63
     7aa:	6f 81       	ldd	r22, Y+7	; 0x07
     7ac:	78 85       	ldd	r23, Y+8	; 0x08
     7ae:	89 85       	ldd	r24, Y+9	; 0x09
     7b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     7b2:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__cmpsf2>
     7b6:	88 23       	and	r24, r24
     7b8:	2c f4       	brge	.+10     	; 0x7c4 <main+0x13e>
		__ticks = 1;
     7ba:	81 e0       	ldi	r24, 0x01	; 1
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	9c 87       	std	Y+12, r25	; 0x0c
     7c0:	8b 87       	std	Y+11, r24	; 0x0b
     7c2:	3f c0       	rjmp	.+126    	; 0x842 <main+0x1bc>
	else if (__tmp > 65535)
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	3f ef       	ldi	r19, 0xFF	; 255
     7c8:	4f e7       	ldi	r20, 0x7F	; 127
     7ca:	57 e4       	ldi	r21, 0x47	; 71
     7cc:	6f 81       	ldd	r22, Y+7	; 0x07
     7ce:	78 85       	ldd	r23, Y+8	; 0x08
     7d0:	89 85       	ldd	r24, Y+9	; 0x09
     7d2:	9a 85       	ldd	r25, Y+10	; 0x0a
     7d4:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <__gesf2>
     7d8:	18 16       	cp	r1, r24
     7da:	4c f5       	brge	.+82     	; 0x82e <main+0x1a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	40 e2       	ldi	r20, 0x20	; 32
     7e2:	51 e4       	ldi	r21, 0x41	; 65
     7e4:	6b 81       	ldd	r22, Y+3	; 0x03
     7e6:	7c 81       	ldd	r23, Y+4	; 0x04
     7e8:	8d 81       	ldd	r24, Y+5	; 0x05
     7ea:	9e 81       	ldd	r25, Y+6	; 0x06
     7ec:	0e 94 55 0e 	call	0x1caa	; 0x1caa <__mulsf3>
     7f0:	dc 01       	movw	r26, r24
     7f2:	cb 01       	movw	r24, r22
     7f4:	bc 01       	movw	r22, r24
     7f6:	cd 01       	movw	r24, r26
     7f8:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__fixunssfsi>
     7fc:	dc 01       	movw	r26, r24
     7fe:	cb 01       	movw	r24, r22
     800:	9c 87       	std	Y+12, r25	; 0x0c
     802:	8b 87       	std	Y+11, r24	; 0x0b
     804:	0f c0       	rjmp	.+30     	; 0x824 <main+0x19e>
     806:	80 e9       	ldi	r24, 0x90	; 144
     808:	91 e0       	ldi	r25, 0x01	; 1
     80a:	9e 87       	std	Y+14, r25	; 0x0e
     80c:	8d 87       	std	Y+13, r24	; 0x0d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     80e:	8d 85       	ldd	r24, Y+13	; 0x0d
     810:	9e 85       	ldd	r25, Y+14	; 0x0e
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <main+0x18c>
     816:	9e 87       	std	Y+14, r25	; 0x0e
     818:	8d 87       	std	Y+13, r24	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     81a:	8b 85       	ldd	r24, Y+11	; 0x0b
     81c:	9c 85       	ldd	r25, Y+12	; 0x0c
     81e:	01 97       	sbiw	r24, 0x01	; 1
     820:	9c 87       	std	Y+12, r25	; 0x0c
     822:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     824:	8b 85       	ldd	r24, Y+11	; 0x0b
     826:	9c 85       	ldd	r25, Y+12	; 0x0c
     828:	89 2b       	or	r24, r25
     82a:	69 f7       	brne	.-38     	; 0x806 <main+0x180>
     82c:	14 c0       	rjmp	.+40     	; 0x856 <main+0x1d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     82e:	6f 81       	ldd	r22, Y+7	; 0x07
     830:	78 85       	ldd	r23, Y+8	; 0x08
     832:	89 85       	ldd	r24, Y+9	; 0x09
     834:	9a 85       	ldd	r25, Y+10	; 0x0a
     836:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__fixunssfsi>
     83a:	dc 01       	movw	r26, r24
     83c:	cb 01       	movw	r24, r22
     83e:	9c 87       	std	Y+12, r25	; 0x0c
     840:	8b 87       	std	Y+11, r24	; 0x0b
     842:	8b 85       	ldd	r24, Y+11	; 0x0b
     844:	9c 85       	ldd	r25, Y+12	; 0x0c
     846:	98 8b       	std	Y+16, r25	; 0x10
     848:	8f 87       	std	Y+15, r24	; 0x0f
     84a:	8f 85       	ldd	r24, Y+15	; 0x0f
     84c:	98 89       	ldd	r25, Y+16	; 0x10
     84e:	01 97       	sbiw	r24, 0x01	; 1
     850:	f1 f7       	brne	.-4      	; 0x84e <main+0x1c8>
     852:	98 8b       	std	Y+16, r25	; 0x10
     854:	8f 87       	std	Y+15, r24	; 0x0f
	HAL_7SegmentInit(&mySegment3);
	

	while(1)
	{
		for (int i = 0 ; i <= 9 ; i++)
     856:	89 81       	ldd	r24, Y+1	; 0x01
     858:	9a 81       	ldd	r25, Y+2	; 0x02
     85a:	01 96       	adiw	r24, 0x01	; 1
     85c:	9a 83       	std	Y+2, r25	; 0x02
     85e:	89 83       	std	Y+1, r24	; 0x01
     860:	89 81       	ldd	r24, Y+1	; 0x01
     862:	9a 81       	ldd	r25, Y+2	; 0x02
     864:	0a 97       	sbiw	r24, 0x0a	; 10
     866:	0c f4       	brge	.+2      	; 0x86a <main+0x1e4>
     868:	72 cf       	rjmp	.-284    	; 0x74e <main+0xc8>
			
		}


	
	}
     86a:	6e cf       	rjmp	.-292    	; 0x748 <main+0xc2>

0000086c <HAL_7SegmentInit>:

/******************************************************************************
* Function Definitions
*******************************************************************************/
_7Segment_ReturnState HAL_7SegmentInit(_7Segment_Config* ptr_config)
{
     86c:	cf 93       	push	r28
     86e:	df 93       	push	r29
     870:	00 d0       	rcall	.+0      	; 0x872 <HAL_7SegmentInit+0x6>
     872:	1f 92       	push	r1
     874:	cd b7       	in	r28, 0x3d	; 61
     876:	de b7       	in	r29, 0x3e	; 62
     878:	9b 83       	std	Y+3, r25	; 0x03
     87a:	8a 83       	std	Y+2, r24	; 0x02

	u8 LOC_u8Return = NO_ERROR; 
     87c:	19 82       	std	Y+1, r1	; 0x01
	/*			GPIO Init					*/

	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
     87e:	8a 81       	ldd	r24, Y+2	; 0x02
     880:	9b 81       	ldd	r25, Y+3	; 0x03
     882:	fc 01       	movw	r30, r24
     884:	81 81       	ldd	r24, Z+1	; 0x01
     886:	88 2f       	mov	r24, r24
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	00 97       	sbiw	r24, 0x00	; 0
     88c:	21 f0       	breq	.+8      	; 0x896 <HAL_7SegmentInit+0x2a>
     88e:	01 97       	sbiw	r24, 0x01	; 1
     890:	09 f4       	brne	.+2      	; 0x894 <HAL_7SegmentInit+0x28>
     892:	56 c0       	rjmp	.+172    	; 0x940 <HAL_7SegmentInit+0xd4>
     894:	86 c0       	rjmp	.+268    	; 0x9a2 <HAL_7SegmentInit+0x136>
	{
		case _7_SEG_NORMAL_MODE :
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, OUTPUT) ;
     896:	8a 81       	ldd	r24, Y+2	; 0x02
     898:	9b 81       	ldd	r25, Y+3	; 0x03
     89a:	fc 01       	movw	r30, r24
     89c:	23 81       	ldd	r18, Z+3	; 0x03
     89e:	8a 81       	ldd	r24, Y+2	; 0x02
     8a0:	9b 81       	ldd	r25, Y+3	; 0x03
     8a2:	fc 01       	movw	r30, r24
     8a4:	82 81       	ldd	r24, Z+2	; 0x02
     8a6:	41 e0       	ldi	r20, 0x01	; 1
     8a8:	62 2f       	mov	r22, r18
     8aa:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, OUTPUT) ;
     8ae:	8a 81       	ldd	r24, Y+2	; 0x02
     8b0:	9b 81       	ldd	r25, Y+3	; 0x03
     8b2:	fc 01       	movw	r30, r24
     8b4:	25 81       	ldd	r18, Z+5	; 0x05
     8b6:	8a 81       	ldd	r24, Y+2	; 0x02
     8b8:	9b 81       	ldd	r25, Y+3	; 0x03
     8ba:	fc 01       	movw	r30, r24
     8bc:	84 81       	ldd	r24, Z+4	; 0x04
     8be:	41 e0       	ldi	r20, 0x01	; 1
     8c0:	62 2f       	mov	r22, r18
     8c2:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, OUTPUT) ;
     8c6:	8a 81       	ldd	r24, Y+2	; 0x02
     8c8:	9b 81       	ldd	r25, Y+3	; 0x03
     8ca:	fc 01       	movw	r30, r24
     8cc:	27 81       	ldd	r18, Z+7	; 0x07
     8ce:	8a 81       	ldd	r24, Y+2	; 0x02
     8d0:	9b 81       	ldd	r25, Y+3	; 0x03
     8d2:	fc 01       	movw	r30, r24
     8d4:	86 81       	ldd	r24, Z+6	; 0x06
     8d6:	41 e0       	ldi	r20, 0x01	; 1
     8d8:	62 2f       	mov	r22, r18
     8da:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, OUTPUT) ;
     8de:	8a 81       	ldd	r24, Y+2	; 0x02
     8e0:	9b 81       	ldd	r25, Y+3	; 0x03
     8e2:	fc 01       	movw	r30, r24
     8e4:	21 85       	ldd	r18, Z+9	; 0x09
     8e6:	8a 81       	ldd	r24, Y+2	; 0x02
     8e8:	9b 81       	ldd	r25, Y+3	; 0x03
     8ea:	fc 01       	movw	r30, r24
     8ec:	80 85       	ldd	r24, Z+8	; 0x08
     8ee:	41 e0       	ldi	r20, 0x01	; 1
     8f0:	62 2f       	mov	r22, r18
     8f2:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, OUTPUT) ;
     8f6:	8a 81       	ldd	r24, Y+2	; 0x02
     8f8:	9b 81       	ldd	r25, Y+3	; 0x03
     8fa:	fc 01       	movw	r30, r24
     8fc:	23 85       	ldd	r18, Z+11	; 0x0b
     8fe:	8a 81       	ldd	r24, Y+2	; 0x02
     900:	9b 81       	ldd	r25, Y+3	; 0x03
     902:	fc 01       	movw	r30, r24
     904:	82 85       	ldd	r24, Z+10	; 0x0a
     906:	41 e0       	ldi	r20, 0x01	; 1
     908:	62 2f       	mov	r22, r18
     90a:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, OUTPUT) ;
     90e:	8a 81       	ldd	r24, Y+2	; 0x02
     910:	9b 81       	ldd	r25, Y+3	; 0x03
     912:	fc 01       	movw	r30, r24
     914:	25 85       	ldd	r18, Z+13	; 0x0d
     916:	8a 81       	ldd	r24, Y+2	; 0x02
     918:	9b 81       	ldd	r25, Y+3	; 0x03
     91a:	fc 01       	movw	r30, r24
     91c:	84 85       	ldd	r24, Z+12	; 0x0c
     91e:	41 e0       	ldi	r20, 0x01	; 1
     920:	62 2f       	mov	r22, r18
     922:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, OUTPUT) ;
     926:	8a 81       	ldd	r24, Y+2	; 0x02
     928:	9b 81       	ldd	r25, Y+3	; 0x03
     92a:	fc 01       	movw	r30, r24
     92c:	27 85       	ldd	r18, Z+15	; 0x0f
     92e:	8a 81       	ldd	r24, Y+2	; 0x02
     930:	9b 81       	ldd	r25, Y+3	; 0x03
     932:	fc 01       	movw	r30, r24
     934:	86 85       	ldd	r24, Z+14	; 0x0e
     936:	41 e0       	ldi	r20, 0x01	; 1
     938:	62 2f       	mov	r22, r18
     93a:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
		break ; 
     93e:	33 c0       	rjmp	.+102    	; 0x9a6 <HAL_7SegmentInit+0x13a>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, OUTPUT) ;
     940:	8a 81       	ldd	r24, Y+2	; 0x02
     942:	9b 81       	ldd	r25, Y+3	; 0x03
     944:	fc 01       	movw	r30, r24
     946:	23 81       	ldd	r18, Z+3	; 0x03
     948:	8a 81       	ldd	r24, Y+2	; 0x02
     94a:	9b 81       	ldd	r25, Y+3	; 0x03
     94c:	fc 01       	movw	r30, r24
     94e:	82 81       	ldd	r24, Z+2	; 0x02
     950:	41 e0       	ldi	r20, 0x01	; 1
     952:	62 2f       	mov	r22, r18
     954:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, OUTPUT) ;
     958:	8a 81       	ldd	r24, Y+2	; 0x02
     95a:	9b 81       	ldd	r25, Y+3	; 0x03
     95c:	fc 01       	movw	r30, r24
     95e:	25 81       	ldd	r18, Z+5	; 0x05
     960:	8a 81       	ldd	r24, Y+2	; 0x02
     962:	9b 81       	ldd	r25, Y+3	; 0x03
     964:	fc 01       	movw	r30, r24
     966:	84 81       	ldd	r24, Z+4	; 0x04
     968:	41 e0       	ldi	r20, 0x01	; 1
     96a:	62 2f       	mov	r22, r18
     96c:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, OUTPUT) ;
     970:	8a 81       	ldd	r24, Y+2	; 0x02
     972:	9b 81       	ldd	r25, Y+3	; 0x03
     974:	fc 01       	movw	r30, r24
     976:	27 81       	ldd	r18, Z+7	; 0x07
     978:	8a 81       	ldd	r24, Y+2	; 0x02
     97a:	9b 81       	ldd	r25, Y+3	; 0x03
     97c:	fc 01       	movw	r30, r24
     97e:	86 81       	ldd	r24, Z+6	; 0x06
     980:	41 e0       	ldi	r20, 0x01	; 1
     982:	62 2f       	mov	r22, r18
     984:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
			GPIO_voidSetPinDirection(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, OUTPUT) ;	 
     988:	8a 81       	ldd	r24, Y+2	; 0x02
     98a:	9b 81       	ldd	r25, Y+3	; 0x03
     98c:	fc 01       	movw	r30, r24
     98e:	21 85       	ldd	r18, Z+9	; 0x09
     990:	8a 81       	ldd	r24, Y+2	; 0x02
     992:	9b 81       	ldd	r25, Y+3	; 0x03
     994:	fc 01       	movw	r30, r24
     996:	80 85       	ldd	r24, Z+8	; 0x08
     998:	41 e0       	ldi	r20, 0x01	; 1
     99a:	62 2f       	mov	r22, r18
     99c:	0e 94 41 00 	call	0x82	; 0x82 <GPIO_voidSetPinDirection>
		break;
     9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <HAL_7SegmentInit+0x13a>
		default:
			LOC_u8Return= ERROR_OPRTION_MODE_SLCTION ; 
     9a2:	81 e0       	ldi	r24, 0x01	; 1
     9a4:	89 83       	std	Y+1, r24	; 0x01
	}


	return 	LOC_u8Return ; 
     9a6:	89 81       	ldd	r24, Y+1	; 0x01
}
     9a8:	0f 90       	pop	r0
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	df 91       	pop	r29
     9b0:	cf 91       	pop	r28
     9b2:	08 95       	ret

000009b4 <HAL_7SegmentWriteNumber>:

_7Segment_ReturnState HAL_7SegmentWriteNumber(_7Segment_Config* ptr_config, u8 copy_u8Number)
{
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	00 d0       	rcall	.+0      	; 0x9ba <HAL_7SegmentWriteNumber+0x6>
     9ba:	00 d0       	rcall	.+0      	; 0x9bc <HAL_7SegmentWriteNumber+0x8>
     9bc:	cd b7       	in	r28, 0x3d	; 61
     9be:	de b7       	in	r29, 0x3e	; 62
     9c0:	9b 83       	std	Y+3, r25	; 0x03
     9c2:	8a 83       	std	Y+2, r24	; 0x02
     9c4:	6c 83       	std	Y+4, r22	; 0x04
	u8 LOC_u8Return = NO_ERROR; 
     9c6:	19 82       	std	Y+1, r1	; 0x01
	LOC_u8Return = _7sevenSegmentErrorChecking(ptr_config) ; 
     9c8:	8a 81       	ldd	r24, Y+2	; 0x02
     9ca:	9b 81       	ldd	r25, Y+3	; 0x03
     9cc:	0e 94 04 05 	call	0xa08	; 0xa08 <_7sevenSegmentErrorChecking>
     9d0:	89 83       	std	Y+1, r24	; 0x01
	/*		ERROR CHECKER		*/
	if(LOC_u8Return != NO_ERROR)
     9d2:	89 81       	ldd	r24, Y+1	; 0x01
     9d4:	88 23       	and	r24, r24
     9d6:	11 f0       	breq	.+4      	; 0x9dc <HAL_7SegmentWriteNumber+0x28>
	{
		return LOC_u8Return; 
     9d8:	89 81       	ldd	r24, Y+1	; 0x01
     9da:	0f c0       	rjmp	.+30     	; 0x9fa <HAL_7SegmentWriteNumber+0x46>
	}
	/*		GOTO FUNC			*/
   (*arr_ofFunctions[copy_u8Number])(ptr_config);
     9dc:	8c 81       	ldd	r24, Y+4	; 0x04
     9de:	88 2f       	mov	r24, r24
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	88 0f       	add	r24, r24
     9e4:	99 1f       	adc	r25, r25
     9e6:	80 5a       	subi	r24, 0xA0	; 160
     9e8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ea:	fc 01       	movw	r30, r24
     9ec:	20 81       	ld	r18, Z
     9ee:	31 81       	ldd	r19, Z+1	; 0x01
     9f0:	8a 81       	ldd	r24, Y+2	; 0x02
     9f2:	9b 81       	ldd	r25, Y+3	; 0x03
     9f4:	f9 01       	movw	r30, r18
     9f6:	09 95       	icall

	/*		Return Value		*/	
	return LOC_u8Return; 
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
	
}
     9fa:	0f 90       	pop	r0
     9fc:	0f 90       	pop	r0
     9fe:	0f 90       	pop	r0
     a00:	0f 90       	pop	r0
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	08 95       	ret

00000a08 <_7sevenSegmentErrorChecking>:




_7Segment_ReturnState _7sevenSegmentErrorChecking(_7Segment_Config* ptr_errorConfig)
{
     a08:	cf 93       	push	r28
     a0a:	df 93       	push	r29
     a0c:	00 d0       	rcall	.+0      	; 0xa0e <_7sevenSegmentErrorChecking+0x6>
     a0e:	cd b7       	in	r28, 0x3d	; 61
     a10:	de b7       	in	r29, 0x3e	; 62
     a12:	9a 83       	std	Y+2, r25	; 0x02
     a14:	89 83       	std	Y+1, r24	; 0x01
	if (ACCESS_STRUCT(ptr_errorConfig,_7SegmentType) != COMN_ANODE && ACCESS_STRUCT(ptr_errorConfig,_7SegmentType) != COMN_CATHOD) 
     a16:	89 81       	ldd	r24, Y+1	; 0x01
     a18:	9a 81       	ldd	r25, Y+2	; 0x02
     a1a:	fc 01       	movw	r30, r24
     a1c:	80 81       	ld	r24, Z
     a1e:	88 23       	and	r24, r24
     a20:	41 f0       	breq	.+16     	; 0xa32 <_7sevenSegmentErrorChecking+0x2a>
     a22:	89 81       	ldd	r24, Y+1	; 0x01
     a24:	9a 81       	ldd	r25, Y+2	; 0x02
     a26:	fc 01       	movw	r30, r24
     a28:	80 81       	ld	r24, Z
     a2a:	81 30       	cpi	r24, 0x01	; 1
     a2c:	11 f0       	breq	.+4      	; 0xa32 <_7sevenSegmentErrorChecking+0x2a>
	{
		return ERROR_TYPE_SLCTION ;
     a2e:	82 e0       	ldi	r24, 0x02	; 2
     a30:	0f c0       	rjmp	.+30     	; 0xa50 <_7sevenSegmentErrorChecking+0x48>
	}
	else if(ACCESS_STRUCT(ptr_errorConfig,_7SegmentMode) != _7_SEG_NORMAL_MODE &&  ACCESS_STRUCT(ptr_errorConfig,_7SegmentMode) != _7_SEG_4_PIN_IC) 
     a32:	89 81       	ldd	r24, Y+1	; 0x01
     a34:	9a 81       	ldd	r25, Y+2	; 0x02
     a36:	fc 01       	movw	r30, r24
     a38:	81 81       	ldd	r24, Z+1	; 0x01
     a3a:	88 23       	and	r24, r24
     a3c:	41 f0       	breq	.+16     	; 0xa4e <_7sevenSegmentErrorChecking+0x46>
     a3e:	89 81       	ldd	r24, Y+1	; 0x01
     a40:	9a 81       	ldd	r25, Y+2	; 0x02
     a42:	fc 01       	movw	r30, r24
     a44:	81 81       	ldd	r24, Z+1	; 0x01
     a46:	81 30       	cpi	r24, 0x01	; 1
     a48:	11 f0       	breq	.+4      	; 0xa4e <_7sevenSegmentErrorChecking+0x46>
	{
		return ERROR_OPRTION_MODE_SLCTION ; 
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	01 c0       	rjmp	.+2      	; 0xa50 <_7sevenSegmentErrorChecking+0x48>
	}
	else
	{
		return NO_ERROR; 	
     a4e:	80 e0       	ldi	r24, 0x00	; 0
	}
	return NO_ERROR; 
}
     a50:	0f 90       	pop	r0
     a52:	0f 90       	pop	r0
     a54:	df 91       	pop	r29
     a56:	cf 91       	pop	r28
     a58:	08 95       	ret

00000a5a <_7SegZero>:

static void _7SegZero  (_7Segment_Config* ptr_config)
{
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	00 d0       	rcall	.+0      	; 0xa60 <_7SegZero+0x6>
     a60:	cd b7       	in	r28, 0x3d	; 61
     a62:	de b7       	in	r29, 0x3e	; 62
     a64:	9a 83       	std	Y+2, r25	; 0x02
     a66:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
     a68:	89 81       	ldd	r24, Y+1	; 0x01
     a6a:	9a 81       	ldd	r25, Y+2	; 0x02
     a6c:	fc 01       	movw	r30, r24
     a6e:	81 81       	ldd	r24, Z+1	; 0x01
     a70:	88 2f       	mov	r24, r24
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	00 97       	sbiw	r24, 0x00	; 0
     a76:	21 f0       	breq	.+8      	; 0xa80 <_7SegZero+0x26>
     a78:	01 97       	sbiw	r24, 0x01	; 1
     a7a:	09 f4       	brne	.+2      	; 0xa7e <_7SegZero+0x24>
     a7c:	77 c0       	rjmp	.+238    	; 0xb6c <_7SegZero+0x112>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			break;
	}
}
     a7e:	b7 c0       	rjmp	.+366    	; 0xbee <_7SegZero+0x194>
static void _7SegZero  (_7Segment_Config* ptr_config)
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     a80:	89 81       	ldd	r24, Y+1	; 0x01
     a82:	9a 81       	ldd	r25, Y+2	; 0x02
     a84:	fc 01       	movw	r30, r24
     a86:	30 81       	ld	r19, Z
     a88:	89 81       	ldd	r24, Y+1	; 0x01
     a8a:	9a 81       	ldd	r25, Y+2	; 0x02
     a8c:	fc 01       	movw	r30, r24
     a8e:	23 81       	ldd	r18, Z+3	; 0x03
     a90:	89 81       	ldd	r24, Y+1	; 0x01
     a92:	9a 81       	ldd	r25, Y+2	; 0x02
     a94:	fc 01       	movw	r30, r24
     a96:	82 81       	ldd	r24, Z+2	; 0x02
     a98:	43 2f       	mov	r20, r19
     a9a:	62 2f       	mov	r22, r18
     a9c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     aa0:	89 81       	ldd	r24, Y+1	; 0x01
     aa2:	9a 81       	ldd	r25, Y+2	; 0x02
     aa4:	fc 01       	movw	r30, r24
     aa6:	30 81       	ld	r19, Z
     aa8:	89 81       	ldd	r24, Y+1	; 0x01
     aaa:	9a 81       	ldd	r25, Y+2	; 0x02
     aac:	fc 01       	movw	r30, r24
     aae:	25 81       	ldd	r18, Z+5	; 0x05
     ab0:	89 81       	ldd	r24, Y+1	; 0x01
     ab2:	9a 81       	ldd	r25, Y+2	; 0x02
     ab4:	fc 01       	movw	r30, r24
     ab6:	84 81       	ldd	r24, Z+4	; 0x04
     ab8:	43 2f       	mov	r20, r19
     aba:	62 2f       	mov	r22, r18
     abc:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     ac0:	89 81       	ldd	r24, Y+1	; 0x01
     ac2:	9a 81       	ldd	r25, Y+2	; 0x02
     ac4:	fc 01       	movw	r30, r24
     ac6:	30 81       	ld	r19, Z
     ac8:	89 81       	ldd	r24, Y+1	; 0x01
     aca:	9a 81       	ldd	r25, Y+2	; 0x02
     acc:	fc 01       	movw	r30, r24
     ace:	27 81       	ldd	r18, Z+7	; 0x07
     ad0:	89 81       	ldd	r24, Y+1	; 0x01
     ad2:	9a 81       	ldd	r25, Y+2	; 0x02
     ad4:	fc 01       	movw	r30, r24
     ad6:	86 81       	ldd	r24, Z+6	; 0x06
     ad8:	43 2f       	mov	r20, r19
     ada:	62 2f       	mov	r22, r18
     adc:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     ae0:	89 81       	ldd	r24, Y+1	; 0x01
     ae2:	9a 81       	ldd	r25, Y+2	; 0x02
     ae4:	fc 01       	movw	r30, r24
     ae6:	30 81       	ld	r19, Z
     ae8:	89 81       	ldd	r24, Y+1	; 0x01
     aea:	9a 81       	ldd	r25, Y+2	; 0x02
     aec:	fc 01       	movw	r30, r24
     aee:	21 85       	ldd	r18, Z+9	; 0x09
     af0:	89 81       	ldd	r24, Y+1	; 0x01
     af2:	9a 81       	ldd	r25, Y+2	; 0x02
     af4:	fc 01       	movw	r30, r24
     af6:	80 85       	ldd	r24, Z+8	; 0x08
     af8:	43 2f       	mov	r20, r19
     afa:	62 2f       	mov	r22, r18
     afc:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     b00:	89 81       	ldd	r24, Y+1	; 0x01
     b02:	9a 81       	ldd	r25, Y+2	; 0x02
     b04:	fc 01       	movw	r30, r24
     b06:	30 81       	ld	r19, Z
     b08:	89 81       	ldd	r24, Y+1	; 0x01
     b0a:	9a 81       	ldd	r25, Y+2	; 0x02
     b0c:	fc 01       	movw	r30, r24
     b0e:	23 85       	ldd	r18, Z+11	; 0x0b
     b10:	89 81       	ldd	r24, Y+1	; 0x01
     b12:	9a 81       	ldd	r25, Y+2	; 0x02
     b14:	fc 01       	movw	r30, r24
     b16:	82 85       	ldd	r24, Z+10	; 0x0a
     b18:	43 2f       	mov	r20, r19
     b1a:	62 2f       	mov	r22, r18
     b1c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		 
     b20:	89 81       	ldd	r24, Y+1	; 0x01
     b22:	9a 81       	ldd	r25, Y+2	; 0x02
     b24:	fc 01       	movw	r30, r24
     b26:	30 81       	ld	r19, Z
     b28:	89 81       	ldd	r24, Y+1	; 0x01
     b2a:	9a 81       	ldd	r25, Y+2	; 0x02
     b2c:	fc 01       	movw	r30, r24
     b2e:	25 85       	ldd	r18, Z+13	; 0x0d
     b30:	89 81       	ldd	r24, Y+1	; 0x01
     b32:	9a 81       	ldd	r25, Y+2	; 0x02
     b34:	fc 01       	movw	r30, r24
     b36:	84 85       	ldd	r24, Z+12	; 0x0c
     b38:	43 2f       	mov	r20, r19
     b3a:	62 2f       	mov	r22, r18
     b3c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 				
     b40:	89 81       	ldd	r24, Y+1	; 0x01
     b42:	9a 81       	ldd	r25, Y+2	; 0x02
     b44:	fc 01       	movw	r30, r24
     b46:	90 81       	ld	r25, Z
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	99 23       	and	r25, r25
     b4c:	09 f0       	breq	.+2      	; 0xb50 <_7SegZero+0xf6>
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	38 2f       	mov	r19, r24
     b52:	89 81       	ldd	r24, Y+1	; 0x01
     b54:	9a 81       	ldd	r25, Y+2	; 0x02
     b56:	fc 01       	movw	r30, r24
     b58:	27 85       	ldd	r18, Z+15	; 0x0f
     b5a:	89 81       	ldd	r24, Y+1	; 0x01
     b5c:	9a 81       	ldd	r25, Y+2	; 0x02
     b5e:	fc 01       	movw	r30, r24
     b60:	86 85       	ldd	r24, Z+14	; 0x0e
     b62:	43 2f       	mov	r20, r19
     b64:	62 2f       	mov	r22, r18
     b66:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			break ;		 
     b6a:	41 c0       	rjmp	.+130    	; 0xbee <_7SegZero+0x194>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     b6c:	89 81       	ldd	r24, Y+1	; 0x01
     b6e:	9a 81       	ldd	r25, Y+2	; 0x02
     b70:	fc 01       	movw	r30, r24
     b72:	30 81       	ld	r19, Z
     b74:	89 81       	ldd	r24, Y+1	; 0x01
     b76:	9a 81       	ldd	r25, Y+2	; 0x02
     b78:	fc 01       	movw	r30, r24
     b7a:	23 81       	ldd	r18, Z+3	; 0x03
     b7c:	89 81       	ldd	r24, Y+1	; 0x01
     b7e:	9a 81       	ldd	r25, Y+2	; 0x02
     b80:	fc 01       	movw	r30, r24
     b82:	82 81       	ldd	r24, Z+2	; 0x02
     b84:	43 2f       	mov	r20, r19
     b86:	62 2f       	mov	r22, r18
     b88:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     b8c:	89 81       	ldd	r24, Y+1	; 0x01
     b8e:	9a 81       	ldd	r25, Y+2	; 0x02
     b90:	fc 01       	movw	r30, r24
     b92:	30 81       	ld	r19, Z
     b94:	89 81       	ldd	r24, Y+1	; 0x01
     b96:	9a 81       	ldd	r25, Y+2	; 0x02
     b98:	fc 01       	movw	r30, r24
     b9a:	25 81       	ldd	r18, Z+5	; 0x05
     b9c:	89 81       	ldd	r24, Y+1	; 0x01
     b9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ba0:	fc 01       	movw	r30, r24
     ba2:	84 81       	ldd	r24, Z+4	; 0x04
     ba4:	43 2f       	mov	r20, r19
     ba6:	62 2f       	mov	r22, r18
     ba8:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     bac:	89 81       	ldd	r24, Y+1	; 0x01
     bae:	9a 81       	ldd	r25, Y+2	; 0x02
     bb0:	fc 01       	movw	r30, r24
     bb2:	30 81       	ld	r19, Z
     bb4:	89 81       	ldd	r24, Y+1	; 0x01
     bb6:	9a 81       	ldd	r25, Y+2	; 0x02
     bb8:	fc 01       	movw	r30, r24
     bba:	27 81       	ldd	r18, Z+7	; 0x07
     bbc:	89 81       	ldd	r24, Y+1	; 0x01
     bbe:	9a 81       	ldd	r25, Y+2	; 0x02
     bc0:	fc 01       	movw	r30, r24
     bc2:	86 81       	ldd	r24, Z+6	; 0x06
     bc4:	43 2f       	mov	r20, r19
     bc6:	62 2f       	mov	r22, r18
     bc8:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     bcc:	89 81       	ldd	r24, Y+1	; 0x01
     bce:	9a 81       	ldd	r25, Y+2	; 0x02
     bd0:	fc 01       	movw	r30, r24
     bd2:	30 81       	ld	r19, Z
     bd4:	89 81       	ldd	r24, Y+1	; 0x01
     bd6:	9a 81       	ldd	r25, Y+2	; 0x02
     bd8:	fc 01       	movw	r30, r24
     bda:	21 85       	ldd	r18, Z+9	; 0x09
     bdc:	89 81       	ldd	r24, Y+1	; 0x01
     bde:	9a 81       	ldd	r25, Y+2	; 0x02
     be0:	fc 01       	movw	r30, r24
     be2:	80 85       	ldd	r24, Z+8	; 0x08
     be4:	43 2f       	mov	r20, r19
     be6:	62 2f       	mov	r22, r18
     be8:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			break;
     bec:	00 00       	nop
	}
}
     bee:	00 00       	nop
     bf0:	0f 90       	pop	r0
     bf2:	0f 90       	pop	r0
     bf4:	df 91       	pop	r29
     bf6:	cf 91       	pop	r28
     bf8:	08 95       	ret

00000bfa <_7SegOne>:
static void _7SegOne   (_7Segment_Config* ptr_config) 
{
     bfa:	cf 93       	push	r28
     bfc:	df 93       	push	r29
     bfe:	00 d0       	rcall	.+0      	; 0xc00 <_7SegOne+0x6>
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	9a 83       	std	Y+2, r25	; 0x02
     c06:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
     c08:	89 81       	ldd	r24, Y+1	; 0x01
     c0a:	9a 81       	ldd	r25, Y+2	; 0x02
     c0c:	fc 01       	movw	r30, r24
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	88 2f       	mov	r24, r24
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	21 f0       	breq	.+8      	; 0xc20 <_7SegOne+0x26>
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	09 f4       	brne	.+2      	; 0xc1e <_7SegOne+0x24>
     c1c:	8b c0       	rjmp	.+278    	; 0xd34 <_7SegOne+0x13a>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		break;
	}
}
     c1e:	d0 c0       	rjmp	.+416    	; 0xdc0 <_7SegOne+0x1c6>
static void _7SegOne   (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     c20:	89 81       	ldd	r24, Y+1	; 0x01
     c22:	9a 81       	ldd	r25, Y+2	; 0x02
     c24:	fc 01       	movw	r30, r24
     c26:	90 81       	ld	r25, Z
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	99 23       	and	r25, r25
     c2c:	09 f0       	breq	.+2      	; 0xc30 <_7SegOne+0x36>
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	38 2f       	mov	r19, r24
     c32:	89 81       	ldd	r24, Y+1	; 0x01
     c34:	9a 81       	ldd	r25, Y+2	; 0x02
     c36:	fc 01       	movw	r30, r24
     c38:	23 81       	ldd	r18, Z+3	; 0x03
     c3a:	89 81       	ldd	r24, Y+1	; 0x01
     c3c:	9a 81       	ldd	r25, Y+2	; 0x02
     c3e:	fc 01       	movw	r30, r24
     c40:	82 81       	ldd	r24, Z+2	; 0x02
     c42:	43 2f       	mov	r20, r19
     c44:	62 2f       	mov	r22, r18
     c46:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     c4a:	89 81       	ldd	r24, Y+1	; 0x01
     c4c:	9a 81       	ldd	r25, Y+2	; 0x02
     c4e:	fc 01       	movw	r30, r24
     c50:	30 81       	ld	r19, Z
     c52:	89 81       	ldd	r24, Y+1	; 0x01
     c54:	9a 81       	ldd	r25, Y+2	; 0x02
     c56:	fc 01       	movw	r30, r24
     c58:	25 81       	ldd	r18, Z+5	; 0x05
     c5a:	89 81       	ldd	r24, Y+1	; 0x01
     c5c:	9a 81       	ldd	r25, Y+2	; 0x02
     c5e:	fc 01       	movw	r30, r24
     c60:	84 81       	ldd	r24, Z+4	; 0x04
     c62:	43 2f       	mov	r20, r19
     c64:	62 2f       	mov	r22, r18
     c66:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     c6a:	89 81       	ldd	r24, Y+1	; 0x01
     c6c:	9a 81       	ldd	r25, Y+2	; 0x02
     c6e:	fc 01       	movw	r30, r24
     c70:	30 81       	ld	r19, Z
     c72:	89 81       	ldd	r24, Y+1	; 0x01
     c74:	9a 81       	ldd	r25, Y+2	; 0x02
     c76:	fc 01       	movw	r30, r24
     c78:	27 81       	ldd	r18, Z+7	; 0x07
     c7a:	89 81       	ldd	r24, Y+1	; 0x01
     c7c:	9a 81       	ldd	r25, Y+2	; 0x02
     c7e:	fc 01       	movw	r30, r24
     c80:	86 81       	ldd	r24, Z+6	; 0x06
     c82:	43 2f       	mov	r20, r19
     c84:	62 2f       	mov	r22, r18
     c86:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     c8a:	89 81       	ldd	r24, Y+1	; 0x01
     c8c:	9a 81       	ldd	r25, Y+2	; 0x02
     c8e:	fc 01       	movw	r30, r24
     c90:	90 81       	ld	r25, Z
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	99 23       	and	r25, r25
     c96:	09 f0       	breq	.+2      	; 0xc9a <_7SegOne+0xa0>
     c98:	80 e0       	ldi	r24, 0x00	; 0
     c9a:	38 2f       	mov	r19, r24
     c9c:	89 81       	ldd	r24, Y+1	; 0x01
     c9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ca0:	fc 01       	movw	r30, r24
     ca2:	21 85       	ldd	r18, Z+9	; 0x09
     ca4:	89 81       	ldd	r24, Y+1	; 0x01
     ca6:	9a 81       	ldd	r25, Y+2	; 0x02
     ca8:	fc 01       	movw	r30, r24
     caa:	80 85       	ldd	r24, Z+8	; 0x08
     cac:	43 2f       	mov	r20, r19
     cae:	62 2f       	mov	r22, r18
     cb0:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     cb4:	89 81       	ldd	r24, Y+1	; 0x01
     cb6:	9a 81       	ldd	r25, Y+2	; 0x02
     cb8:	fc 01       	movw	r30, r24
     cba:	90 81       	ld	r25, Z
     cbc:	81 e0       	ldi	r24, 0x01	; 1
     cbe:	99 23       	and	r25, r25
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <_7SegOne+0xca>
     cc2:	80 e0       	ldi	r24, 0x00	; 0
     cc4:	38 2f       	mov	r19, r24
     cc6:	89 81       	ldd	r24, Y+1	; 0x01
     cc8:	9a 81       	ldd	r25, Y+2	; 0x02
     cca:	fc 01       	movw	r30, r24
     ccc:	23 85       	ldd	r18, Z+11	; 0x0b
     cce:	89 81       	ldd	r24, Y+1	; 0x01
     cd0:	9a 81       	ldd	r25, Y+2	; 0x02
     cd2:	fc 01       	movw	r30, r24
     cd4:	82 85       	ldd	r24, Z+10	; 0x0a
     cd6:	43 2f       	mov	r20, r19
     cd8:	62 2f       	mov	r22, r18
     cda:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		 
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	9a 81       	ldd	r25, Y+2	; 0x02
     ce2:	fc 01       	movw	r30, r24
     ce4:	90 81       	ld	r25, Z
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	99 23       	and	r25, r25
     cea:	09 f0       	breq	.+2      	; 0xcee <_7SegOne+0xf4>
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	38 2f       	mov	r19, r24
     cf0:	89 81       	ldd	r24, Y+1	; 0x01
     cf2:	9a 81       	ldd	r25, Y+2	; 0x02
     cf4:	fc 01       	movw	r30, r24
     cf6:	25 85       	ldd	r18, Z+13	; 0x0d
     cf8:	89 81       	ldd	r24, Y+1	; 0x01
     cfa:	9a 81       	ldd	r25, Y+2	; 0x02
     cfc:	fc 01       	movw	r30, r24
     cfe:	84 85       	ldd	r24, Z+12	; 0x0c
     d00:	43 2f       	mov	r20, r19
     d02:	62 2f       	mov	r22, r18
     d04:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	
     d08:	89 81       	ldd	r24, Y+1	; 0x01
     d0a:	9a 81       	ldd	r25, Y+2	; 0x02
     d0c:	fc 01       	movw	r30, r24
     d0e:	90 81       	ld	r25, Z
     d10:	81 e0       	ldi	r24, 0x01	; 1
     d12:	99 23       	and	r25, r25
     d14:	09 f0       	breq	.+2      	; 0xd18 <_7SegOne+0x11e>
     d16:	80 e0       	ldi	r24, 0x00	; 0
     d18:	38 2f       	mov	r19, r24
     d1a:	89 81       	ldd	r24, Y+1	; 0x01
     d1c:	9a 81       	ldd	r25, Y+2	; 0x02
     d1e:	fc 01       	movw	r30, r24
     d20:	27 85       	ldd	r18, Z+15	; 0x0f
     d22:	89 81       	ldd	r24, Y+1	; 0x01
     d24:	9a 81       	ldd	r25, Y+2	; 0x02
     d26:	fc 01       	movw	r30, r24
     d28:	86 85       	ldd	r24, Z+14	; 0x0e
     d2a:	43 2f       	mov	r20, r19
     d2c:	62 2f       	mov	r22, r18
     d2e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 break ;	 
     d32:	46 c0       	rjmp	.+140    	; 0xdc0 <_7SegOne+0x1c6>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     d34:	89 81       	ldd	r24, Y+1	; 0x01
     d36:	9a 81       	ldd	r25, Y+2	; 0x02
     d38:	fc 01       	movw	r30, r24
     d3a:	90 81       	ld	r25, Z
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	99 23       	and	r25, r25
     d40:	09 f0       	breq	.+2      	; 0xd44 <_7SegOne+0x14a>
     d42:	80 e0       	ldi	r24, 0x00	; 0
     d44:	38 2f       	mov	r19, r24
     d46:	89 81       	ldd	r24, Y+1	; 0x01
     d48:	9a 81       	ldd	r25, Y+2	; 0x02
     d4a:	fc 01       	movw	r30, r24
     d4c:	23 81       	ldd	r18, Z+3	; 0x03
     d4e:	89 81       	ldd	r24, Y+1	; 0x01
     d50:	9a 81       	ldd	r25, Y+2	; 0x02
     d52:	fc 01       	movw	r30, r24
     d54:	82 81       	ldd	r24, Z+2	; 0x02
     d56:	43 2f       	mov	r20, r19
     d58:	62 2f       	mov	r22, r18
     d5a:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     d5e:	89 81       	ldd	r24, Y+1	; 0x01
     d60:	9a 81       	ldd	r25, Y+2	; 0x02
     d62:	fc 01       	movw	r30, r24
     d64:	30 81       	ld	r19, Z
     d66:	89 81       	ldd	r24, Y+1	; 0x01
     d68:	9a 81       	ldd	r25, Y+2	; 0x02
     d6a:	fc 01       	movw	r30, r24
     d6c:	25 81       	ldd	r18, Z+5	; 0x05
     d6e:	89 81       	ldd	r24, Y+1	; 0x01
     d70:	9a 81       	ldd	r25, Y+2	; 0x02
     d72:	fc 01       	movw	r30, r24
     d74:	84 81       	ldd	r24, Z+4	; 0x04
     d76:	43 2f       	mov	r20, r19
     d78:	62 2f       	mov	r22, r18
     d7a:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     d7e:	89 81       	ldd	r24, Y+1	; 0x01
     d80:	9a 81       	ldd	r25, Y+2	; 0x02
     d82:	fc 01       	movw	r30, r24
     d84:	30 81       	ld	r19, Z
     d86:	89 81       	ldd	r24, Y+1	; 0x01
     d88:	9a 81       	ldd	r25, Y+2	; 0x02
     d8a:	fc 01       	movw	r30, r24
     d8c:	27 81       	ldd	r18, Z+7	; 0x07
     d8e:	89 81       	ldd	r24, Y+1	; 0x01
     d90:	9a 81       	ldd	r25, Y+2	; 0x02
     d92:	fc 01       	movw	r30, r24
     d94:	86 81       	ldd	r24, Z+6	; 0x06
     d96:	43 2f       	mov	r20, r19
     d98:	62 2f       	mov	r22, r18
     d9a:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
     d9e:	89 81       	ldd	r24, Y+1	; 0x01
     da0:	9a 81       	ldd	r25, Y+2	; 0x02
     da2:	fc 01       	movw	r30, r24
     da4:	30 81       	ld	r19, Z
     da6:	89 81       	ldd	r24, Y+1	; 0x01
     da8:	9a 81       	ldd	r25, Y+2	; 0x02
     daa:	fc 01       	movw	r30, r24
     dac:	21 85       	ldd	r18, Z+9	; 0x09
     dae:	89 81       	ldd	r24, Y+1	; 0x01
     db0:	9a 81       	ldd	r25, Y+2	; 0x02
     db2:	fc 01       	movw	r30, r24
     db4:	80 85       	ldd	r24, Z+8	; 0x08
     db6:	43 2f       	mov	r20, r19
     db8:	62 2f       	mov	r22, r18
     dba:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break;
     dbe:	00 00       	nop
	}
}
     dc0:	00 00       	nop
     dc2:	0f 90       	pop	r0
     dc4:	0f 90       	pop	r0
     dc6:	df 91       	pop	r29
     dc8:	cf 91       	pop	r28
     dca:	08 95       	ret

00000dcc <_7SegTwo>:
static void _7SegTwo   (_7Segment_Config* ptr_config) 
{
     dcc:	cf 93       	push	r28
     dce:	df 93       	push	r29
     dd0:	00 d0       	rcall	.+0      	; 0xdd2 <_7SegTwo+0x6>
     dd2:	cd b7       	in	r28, 0x3d	; 61
     dd4:	de b7       	in	r29, 0x3e	; 62
     dd6:	9a 83       	std	Y+2, r25	; 0x02
     dd8:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
     dda:	89 81       	ldd	r24, Y+1	; 0x01
     ddc:	9a 81       	ldd	r25, Y+2	; 0x02
     dde:	fc 01       	movw	r30, r24
     de0:	81 81       	ldd	r24, Z+1	; 0x01
     de2:	88 2f       	mov	r24, r24
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	00 97       	sbiw	r24, 0x00	; 0
     de8:	21 f0       	breq	.+8      	; 0xdf2 <_7SegTwo+0x26>
     dea:	01 97       	sbiw	r24, 0x01	; 1
     dec:	09 f4       	brne	.+2      	; 0xdf0 <_7SegTwo+0x24>
     dee:	7c c0       	rjmp	.+248    	; 0xee8 <_7SegTwo+0x11c>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
		break;
	}
}
     df0:	c1 c0       	rjmp	.+386    	; 0xf74 <_7SegTwo+0x1a8>
static void _7SegTwo   (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A ON 
     df2:	89 81       	ldd	r24, Y+1	; 0x01
     df4:	9a 81       	ldd	r25, Y+2	; 0x02
     df6:	fc 01       	movw	r30, r24
     df8:	30 81       	ld	r19, Z
     dfa:	89 81       	ldd	r24, Y+1	; 0x01
     dfc:	9a 81       	ldd	r25, Y+2	; 0x02
     dfe:	fc 01       	movw	r30, r24
     e00:	23 81       	ldd	r18, Z+3	; 0x03
     e02:	89 81       	ldd	r24, Y+1	; 0x01
     e04:	9a 81       	ldd	r25, Y+2	; 0x02
     e06:	fc 01       	movw	r30, r24
     e08:	82 81       	ldd	r24, Z+2	; 0x02
     e0a:	43 2f       	mov	r20, r19
     e0c:	62 2f       	mov	r22, r18
     e0e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B ON
     e12:	89 81       	ldd	r24, Y+1	; 0x01
     e14:	9a 81       	ldd	r25, Y+2	; 0x02
     e16:	fc 01       	movw	r30, r24
     e18:	30 81       	ld	r19, Z
     e1a:	89 81       	ldd	r24, Y+1	; 0x01
     e1c:	9a 81       	ldd	r25, Y+2	; 0x02
     e1e:	fc 01       	movw	r30, r24
     e20:	25 81       	ldd	r18, Z+5	; 0x05
     e22:	89 81       	ldd	r24, Y+1	; 0x01
     e24:	9a 81       	ldd	r25, Y+2	; 0x02
     e26:	fc 01       	movw	r30, r24
     e28:	84 81       	ldd	r24, Z+4	; 0x04
     e2a:	43 2f       	mov	r20, r19
     e2c:	62 2f       	mov	r22, r18
     e2e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;	// C OFF
     e32:	89 81       	ldd	r24, Y+1	; 0x01
     e34:	9a 81       	ldd	r25, Y+2	; 0x02
     e36:	fc 01       	movw	r30, r24
     e38:	90 81       	ld	r25, Z
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	99 23       	and	r25, r25
     e3e:	09 f0       	breq	.+2      	; 0xe42 <_7SegTwo+0x76>
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	38 2f       	mov	r19, r24
     e44:	89 81       	ldd	r24, Y+1	; 0x01
     e46:	9a 81       	ldd	r25, Y+2	; 0x02
     e48:	fc 01       	movw	r30, r24
     e4a:	27 81       	ldd	r18, Z+7	; 0x07
     e4c:	89 81       	ldd	r24, Y+1	; 0x01
     e4e:	9a 81       	ldd	r25, Y+2	; 0x02
     e50:	fc 01       	movw	r30, r24
     e52:	86 81       	ldd	r24, Z+6	; 0x06
     e54:	43 2f       	mov	r20, r19
     e56:	62 2f       	mov	r22, r18
     e58:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D ON
     e5c:	89 81       	ldd	r24, Y+1	; 0x01
     e5e:	9a 81       	ldd	r25, Y+2	; 0x02
     e60:	fc 01       	movw	r30, r24
     e62:	30 81       	ld	r19, Z
     e64:	89 81       	ldd	r24, Y+1	; 0x01
     e66:	9a 81       	ldd	r25, Y+2	; 0x02
     e68:	fc 01       	movw	r30, r24
     e6a:	21 85       	ldd	r18, Z+9	; 0x09
     e6c:	89 81       	ldd	r24, Y+1	; 0x01
     e6e:	9a 81       	ldd	r25, Y+2	; 0x02
     e70:	fc 01       	movw	r30, r24
     e72:	80 85       	ldd	r24, Z+8	; 0x08
     e74:	43 2f       	mov	r20, r19
     e76:	62 2f       	mov	r22, r18
     e78:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E ON
     e7c:	89 81       	ldd	r24, Y+1	; 0x01
     e7e:	9a 81       	ldd	r25, Y+2	; 0x02
     e80:	fc 01       	movw	r30, r24
     e82:	30 81       	ld	r19, Z
     e84:	89 81       	ldd	r24, Y+1	; 0x01
     e86:	9a 81       	ldd	r25, Y+2	; 0x02
     e88:	fc 01       	movw	r30, r24
     e8a:	23 85       	ldd	r18, Z+11	; 0x0b
     e8c:	89 81       	ldd	r24, Y+1	; 0x01
     e8e:	9a 81       	ldd	r25, Y+2	; 0x02
     e90:	fc 01       	movw	r30, r24
     e92:	82 85       	ldd	r24, Z+10	; 0x0a
     e94:	43 2f       	mov	r20, r19
     e96:	62 2f       	mov	r22, r18
     e98:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F OFF
     e9c:	89 81       	ldd	r24, Y+1	; 0x01
     e9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ea0:	fc 01       	movw	r30, r24
     ea2:	90 81       	ld	r25, Z
     ea4:	81 e0       	ldi	r24, 0x01	; 1
     ea6:	99 23       	and	r25, r25
     ea8:	09 f0       	breq	.+2      	; 0xeac <_7SegTwo+0xe0>
     eaa:	80 e0       	ldi	r24, 0x00	; 0
     eac:	38 2f       	mov	r19, r24
     eae:	89 81       	ldd	r24, Y+1	; 0x01
     eb0:	9a 81       	ldd	r25, Y+2	; 0x02
     eb2:	fc 01       	movw	r30, r24
     eb4:	25 85       	ldd	r18, Z+13	; 0x0d
     eb6:	89 81       	ldd	r24, Y+1	; 0x01
     eb8:	9a 81       	ldd	r25, Y+2	; 0x02
     eba:	fc 01       	movw	r30, r24
     ebc:	84 85       	ldd	r24, Z+12	; 0x0c
     ebe:	43 2f       	mov	r20, r19
     ec0:	62 2f       	mov	r22, r18
     ec2:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G ON
     ec6:	89 81       	ldd	r24, Y+1	; 0x01
     ec8:	9a 81       	ldd	r25, Y+2	; 0x02
     eca:	fc 01       	movw	r30, r24
     ecc:	30 81       	ld	r19, Z
     ece:	89 81       	ldd	r24, Y+1	; 0x01
     ed0:	9a 81       	ldd	r25, Y+2	; 0x02
     ed2:	fc 01       	movw	r30, r24
     ed4:	27 85       	ldd	r18, Z+15	; 0x0f
     ed6:	89 81       	ldd	r24, Y+1	; 0x01
     ed8:	9a 81       	ldd	r25, Y+2	; 0x02
     eda:	fc 01       	movw	r30, r24
     edc:	86 85       	ldd	r24, Z+14	; 0x0e
     ede:	43 2f       	mov	r20, r19
     ee0:	62 2f       	mov	r22, r18
     ee2:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 break ;
     ee6:	46 c0       	rjmp	.+140    	; 0xf74 <_7SegTwo+0x1a8>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	9a 81       	ldd	r25, Y+2	; 0x02
     eec:	fc 01       	movw	r30, r24
     eee:	30 81       	ld	r19, Z
     ef0:	89 81       	ldd	r24, Y+1	; 0x01
     ef2:	9a 81       	ldd	r25, Y+2	; 0x02
     ef4:	fc 01       	movw	r30, r24
     ef6:	23 81       	ldd	r18, Z+3	; 0x03
     ef8:	89 81       	ldd	r24, Y+1	; 0x01
     efa:	9a 81       	ldd	r25, Y+2	; 0x02
     efc:	fc 01       	movw	r30, r24
     efe:	82 81       	ldd	r24, Z+2	; 0x02
     f00:	43 2f       	mov	r20, r19
     f02:	62 2f       	mov	r22, r18
     f04:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     f08:	89 81       	ldd	r24, Y+1	; 0x01
     f0a:	9a 81       	ldd	r25, Y+2	; 0x02
     f0c:	fc 01       	movw	r30, r24
     f0e:	90 81       	ld	r25, Z
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	99 23       	and	r25, r25
     f14:	09 f0       	breq	.+2      	; 0xf18 <_7SegTwo+0x14c>
     f16:	80 e0       	ldi	r24, 0x00	; 0
     f18:	38 2f       	mov	r19, r24
     f1a:	89 81       	ldd	r24, Y+1	; 0x01
     f1c:	9a 81       	ldd	r25, Y+2	; 0x02
     f1e:	fc 01       	movw	r30, r24
     f20:	25 81       	ldd	r18, Z+5	; 0x05
     f22:	89 81       	ldd	r24, Y+1	; 0x01
     f24:	9a 81       	ldd	r25, Y+2	; 0x02
     f26:	fc 01       	movw	r30, r24
     f28:	84 81       	ldd	r24, Z+4	; 0x04
     f2a:	43 2f       	mov	r20, r19
     f2c:	62 2f       	mov	r22, r18
     f2e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     f32:	89 81       	ldd	r24, Y+1	; 0x01
     f34:	9a 81       	ldd	r25, Y+2	; 0x02
     f36:	fc 01       	movw	r30, r24
     f38:	30 81       	ld	r19, Z
     f3a:	89 81       	ldd	r24, Y+1	; 0x01
     f3c:	9a 81       	ldd	r25, Y+2	; 0x02
     f3e:	fc 01       	movw	r30, r24
     f40:	27 81       	ldd	r18, Z+7	; 0x07
     f42:	89 81       	ldd	r24, Y+1	; 0x01
     f44:	9a 81       	ldd	r25, Y+2	; 0x02
     f46:	fc 01       	movw	r30, r24
     f48:	86 81       	ldd	r24, Z+6	; 0x06
     f4a:	43 2f       	mov	r20, r19
     f4c:	62 2f       	mov	r22, r18
     f4e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
     f52:	89 81       	ldd	r24, Y+1	; 0x01
     f54:	9a 81       	ldd	r25, Y+2	; 0x02
     f56:	fc 01       	movw	r30, r24
     f58:	30 81       	ld	r19, Z
     f5a:	89 81       	ldd	r24, Y+1	; 0x01
     f5c:	9a 81       	ldd	r25, Y+2	; 0x02
     f5e:	fc 01       	movw	r30, r24
     f60:	21 85       	ldd	r18, Z+9	; 0x09
     f62:	89 81       	ldd	r24, Y+1	; 0x01
     f64:	9a 81       	ldd	r25, Y+2	; 0x02
     f66:	fc 01       	movw	r30, r24
     f68:	80 85       	ldd	r24, Z+8	; 0x08
     f6a:	43 2f       	mov	r20, r19
     f6c:	62 2f       	mov	r22, r18
     f6e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break;
     f72:	00 00       	nop
	}
}
     f74:	00 00       	nop
     f76:	0f 90       	pop	r0
     f78:	0f 90       	pop	r0
     f7a:	df 91       	pop	r29
     f7c:	cf 91       	pop	r28
     f7e:	08 95       	ret

00000f80 <_7SegThree>:
static void _7SegThree (_7Segment_Config* ptr_config) 
{
     f80:	cf 93       	push	r28
     f82:	df 93       	push	r29
     f84:	00 d0       	rcall	.+0      	; 0xf86 <_7SegThree+0x6>
     f86:	cd b7       	in	r28, 0x3d	; 61
     f88:	de b7       	in	r29, 0x3e	; 62
     f8a:	9a 83       	std	Y+2, r25	; 0x02
     f8c:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
     f8e:	89 81       	ldd	r24, Y+1	; 0x01
     f90:	9a 81       	ldd	r25, Y+2	; 0x02
     f92:	fc 01       	movw	r30, r24
     f94:	81 81       	ldd	r24, Z+1	; 0x01
     f96:	88 2f       	mov	r24, r24
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	00 97       	sbiw	r24, 0x00	; 0
     f9c:	21 f0       	breq	.+8      	; 0xfa6 <_7SegThree+0x26>
     f9e:	01 97       	sbiw	r24, 0x01	; 1
     fa0:	09 f4       	brne	.+2      	; 0xfa4 <_7SegThree+0x24>
     fa2:	7c c0       	rjmp	.+248    	; 0x109c <_7SegThree+0x11c>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		break;
	}
}
     fa4:	c6 c0       	rjmp	.+396    	; 0x1132 <_7SegThree+0x1b2>
static void _7SegThree (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A ON 
     fa6:	89 81       	ldd	r24, Y+1	; 0x01
     fa8:	9a 81       	ldd	r25, Y+2	; 0x02
     faa:	fc 01       	movw	r30, r24
     fac:	30 81       	ld	r19, Z
     fae:	89 81       	ldd	r24, Y+1	; 0x01
     fb0:	9a 81       	ldd	r25, Y+2	; 0x02
     fb2:	fc 01       	movw	r30, r24
     fb4:	23 81       	ldd	r18, Z+3	; 0x03
     fb6:	89 81       	ldd	r24, Y+1	; 0x01
     fb8:	9a 81       	ldd	r25, Y+2	; 0x02
     fba:	fc 01       	movw	r30, r24
     fbc:	82 81       	ldd	r24, Z+2	; 0x02
     fbe:	43 2f       	mov	r20, r19
     fc0:	62 2f       	mov	r22, r18
     fc2:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B ON
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	9a 81       	ldd	r25, Y+2	; 0x02
     fca:	fc 01       	movw	r30, r24
     fcc:	30 81       	ld	r19, Z
     fce:	89 81       	ldd	r24, Y+1	; 0x01
     fd0:	9a 81       	ldd	r25, Y+2	; 0x02
     fd2:	fc 01       	movw	r30, r24
     fd4:	25 81       	ldd	r18, Z+5	; 0x05
     fd6:	89 81       	ldd	r24, Y+1	; 0x01
     fd8:	9a 81       	ldd	r25, Y+2	; 0x02
     fda:	fc 01       	movw	r30, r24
     fdc:	84 81       	ldd	r24, Z+4	; 0x04
     fde:	43 2f       	mov	r20, r19
     fe0:	62 2f       	mov	r22, r18
     fe2:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// C ON
     fe6:	89 81       	ldd	r24, Y+1	; 0x01
     fe8:	9a 81       	ldd	r25, Y+2	; 0x02
     fea:	fc 01       	movw	r30, r24
     fec:	30 81       	ld	r19, Z
     fee:	89 81       	ldd	r24, Y+1	; 0x01
     ff0:	9a 81       	ldd	r25, Y+2	; 0x02
     ff2:	fc 01       	movw	r30, r24
     ff4:	27 81       	ldd	r18, Z+7	; 0x07
     ff6:	89 81       	ldd	r24, Y+1	; 0x01
     ff8:	9a 81       	ldd	r25, Y+2	; 0x02
     ffa:	fc 01       	movw	r30, r24
     ffc:	86 81       	ldd	r24, Z+6	; 0x06
     ffe:	43 2f       	mov	r20, r19
    1000:	62 2f       	mov	r22, r18
    1002:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D on
    1006:	89 81       	ldd	r24, Y+1	; 0x01
    1008:	9a 81       	ldd	r25, Y+2	; 0x02
    100a:	fc 01       	movw	r30, r24
    100c:	30 81       	ld	r19, Z
    100e:	89 81       	ldd	r24, Y+1	; 0x01
    1010:	9a 81       	ldd	r25, Y+2	; 0x02
    1012:	fc 01       	movw	r30, r24
    1014:	21 85       	ldd	r18, Z+9	; 0x09
    1016:	89 81       	ldd	r24, Y+1	; 0x01
    1018:	9a 81       	ldd	r25, Y+2	; 0x02
    101a:	fc 01       	movw	r30, r24
    101c:	80 85       	ldd	r24, Z+8	; 0x08
    101e:	43 2f       	mov	r20, r19
    1020:	62 2f       	mov	r22, r18
    1022:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E OFF
    1026:	89 81       	ldd	r24, Y+1	; 0x01
    1028:	9a 81       	ldd	r25, Y+2	; 0x02
    102a:	fc 01       	movw	r30, r24
    102c:	90 81       	ld	r25, Z
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	99 23       	and	r25, r25
    1032:	09 f0       	breq	.+2      	; 0x1036 <_7SegThree+0xb6>
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	38 2f       	mov	r19, r24
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	9a 81       	ldd	r25, Y+2	; 0x02
    103c:	fc 01       	movw	r30, r24
    103e:	23 85       	ldd	r18, Z+11	; 0x0b
    1040:	89 81       	ldd	r24, Y+1	; 0x01
    1042:	9a 81       	ldd	r25, Y+2	; 0x02
    1044:	fc 01       	movw	r30, r24
    1046:	82 85       	ldd	r24, Z+10	; 0x0a
    1048:	43 2f       	mov	r20, r19
    104a:	62 2f       	mov	r22, r18
    104c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F OFF
    1050:	89 81       	ldd	r24, Y+1	; 0x01
    1052:	9a 81       	ldd	r25, Y+2	; 0x02
    1054:	fc 01       	movw	r30, r24
    1056:	90 81       	ld	r25, Z
    1058:	81 e0       	ldi	r24, 0x01	; 1
    105a:	99 23       	and	r25, r25
    105c:	09 f0       	breq	.+2      	; 0x1060 <_7SegThree+0xe0>
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	38 2f       	mov	r19, r24
    1062:	89 81       	ldd	r24, Y+1	; 0x01
    1064:	9a 81       	ldd	r25, Y+2	; 0x02
    1066:	fc 01       	movw	r30, r24
    1068:	25 85       	ldd	r18, Z+13	; 0x0d
    106a:	89 81       	ldd	r24, Y+1	; 0x01
    106c:	9a 81       	ldd	r25, Y+2	; 0x02
    106e:	fc 01       	movw	r30, r24
    1070:	84 85       	ldd	r24, Z+12	; 0x0c
    1072:	43 2f       	mov	r20, r19
    1074:	62 2f       	mov	r22, r18
    1076:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G ON
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	9a 81       	ldd	r25, Y+2	; 0x02
    107e:	fc 01       	movw	r30, r24
    1080:	30 81       	ld	r19, Z
    1082:	89 81       	ldd	r24, Y+1	; 0x01
    1084:	9a 81       	ldd	r25, Y+2	; 0x02
    1086:	fc 01       	movw	r30, r24
    1088:	27 85       	ldd	r18, Z+15	; 0x0f
    108a:	89 81       	ldd	r24, Y+1	; 0x01
    108c:	9a 81       	ldd	r25, Y+2	; 0x02
    108e:	fc 01       	movw	r30, r24
    1090:	86 85       	ldd	r24, Z+14	; 0x0e
    1092:	43 2f       	mov	r20, r19
    1094:	62 2f       	mov	r22, r18
    1096:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 break ;
    109a:	4b c0       	rjmp	.+150    	; 0x1132 <_7SegThree+0x1b2>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    109c:	89 81       	ldd	r24, Y+1	; 0x01
    109e:	9a 81       	ldd	r25, Y+2	; 0x02
    10a0:	fc 01       	movw	r30, r24
    10a2:	90 81       	ld	r25, Z
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	99 23       	and	r25, r25
    10a8:	09 f0       	breq	.+2      	; 0x10ac <_7SegThree+0x12c>
    10aa:	80 e0       	ldi	r24, 0x00	; 0
    10ac:	38 2f       	mov	r19, r24
    10ae:	89 81       	ldd	r24, Y+1	; 0x01
    10b0:	9a 81       	ldd	r25, Y+2	; 0x02
    10b2:	fc 01       	movw	r30, r24
    10b4:	23 81       	ldd	r18, Z+3	; 0x03
    10b6:	89 81       	ldd	r24, Y+1	; 0x01
    10b8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ba:	fc 01       	movw	r30, r24
    10bc:	82 81       	ldd	r24, Z+2	; 0x02
    10be:	43 2f       	mov	r20, r19
    10c0:	62 2f       	mov	r22, r18
    10c2:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    10c6:	89 81       	ldd	r24, Y+1	; 0x01
    10c8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ca:	fc 01       	movw	r30, r24
    10cc:	90 81       	ld	r25, Z
    10ce:	81 e0       	ldi	r24, 0x01	; 1
    10d0:	99 23       	and	r25, r25
    10d2:	09 f0       	breq	.+2      	; 0x10d6 <_7SegThree+0x156>
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	38 2f       	mov	r19, r24
    10d8:	89 81       	ldd	r24, Y+1	; 0x01
    10da:	9a 81       	ldd	r25, Y+2	; 0x02
    10dc:	fc 01       	movw	r30, r24
    10de:	25 81       	ldd	r18, Z+5	; 0x05
    10e0:	89 81       	ldd	r24, Y+1	; 0x01
    10e2:	9a 81       	ldd	r25, Y+2	; 0x02
    10e4:	fc 01       	movw	r30, r24
    10e6:	84 81       	ldd	r24, Z+4	; 0x04
    10e8:	43 2f       	mov	r20, r19
    10ea:	62 2f       	mov	r22, r18
    10ec:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    10f0:	89 81       	ldd	r24, Y+1	; 0x01
    10f2:	9a 81       	ldd	r25, Y+2	; 0x02
    10f4:	fc 01       	movw	r30, r24
    10f6:	30 81       	ld	r19, Z
    10f8:	89 81       	ldd	r24, Y+1	; 0x01
    10fa:	9a 81       	ldd	r25, Y+2	; 0x02
    10fc:	fc 01       	movw	r30, r24
    10fe:	27 81       	ldd	r18, Z+7	; 0x07
    1100:	89 81       	ldd	r24, Y+1	; 0x01
    1102:	9a 81       	ldd	r25, Y+2	; 0x02
    1104:	fc 01       	movw	r30, r24
    1106:	86 81       	ldd	r24, Z+6	; 0x06
    1108:	43 2f       	mov	r20, r19
    110a:	62 2f       	mov	r22, r18
    110c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
    1110:	89 81       	ldd	r24, Y+1	; 0x01
    1112:	9a 81       	ldd	r25, Y+2	; 0x02
    1114:	fc 01       	movw	r30, r24
    1116:	30 81       	ld	r19, Z
    1118:	89 81       	ldd	r24, Y+1	; 0x01
    111a:	9a 81       	ldd	r25, Y+2	; 0x02
    111c:	fc 01       	movw	r30, r24
    111e:	21 85       	ldd	r18, Z+9	; 0x09
    1120:	89 81       	ldd	r24, Y+1	; 0x01
    1122:	9a 81       	ldd	r25, Y+2	; 0x02
    1124:	fc 01       	movw	r30, r24
    1126:	80 85       	ldd	r24, Z+8	; 0x08
    1128:	43 2f       	mov	r20, r19
    112a:	62 2f       	mov	r22, r18
    112c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break;
    1130:	00 00       	nop
	}
}
    1132:	00 00       	nop
    1134:	0f 90       	pop	r0
    1136:	0f 90       	pop	r0
    1138:	df 91       	pop	r29
    113a:	cf 91       	pop	r28
    113c:	08 95       	ret

0000113e <_7SegFour>:
static void _7SegFour  (_7Segment_Config* ptr_config) 
{
    113e:	cf 93       	push	r28
    1140:	df 93       	push	r29
    1142:	00 d0       	rcall	.+0      	; 0x1144 <_7SegFour+0x6>
    1144:	cd b7       	in	r28, 0x3d	; 61
    1146:	de b7       	in	r29, 0x3e	; 62
    1148:	9a 83       	std	Y+2, r25	; 0x02
    114a:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
    114c:	89 81       	ldd	r24, Y+1	; 0x01
    114e:	9a 81       	ldd	r25, Y+2	; 0x02
    1150:	fc 01       	movw	r30, r24
    1152:	81 81       	ldd	r24, Z+1	; 0x01
    1154:	88 2f       	mov	r24, r24
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	00 97       	sbiw	r24, 0x00	; 0
    115a:	21 f0       	breq	.+8      	; 0x1164 <_7SegFour+0x26>
    115c:	01 97       	sbiw	r24, 0x01	; 1
    115e:	09 f4       	brne	.+2      	; 0x1162 <_7SegFour+0x24>
    1160:	81 c0       	rjmp	.+258    	; 0x1264 <_7SegFour+0x126>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		break;
	}
}
    1162:	c6 c0       	rjmp	.+396    	; 0x12f0 <_7SegFour+0x1b2>
static void _7SegFour  (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A OFF
    1164:	89 81       	ldd	r24, Y+1	; 0x01
    1166:	9a 81       	ldd	r25, Y+2	; 0x02
    1168:	fc 01       	movw	r30, r24
    116a:	90 81       	ld	r25, Z
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	99 23       	and	r25, r25
    1170:	09 f0       	breq	.+2      	; 0x1174 <_7SegFour+0x36>
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	38 2f       	mov	r19, r24
    1176:	89 81       	ldd	r24, Y+1	; 0x01
    1178:	9a 81       	ldd	r25, Y+2	; 0x02
    117a:	fc 01       	movw	r30, r24
    117c:	23 81       	ldd	r18, Z+3	; 0x03
    117e:	89 81       	ldd	r24, Y+1	; 0x01
    1180:	9a 81       	ldd	r25, Y+2	; 0x02
    1182:	fc 01       	movw	r30, r24
    1184:	82 81       	ldd	r24, Z+2	; 0x02
    1186:	43 2f       	mov	r20, r19
    1188:	62 2f       	mov	r22, r18
    118a:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B ON
    118e:	89 81       	ldd	r24, Y+1	; 0x01
    1190:	9a 81       	ldd	r25, Y+2	; 0x02
    1192:	fc 01       	movw	r30, r24
    1194:	30 81       	ld	r19, Z
    1196:	89 81       	ldd	r24, Y+1	; 0x01
    1198:	9a 81       	ldd	r25, Y+2	; 0x02
    119a:	fc 01       	movw	r30, r24
    119c:	25 81       	ldd	r18, Z+5	; 0x05
    119e:	89 81       	ldd	r24, Y+1	; 0x01
    11a0:	9a 81       	ldd	r25, Y+2	; 0x02
    11a2:	fc 01       	movw	r30, r24
    11a4:	84 81       	ldd	r24, Z+4	; 0x04
    11a6:	43 2f       	mov	r20, r19
    11a8:	62 2f       	mov	r22, r18
    11aa:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;	// C ON
    11ae:	89 81       	ldd	r24, Y+1	; 0x01
    11b0:	9a 81       	ldd	r25, Y+2	; 0x02
    11b2:	fc 01       	movw	r30, r24
    11b4:	30 81       	ld	r19, Z
    11b6:	89 81       	ldd	r24, Y+1	; 0x01
    11b8:	9a 81       	ldd	r25, Y+2	; 0x02
    11ba:	fc 01       	movw	r30, r24
    11bc:	27 81       	ldd	r18, Z+7	; 0x07
    11be:	89 81       	ldd	r24, Y+1	; 0x01
    11c0:	9a 81       	ldd	r25, Y+2	; 0x02
    11c2:	fc 01       	movw	r30, r24
    11c4:	86 81       	ldd	r24, Z+6	; 0x06
    11c6:	43 2f       	mov	r20, r19
    11c8:	62 2f       	mov	r22, r18
    11ca:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D OFF
    11ce:	89 81       	ldd	r24, Y+1	; 0x01
    11d0:	9a 81       	ldd	r25, Y+2	; 0x02
    11d2:	fc 01       	movw	r30, r24
    11d4:	90 81       	ld	r25, Z
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	99 23       	and	r25, r25
    11da:	09 f0       	breq	.+2      	; 0x11de <_7SegFour+0xa0>
    11dc:	80 e0       	ldi	r24, 0x00	; 0
    11de:	38 2f       	mov	r19, r24
    11e0:	89 81       	ldd	r24, Y+1	; 0x01
    11e2:	9a 81       	ldd	r25, Y+2	; 0x02
    11e4:	fc 01       	movw	r30, r24
    11e6:	21 85       	ldd	r18, Z+9	; 0x09
    11e8:	89 81       	ldd	r24, Y+1	; 0x01
    11ea:	9a 81       	ldd	r25, Y+2	; 0x02
    11ec:	fc 01       	movw	r30, r24
    11ee:	80 85       	ldd	r24, Z+8	; 0x08
    11f0:	43 2f       	mov	r20, r19
    11f2:	62 2f       	mov	r22, r18
    11f4:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E OFF
    11f8:	89 81       	ldd	r24, Y+1	; 0x01
    11fa:	9a 81       	ldd	r25, Y+2	; 0x02
    11fc:	fc 01       	movw	r30, r24
    11fe:	90 81       	ld	r25, Z
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	99 23       	and	r25, r25
    1204:	09 f0       	breq	.+2      	; 0x1208 <_7SegFour+0xca>
    1206:	80 e0       	ldi	r24, 0x00	; 0
    1208:	38 2f       	mov	r19, r24
    120a:	89 81       	ldd	r24, Y+1	; 0x01
    120c:	9a 81       	ldd	r25, Y+2	; 0x02
    120e:	fc 01       	movw	r30, r24
    1210:	23 85       	ldd	r18, Z+11	; 0x0b
    1212:	89 81       	ldd	r24, Y+1	; 0x01
    1214:	9a 81       	ldd	r25, Y+2	; 0x02
    1216:	fc 01       	movw	r30, r24
    1218:	82 85       	ldd	r24, Z+10	; 0x0a
    121a:	43 2f       	mov	r20, r19
    121c:	62 2f       	mov	r22, r18
    121e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F ON
    1222:	89 81       	ldd	r24, Y+1	; 0x01
    1224:	9a 81       	ldd	r25, Y+2	; 0x02
    1226:	fc 01       	movw	r30, r24
    1228:	30 81       	ld	r19, Z
    122a:	89 81       	ldd	r24, Y+1	; 0x01
    122c:	9a 81       	ldd	r25, Y+2	; 0x02
    122e:	fc 01       	movw	r30, r24
    1230:	25 85       	ldd	r18, Z+13	; 0x0d
    1232:	89 81       	ldd	r24, Y+1	; 0x01
    1234:	9a 81       	ldd	r25, Y+2	; 0x02
    1236:	fc 01       	movw	r30, r24
    1238:	84 85       	ldd	r24, Z+12	; 0x0c
    123a:	43 2f       	mov	r20, r19
    123c:	62 2f       	mov	r22, r18
    123e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G ON
    1242:	89 81       	ldd	r24, Y+1	; 0x01
    1244:	9a 81       	ldd	r25, Y+2	; 0x02
    1246:	fc 01       	movw	r30, r24
    1248:	30 81       	ld	r19, Z
    124a:	89 81       	ldd	r24, Y+1	; 0x01
    124c:	9a 81       	ldd	r25, Y+2	; 0x02
    124e:	fc 01       	movw	r30, r24
    1250:	27 85       	ldd	r18, Z+15	; 0x0f
    1252:	89 81       	ldd	r24, Y+1	; 0x01
    1254:	9a 81       	ldd	r25, Y+2	; 0x02
    1256:	fc 01       	movw	r30, r24
    1258:	86 85       	ldd	r24, Z+14	; 0x0e
    125a:	43 2f       	mov	r20, r19
    125c:	62 2f       	mov	r22, r18
    125e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break ;
    1262:	46 c0       	rjmp	.+140    	; 0x12f0 <_7SegFour+0x1b2>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1264:	89 81       	ldd	r24, Y+1	; 0x01
    1266:	9a 81       	ldd	r25, Y+2	; 0x02
    1268:	fc 01       	movw	r30, r24
    126a:	30 81       	ld	r19, Z
    126c:	89 81       	ldd	r24, Y+1	; 0x01
    126e:	9a 81       	ldd	r25, Y+2	; 0x02
    1270:	fc 01       	movw	r30, r24
    1272:	23 81       	ldd	r18, Z+3	; 0x03
    1274:	89 81       	ldd	r24, Y+1	; 0x01
    1276:	9a 81       	ldd	r25, Y+2	; 0x02
    1278:	fc 01       	movw	r30, r24
    127a:	82 81       	ldd	r24, Z+2	; 0x02
    127c:	43 2f       	mov	r20, r19
    127e:	62 2f       	mov	r22, r18
    1280:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1284:	89 81       	ldd	r24, Y+1	; 0x01
    1286:	9a 81       	ldd	r25, Y+2	; 0x02
    1288:	fc 01       	movw	r30, r24
    128a:	30 81       	ld	r19, Z
    128c:	89 81       	ldd	r24, Y+1	; 0x01
    128e:	9a 81       	ldd	r25, Y+2	; 0x02
    1290:	fc 01       	movw	r30, r24
    1292:	25 81       	ldd	r18, Z+5	; 0x05
    1294:	89 81       	ldd	r24, Y+1	; 0x01
    1296:	9a 81       	ldd	r25, Y+2	; 0x02
    1298:	fc 01       	movw	r30, r24
    129a:	84 81       	ldd	r24, Z+4	; 0x04
    129c:	43 2f       	mov	r20, r19
    129e:	62 2f       	mov	r22, r18
    12a0:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    12a4:	89 81       	ldd	r24, Y+1	; 0x01
    12a6:	9a 81       	ldd	r25, Y+2	; 0x02
    12a8:	fc 01       	movw	r30, r24
    12aa:	90 81       	ld	r25, Z
    12ac:	81 e0       	ldi	r24, 0x01	; 1
    12ae:	99 23       	and	r25, r25
    12b0:	09 f0       	breq	.+2      	; 0x12b4 <_7SegFour+0x176>
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	38 2f       	mov	r19, r24
    12b6:	89 81       	ldd	r24, Y+1	; 0x01
    12b8:	9a 81       	ldd	r25, Y+2	; 0x02
    12ba:	fc 01       	movw	r30, r24
    12bc:	27 81       	ldd	r18, Z+7	; 0x07
    12be:	89 81       	ldd	r24, Y+1	; 0x01
    12c0:	9a 81       	ldd	r25, Y+2	; 0x02
    12c2:	fc 01       	movw	r30, r24
    12c4:	86 81       	ldd	r24, Z+6	; 0x06
    12c6:	43 2f       	mov	r20, r19
    12c8:	62 2f       	mov	r22, r18
    12ca:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
    12ce:	89 81       	ldd	r24, Y+1	; 0x01
    12d0:	9a 81       	ldd	r25, Y+2	; 0x02
    12d2:	fc 01       	movw	r30, r24
    12d4:	30 81       	ld	r19, Z
    12d6:	89 81       	ldd	r24, Y+1	; 0x01
    12d8:	9a 81       	ldd	r25, Y+2	; 0x02
    12da:	fc 01       	movw	r30, r24
    12dc:	21 85       	ldd	r18, Z+9	; 0x09
    12de:	89 81       	ldd	r24, Y+1	; 0x01
    12e0:	9a 81       	ldd	r25, Y+2	; 0x02
    12e2:	fc 01       	movw	r30, r24
    12e4:	80 85       	ldd	r24, Z+8	; 0x08
    12e6:	43 2f       	mov	r20, r19
    12e8:	62 2f       	mov	r22, r18
    12ea:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break;
    12ee:	00 00       	nop
	}
}
    12f0:	00 00       	nop
    12f2:	0f 90       	pop	r0
    12f4:	0f 90       	pop	r0
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	08 95       	ret

000012fc <_7SegFive>:
static void _7SegFive  (_7Segment_Config* ptr_config) 
{
    12fc:	cf 93       	push	r28
    12fe:	df 93       	push	r29
    1300:	00 d0       	rcall	.+0      	; 0x1302 <_7SegFive+0x6>
    1302:	cd b7       	in	r28, 0x3d	; 61
    1304:	de b7       	in	r29, 0x3e	; 62
    1306:	9a 83       	std	Y+2, r25	; 0x02
    1308:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
    130a:	89 81       	ldd	r24, Y+1	; 0x01
    130c:	9a 81       	ldd	r25, Y+2	; 0x02
    130e:	fc 01       	movw	r30, r24
    1310:	81 81       	ldd	r24, Z+1	; 0x01
    1312:	88 2f       	mov	r24, r24
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	00 97       	sbiw	r24, 0x00	; 0
    1318:	21 f0       	breq	.+8      	; 0x1322 <_7SegFive+0x26>
    131a:	01 97       	sbiw	r24, 0x01	; 1
    131c:	09 f4       	brne	.+2      	; 0x1320 <_7SegFive+0x24>
    131e:	7c c0       	rjmp	.+248    	; 0x1418 <_7SegFive+0x11c>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		break;
	}
}
    1320:	c6 c0       	rjmp	.+396    	; 0x14ae <_7SegFive+0x1b2>
static void _7SegFive  (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A ON 
    1322:	89 81       	ldd	r24, Y+1	; 0x01
    1324:	9a 81       	ldd	r25, Y+2	; 0x02
    1326:	fc 01       	movw	r30, r24
    1328:	30 81       	ld	r19, Z
    132a:	89 81       	ldd	r24, Y+1	; 0x01
    132c:	9a 81       	ldd	r25, Y+2	; 0x02
    132e:	fc 01       	movw	r30, r24
    1330:	23 81       	ldd	r18, Z+3	; 0x03
    1332:	89 81       	ldd	r24, Y+1	; 0x01
    1334:	9a 81       	ldd	r25, Y+2	; 0x02
    1336:	fc 01       	movw	r30, r24
    1338:	82 81       	ldd	r24, Z+2	; 0x02
    133a:	43 2f       	mov	r20, r19
    133c:	62 2f       	mov	r22, r18
    133e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B OFF
    1342:	89 81       	ldd	r24, Y+1	; 0x01
    1344:	9a 81       	ldd	r25, Y+2	; 0x02
    1346:	fc 01       	movw	r30, r24
    1348:	90 81       	ld	r25, Z
    134a:	81 e0       	ldi	r24, 0x01	; 1
    134c:	99 23       	and	r25, r25
    134e:	09 f0       	breq	.+2      	; 0x1352 <_7SegFive+0x56>
    1350:	80 e0       	ldi	r24, 0x00	; 0
    1352:	38 2f       	mov	r19, r24
    1354:	89 81       	ldd	r24, Y+1	; 0x01
    1356:	9a 81       	ldd	r25, Y+2	; 0x02
    1358:	fc 01       	movw	r30, r24
    135a:	25 81       	ldd	r18, Z+5	; 0x05
    135c:	89 81       	ldd	r24, Y+1	; 0x01
    135e:	9a 81       	ldd	r25, Y+2	; 0x02
    1360:	fc 01       	movw	r30, r24
    1362:	84 81       	ldd	r24, Z+4	; 0x04
    1364:	43 2f       	mov	r20, r19
    1366:	62 2f       	mov	r22, r18
    1368:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;	// C ON
    136c:	89 81       	ldd	r24, Y+1	; 0x01
    136e:	9a 81       	ldd	r25, Y+2	; 0x02
    1370:	fc 01       	movw	r30, r24
    1372:	30 81       	ld	r19, Z
    1374:	89 81       	ldd	r24, Y+1	; 0x01
    1376:	9a 81       	ldd	r25, Y+2	; 0x02
    1378:	fc 01       	movw	r30, r24
    137a:	27 81       	ldd	r18, Z+7	; 0x07
    137c:	89 81       	ldd	r24, Y+1	; 0x01
    137e:	9a 81       	ldd	r25, Y+2	; 0x02
    1380:	fc 01       	movw	r30, r24
    1382:	86 81       	ldd	r24, Z+6	; 0x06
    1384:	43 2f       	mov	r20, r19
    1386:	62 2f       	mov	r22, r18
    1388:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D ON
    138c:	89 81       	ldd	r24, Y+1	; 0x01
    138e:	9a 81       	ldd	r25, Y+2	; 0x02
    1390:	fc 01       	movw	r30, r24
    1392:	30 81       	ld	r19, Z
    1394:	89 81       	ldd	r24, Y+1	; 0x01
    1396:	9a 81       	ldd	r25, Y+2	; 0x02
    1398:	fc 01       	movw	r30, r24
    139a:	21 85       	ldd	r18, Z+9	; 0x09
    139c:	89 81       	ldd	r24, Y+1	; 0x01
    139e:	9a 81       	ldd	r25, Y+2	; 0x02
    13a0:	fc 01       	movw	r30, r24
    13a2:	80 85       	ldd	r24, Z+8	; 0x08
    13a4:	43 2f       	mov	r20, r19
    13a6:	62 2f       	mov	r22, r18
    13a8:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E OFF
    13ac:	89 81       	ldd	r24, Y+1	; 0x01
    13ae:	9a 81       	ldd	r25, Y+2	; 0x02
    13b0:	fc 01       	movw	r30, r24
    13b2:	90 81       	ld	r25, Z
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	99 23       	and	r25, r25
    13b8:	09 f0       	breq	.+2      	; 0x13bc <_7SegFive+0xc0>
    13ba:	80 e0       	ldi	r24, 0x00	; 0
    13bc:	38 2f       	mov	r19, r24
    13be:	89 81       	ldd	r24, Y+1	; 0x01
    13c0:	9a 81       	ldd	r25, Y+2	; 0x02
    13c2:	fc 01       	movw	r30, r24
    13c4:	23 85       	ldd	r18, Z+11	; 0x0b
    13c6:	89 81       	ldd	r24, Y+1	; 0x01
    13c8:	9a 81       	ldd	r25, Y+2	; 0x02
    13ca:	fc 01       	movw	r30, r24
    13cc:	82 85       	ldd	r24, Z+10	; 0x0a
    13ce:	43 2f       	mov	r20, r19
    13d0:	62 2f       	mov	r22, r18
    13d2:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F ON
    13d6:	89 81       	ldd	r24, Y+1	; 0x01
    13d8:	9a 81       	ldd	r25, Y+2	; 0x02
    13da:	fc 01       	movw	r30, r24
    13dc:	30 81       	ld	r19, Z
    13de:	89 81       	ldd	r24, Y+1	; 0x01
    13e0:	9a 81       	ldd	r25, Y+2	; 0x02
    13e2:	fc 01       	movw	r30, r24
    13e4:	25 85       	ldd	r18, Z+13	; 0x0d
    13e6:	89 81       	ldd	r24, Y+1	; 0x01
    13e8:	9a 81       	ldd	r25, Y+2	; 0x02
    13ea:	fc 01       	movw	r30, r24
    13ec:	84 85       	ldd	r24, Z+12	; 0x0c
    13ee:	43 2f       	mov	r20, r19
    13f0:	62 2f       	mov	r22, r18
    13f2:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G ON
    13f6:	89 81       	ldd	r24, Y+1	; 0x01
    13f8:	9a 81       	ldd	r25, Y+2	; 0x02
    13fa:	fc 01       	movw	r30, r24
    13fc:	30 81       	ld	r19, Z
    13fe:	89 81       	ldd	r24, Y+1	; 0x01
    1400:	9a 81       	ldd	r25, Y+2	; 0x02
    1402:	fc 01       	movw	r30, r24
    1404:	27 85       	ldd	r18, Z+15	; 0x0f
    1406:	89 81       	ldd	r24, Y+1	; 0x01
    1408:	9a 81       	ldd	r25, Y+2	; 0x02
    140a:	fc 01       	movw	r30, r24
    140c:	86 85       	ldd	r24, Z+14	; 0x0e
    140e:	43 2f       	mov	r20, r19
    1410:	62 2f       	mov	r22, r18
    1412:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break ;
    1416:	4b c0       	rjmp	.+150    	; 0x14ae <_7SegFive+0x1b2>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1418:	89 81       	ldd	r24, Y+1	; 0x01
    141a:	9a 81       	ldd	r25, Y+2	; 0x02
    141c:	fc 01       	movw	r30, r24
    141e:	90 81       	ld	r25, Z
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	99 23       	and	r25, r25
    1424:	09 f0       	breq	.+2      	; 0x1428 <_7SegFive+0x12c>
    1426:	80 e0       	ldi	r24, 0x00	; 0
    1428:	38 2f       	mov	r19, r24
    142a:	89 81       	ldd	r24, Y+1	; 0x01
    142c:	9a 81       	ldd	r25, Y+2	; 0x02
    142e:	fc 01       	movw	r30, r24
    1430:	23 81       	ldd	r18, Z+3	; 0x03
    1432:	89 81       	ldd	r24, Y+1	; 0x01
    1434:	9a 81       	ldd	r25, Y+2	; 0x02
    1436:	fc 01       	movw	r30, r24
    1438:	82 81       	ldd	r24, Z+2	; 0x02
    143a:	43 2f       	mov	r20, r19
    143c:	62 2f       	mov	r22, r18
    143e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1442:	89 81       	ldd	r24, Y+1	; 0x01
    1444:	9a 81       	ldd	r25, Y+2	; 0x02
    1446:	fc 01       	movw	r30, r24
    1448:	30 81       	ld	r19, Z
    144a:	89 81       	ldd	r24, Y+1	; 0x01
    144c:	9a 81       	ldd	r25, Y+2	; 0x02
    144e:	fc 01       	movw	r30, r24
    1450:	25 81       	ldd	r18, Z+5	; 0x05
    1452:	89 81       	ldd	r24, Y+1	; 0x01
    1454:	9a 81       	ldd	r25, Y+2	; 0x02
    1456:	fc 01       	movw	r30, r24
    1458:	84 81       	ldd	r24, Z+4	; 0x04
    145a:	43 2f       	mov	r20, r19
    145c:	62 2f       	mov	r22, r18
    145e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1462:	89 81       	ldd	r24, Y+1	; 0x01
    1464:	9a 81       	ldd	r25, Y+2	; 0x02
    1466:	fc 01       	movw	r30, r24
    1468:	90 81       	ld	r25, Z
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	99 23       	and	r25, r25
    146e:	09 f0       	breq	.+2      	; 0x1472 <_7SegFive+0x176>
    1470:	80 e0       	ldi	r24, 0x00	; 0
    1472:	38 2f       	mov	r19, r24
    1474:	89 81       	ldd	r24, Y+1	; 0x01
    1476:	9a 81       	ldd	r25, Y+2	; 0x02
    1478:	fc 01       	movw	r30, r24
    147a:	27 81       	ldd	r18, Z+7	; 0x07
    147c:	89 81       	ldd	r24, Y+1	; 0x01
    147e:	9a 81       	ldd	r25, Y+2	; 0x02
    1480:	fc 01       	movw	r30, r24
    1482:	86 81       	ldd	r24, Z+6	; 0x06
    1484:	43 2f       	mov	r20, r19
    1486:	62 2f       	mov	r22, r18
    1488:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
    148c:	89 81       	ldd	r24, Y+1	; 0x01
    148e:	9a 81       	ldd	r25, Y+2	; 0x02
    1490:	fc 01       	movw	r30, r24
    1492:	30 81       	ld	r19, Z
    1494:	89 81       	ldd	r24, Y+1	; 0x01
    1496:	9a 81       	ldd	r25, Y+2	; 0x02
    1498:	fc 01       	movw	r30, r24
    149a:	21 85       	ldd	r18, Z+9	; 0x09
    149c:	89 81       	ldd	r24, Y+1	; 0x01
    149e:	9a 81       	ldd	r25, Y+2	; 0x02
    14a0:	fc 01       	movw	r30, r24
    14a2:	80 85       	ldd	r24, Z+8	; 0x08
    14a4:	43 2f       	mov	r20, r19
    14a6:	62 2f       	mov	r22, r18
    14a8:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break;
    14ac:	00 00       	nop
	}
}
    14ae:	00 00       	nop
    14b0:	0f 90       	pop	r0
    14b2:	0f 90       	pop	r0
    14b4:	df 91       	pop	r29
    14b6:	cf 91       	pop	r28
    14b8:	08 95       	ret

000014ba <_7SegSix>:
static void _7SegSix   (_7Segment_Config* ptr_config) 
{
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	00 d0       	rcall	.+0      	; 0x14c0 <_7SegSix+0x6>
    14c0:	cd b7       	in	r28, 0x3d	; 61
    14c2:	de b7       	in	r29, 0x3e	; 62
    14c4:	9a 83       	std	Y+2, r25	; 0x02
    14c6:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
    14c8:	89 81       	ldd	r24, Y+1	; 0x01
    14ca:	9a 81       	ldd	r25, Y+2	; 0x02
    14cc:	fc 01       	movw	r30, r24
    14ce:	81 81       	ldd	r24, Z+1	; 0x01
    14d0:	88 2f       	mov	r24, r24
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	00 97       	sbiw	r24, 0x00	; 0
    14d6:	21 f0       	breq	.+8      	; 0x14e0 <_7SegSix+0x26>
    14d8:	01 97       	sbiw	r24, 0x01	; 1
    14da:	09 f4       	brne	.+2      	; 0x14de <_7SegSix+0x24>
    14dc:	77 c0       	rjmp	.+238    	; 0x15cc <_7SegSix+0x112>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		
		break;
	}
}
    14de:	c1 c0       	rjmp	.+386    	; 0x1662 <_7SegSix+0x1a8>
static void _7SegSix   (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A ON 
    14e0:	89 81       	ldd	r24, Y+1	; 0x01
    14e2:	9a 81       	ldd	r25, Y+2	; 0x02
    14e4:	fc 01       	movw	r30, r24
    14e6:	30 81       	ld	r19, Z
    14e8:	89 81       	ldd	r24, Y+1	; 0x01
    14ea:	9a 81       	ldd	r25, Y+2	; 0x02
    14ec:	fc 01       	movw	r30, r24
    14ee:	23 81       	ldd	r18, Z+3	; 0x03
    14f0:	89 81       	ldd	r24, Y+1	; 0x01
    14f2:	9a 81       	ldd	r25, Y+2	; 0x02
    14f4:	fc 01       	movw	r30, r24
    14f6:	82 81       	ldd	r24, Z+2	; 0x02
    14f8:	43 2f       	mov	r20, r19
    14fa:	62 2f       	mov	r22, r18
    14fc:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B OFF
    1500:	89 81       	ldd	r24, Y+1	; 0x01
    1502:	9a 81       	ldd	r25, Y+2	; 0x02
    1504:	fc 01       	movw	r30, r24
    1506:	90 81       	ld	r25, Z
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	99 23       	and	r25, r25
    150c:	09 f0       	breq	.+2      	; 0x1510 <_7SegSix+0x56>
    150e:	80 e0       	ldi	r24, 0x00	; 0
    1510:	38 2f       	mov	r19, r24
    1512:	89 81       	ldd	r24, Y+1	; 0x01
    1514:	9a 81       	ldd	r25, Y+2	; 0x02
    1516:	fc 01       	movw	r30, r24
    1518:	25 81       	ldd	r18, Z+5	; 0x05
    151a:	89 81       	ldd	r24, Y+1	; 0x01
    151c:	9a 81       	ldd	r25, Y+2	; 0x02
    151e:	fc 01       	movw	r30, r24
    1520:	84 81       	ldd	r24, Z+4	; 0x04
    1522:	43 2f       	mov	r20, r19
    1524:	62 2f       	mov	r22, r18
    1526:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;	// C ON
    152a:	89 81       	ldd	r24, Y+1	; 0x01
    152c:	9a 81       	ldd	r25, Y+2	; 0x02
    152e:	fc 01       	movw	r30, r24
    1530:	30 81       	ld	r19, Z
    1532:	89 81       	ldd	r24, Y+1	; 0x01
    1534:	9a 81       	ldd	r25, Y+2	; 0x02
    1536:	fc 01       	movw	r30, r24
    1538:	27 81       	ldd	r18, Z+7	; 0x07
    153a:	89 81       	ldd	r24, Y+1	; 0x01
    153c:	9a 81       	ldd	r25, Y+2	; 0x02
    153e:	fc 01       	movw	r30, r24
    1540:	86 81       	ldd	r24, Z+6	; 0x06
    1542:	43 2f       	mov	r20, r19
    1544:	62 2f       	mov	r22, r18
    1546:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D ON
    154a:	89 81       	ldd	r24, Y+1	; 0x01
    154c:	9a 81       	ldd	r25, Y+2	; 0x02
    154e:	fc 01       	movw	r30, r24
    1550:	30 81       	ld	r19, Z
    1552:	89 81       	ldd	r24, Y+1	; 0x01
    1554:	9a 81       	ldd	r25, Y+2	; 0x02
    1556:	fc 01       	movw	r30, r24
    1558:	21 85       	ldd	r18, Z+9	; 0x09
    155a:	89 81       	ldd	r24, Y+1	; 0x01
    155c:	9a 81       	ldd	r25, Y+2	; 0x02
    155e:	fc 01       	movw	r30, r24
    1560:	80 85       	ldd	r24, Z+8	; 0x08
    1562:	43 2f       	mov	r20, r19
    1564:	62 2f       	mov	r22, r18
    1566:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E ON
    156a:	89 81       	ldd	r24, Y+1	; 0x01
    156c:	9a 81       	ldd	r25, Y+2	; 0x02
    156e:	fc 01       	movw	r30, r24
    1570:	30 81       	ld	r19, Z
    1572:	89 81       	ldd	r24, Y+1	; 0x01
    1574:	9a 81       	ldd	r25, Y+2	; 0x02
    1576:	fc 01       	movw	r30, r24
    1578:	23 85       	ldd	r18, Z+11	; 0x0b
    157a:	89 81       	ldd	r24, Y+1	; 0x01
    157c:	9a 81       	ldd	r25, Y+2	; 0x02
    157e:	fc 01       	movw	r30, r24
    1580:	82 85       	ldd	r24, Z+10	; 0x0a
    1582:	43 2f       	mov	r20, r19
    1584:	62 2f       	mov	r22, r18
    1586:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F ON
    158a:	89 81       	ldd	r24, Y+1	; 0x01
    158c:	9a 81       	ldd	r25, Y+2	; 0x02
    158e:	fc 01       	movw	r30, r24
    1590:	30 81       	ld	r19, Z
    1592:	89 81       	ldd	r24, Y+1	; 0x01
    1594:	9a 81       	ldd	r25, Y+2	; 0x02
    1596:	fc 01       	movw	r30, r24
    1598:	25 85       	ldd	r18, Z+13	; 0x0d
    159a:	89 81       	ldd	r24, Y+1	; 0x01
    159c:	9a 81       	ldd	r25, Y+2	; 0x02
    159e:	fc 01       	movw	r30, r24
    15a0:	84 85       	ldd	r24, Z+12	; 0x0c
    15a2:	43 2f       	mov	r20, r19
    15a4:	62 2f       	mov	r22, r18
    15a6:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G ON
    15aa:	89 81       	ldd	r24, Y+1	; 0x01
    15ac:	9a 81       	ldd	r25, Y+2	; 0x02
    15ae:	fc 01       	movw	r30, r24
    15b0:	30 81       	ld	r19, Z
    15b2:	89 81       	ldd	r24, Y+1	; 0x01
    15b4:	9a 81       	ldd	r25, Y+2	; 0x02
    15b6:	fc 01       	movw	r30, r24
    15b8:	27 85       	ldd	r18, Z+15	; 0x0f
    15ba:	89 81       	ldd	r24, Y+1	; 0x01
    15bc:	9a 81       	ldd	r25, Y+2	; 0x02
    15be:	fc 01       	movw	r30, r24
    15c0:	86 85       	ldd	r24, Z+14	; 0x0e
    15c2:	43 2f       	mov	r20, r19
    15c4:	62 2f       	mov	r22, r18
    15c6:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break ;
    15ca:	4b c0       	rjmp	.+150    	; 0x1662 <_7SegSix+0x1a8>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    15cc:	89 81       	ldd	r24, Y+1	; 0x01
    15ce:	9a 81       	ldd	r25, Y+2	; 0x02
    15d0:	fc 01       	movw	r30, r24
    15d2:	30 81       	ld	r19, Z
    15d4:	89 81       	ldd	r24, Y+1	; 0x01
    15d6:	9a 81       	ldd	r25, Y+2	; 0x02
    15d8:	fc 01       	movw	r30, r24
    15da:	23 81       	ldd	r18, Z+3	; 0x03
    15dc:	89 81       	ldd	r24, Y+1	; 0x01
    15de:	9a 81       	ldd	r25, Y+2	; 0x02
    15e0:	fc 01       	movw	r30, r24
    15e2:	82 81       	ldd	r24, Z+2	; 0x02
    15e4:	43 2f       	mov	r20, r19
    15e6:	62 2f       	mov	r22, r18
    15e8:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    15ec:	89 81       	ldd	r24, Y+1	; 0x01
    15ee:	9a 81       	ldd	r25, Y+2	; 0x02
    15f0:	fc 01       	movw	r30, r24
    15f2:	90 81       	ld	r25, Z
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	99 23       	and	r25, r25
    15f8:	09 f0       	breq	.+2      	; 0x15fc <_7SegSix+0x142>
    15fa:	80 e0       	ldi	r24, 0x00	; 0
    15fc:	38 2f       	mov	r19, r24
    15fe:	89 81       	ldd	r24, Y+1	; 0x01
    1600:	9a 81       	ldd	r25, Y+2	; 0x02
    1602:	fc 01       	movw	r30, r24
    1604:	25 81       	ldd	r18, Z+5	; 0x05
    1606:	89 81       	ldd	r24, Y+1	; 0x01
    1608:	9a 81       	ldd	r25, Y+2	; 0x02
    160a:	fc 01       	movw	r30, r24
    160c:	84 81       	ldd	r24, Z+4	; 0x04
    160e:	43 2f       	mov	r20, r19
    1610:	62 2f       	mov	r22, r18
    1612:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1616:	89 81       	ldd	r24, Y+1	; 0x01
    1618:	9a 81       	ldd	r25, Y+2	; 0x02
    161a:	fc 01       	movw	r30, r24
    161c:	90 81       	ld	r25, Z
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	99 23       	and	r25, r25
    1622:	09 f0       	breq	.+2      	; 0x1626 <_7SegSix+0x16c>
    1624:	80 e0       	ldi	r24, 0x00	; 0
    1626:	38 2f       	mov	r19, r24
    1628:	89 81       	ldd	r24, Y+1	; 0x01
    162a:	9a 81       	ldd	r25, Y+2	; 0x02
    162c:	fc 01       	movw	r30, r24
    162e:	27 81       	ldd	r18, Z+7	; 0x07
    1630:	89 81       	ldd	r24, Y+1	; 0x01
    1632:	9a 81       	ldd	r25, Y+2	; 0x02
    1634:	fc 01       	movw	r30, r24
    1636:	86 81       	ldd	r24, Z+6	; 0x06
    1638:	43 2f       	mov	r20, r19
    163a:	62 2f       	mov	r22, r18
    163c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
    1640:	89 81       	ldd	r24, Y+1	; 0x01
    1642:	9a 81       	ldd	r25, Y+2	; 0x02
    1644:	fc 01       	movw	r30, r24
    1646:	30 81       	ld	r19, Z
    1648:	89 81       	ldd	r24, Y+1	; 0x01
    164a:	9a 81       	ldd	r25, Y+2	; 0x02
    164c:	fc 01       	movw	r30, r24
    164e:	21 85       	ldd	r18, Z+9	; 0x09
    1650:	89 81       	ldd	r24, Y+1	; 0x01
    1652:	9a 81       	ldd	r25, Y+2	; 0x02
    1654:	fc 01       	movw	r30, r24
    1656:	80 85       	ldd	r24, Z+8	; 0x08
    1658:	43 2f       	mov	r20, r19
    165a:	62 2f       	mov	r22, r18
    165c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		
		break;
    1660:	00 00       	nop
	}
}
    1662:	00 00       	nop
    1664:	0f 90       	pop	r0
    1666:	0f 90       	pop	r0
    1668:	df 91       	pop	r29
    166a:	cf 91       	pop	r28
    166c:	08 95       	ret

0000166e <_7SegSeven>:
static void _7SegSeven (_7Segment_Config* ptr_config) 
{
    166e:	cf 93       	push	r28
    1670:	df 93       	push	r29
    1672:	00 d0       	rcall	.+0      	; 0x1674 <_7SegSeven+0x6>
    1674:	cd b7       	in	r28, 0x3d	; 61
    1676:	de b7       	in	r29, 0x3e	; 62
    1678:	9a 83       	std	Y+2, r25	; 0x02
    167a:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
    167c:	89 81       	ldd	r24, Y+1	; 0x01
    167e:	9a 81       	ldd	r25, Y+2	; 0x02
    1680:	fc 01       	movw	r30, r24
    1682:	81 81       	ldd	r24, Z+1	; 0x01
    1684:	88 2f       	mov	r24, r24
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	00 97       	sbiw	r24, 0x00	; 0
    168a:	21 f0       	breq	.+8      	; 0x1694 <_7SegSeven+0x26>
    168c:	01 97       	sbiw	r24, 0x01	; 1
    168e:	09 f4       	brne	.+2      	; 0x1692 <_7SegSeven+0x24>
    1690:	86 c0       	rjmp	.+268    	; 0x179e <_7SegSeven+0x130>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		
		break;
	}
}
    1692:	d5 c0       	rjmp	.+426    	; 0x183e <_7SegSeven+0x1d0>
static void _7SegSeven (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A ON 
    1694:	89 81       	ldd	r24, Y+1	; 0x01
    1696:	9a 81       	ldd	r25, Y+2	; 0x02
    1698:	fc 01       	movw	r30, r24
    169a:	30 81       	ld	r19, Z
    169c:	89 81       	ldd	r24, Y+1	; 0x01
    169e:	9a 81       	ldd	r25, Y+2	; 0x02
    16a0:	fc 01       	movw	r30, r24
    16a2:	23 81       	ldd	r18, Z+3	; 0x03
    16a4:	89 81       	ldd	r24, Y+1	; 0x01
    16a6:	9a 81       	ldd	r25, Y+2	; 0x02
    16a8:	fc 01       	movw	r30, r24
    16aa:	82 81       	ldd	r24, Z+2	; 0x02
    16ac:	43 2f       	mov	r20, r19
    16ae:	62 2f       	mov	r22, r18
    16b0:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B ON
    16b4:	89 81       	ldd	r24, Y+1	; 0x01
    16b6:	9a 81       	ldd	r25, Y+2	; 0x02
    16b8:	fc 01       	movw	r30, r24
    16ba:	30 81       	ld	r19, Z
    16bc:	89 81       	ldd	r24, Y+1	; 0x01
    16be:	9a 81       	ldd	r25, Y+2	; 0x02
    16c0:	fc 01       	movw	r30, r24
    16c2:	25 81       	ldd	r18, Z+5	; 0x05
    16c4:	89 81       	ldd	r24, Y+1	; 0x01
    16c6:	9a 81       	ldd	r25, Y+2	; 0x02
    16c8:	fc 01       	movw	r30, r24
    16ca:	84 81       	ldd	r24, Z+4	; 0x04
    16cc:	43 2f       	mov	r20, r19
    16ce:	62 2f       	mov	r22, r18
    16d0:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;	// C ON
    16d4:	89 81       	ldd	r24, Y+1	; 0x01
    16d6:	9a 81       	ldd	r25, Y+2	; 0x02
    16d8:	fc 01       	movw	r30, r24
    16da:	30 81       	ld	r19, Z
    16dc:	89 81       	ldd	r24, Y+1	; 0x01
    16de:	9a 81       	ldd	r25, Y+2	; 0x02
    16e0:	fc 01       	movw	r30, r24
    16e2:	27 81       	ldd	r18, Z+7	; 0x07
    16e4:	89 81       	ldd	r24, Y+1	; 0x01
    16e6:	9a 81       	ldd	r25, Y+2	; 0x02
    16e8:	fc 01       	movw	r30, r24
    16ea:	86 81       	ldd	r24, Z+6	; 0x06
    16ec:	43 2f       	mov	r20, r19
    16ee:	62 2f       	mov	r22, r18
    16f0:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D OFF
    16f4:	89 81       	ldd	r24, Y+1	; 0x01
    16f6:	9a 81       	ldd	r25, Y+2	; 0x02
    16f8:	fc 01       	movw	r30, r24
    16fa:	90 81       	ld	r25, Z
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	99 23       	and	r25, r25
    1700:	09 f0       	breq	.+2      	; 0x1704 <_7SegSeven+0x96>
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	38 2f       	mov	r19, r24
    1706:	89 81       	ldd	r24, Y+1	; 0x01
    1708:	9a 81       	ldd	r25, Y+2	; 0x02
    170a:	fc 01       	movw	r30, r24
    170c:	21 85       	ldd	r18, Z+9	; 0x09
    170e:	89 81       	ldd	r24, Y+1	; 0x01
    1710:	9a 81       	ldd	r25, Y+2	; 0x02
    1712:	fc 01       	movw	r30, r24
    1714:	80 85       	ldd	r24, Z+8	; 0x08
    1716:	43 2f       	mov	r20, r19
    1718:	62 2f       	mov	r22, r18
    171a:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E OFF
    171e:	89 81       	ldd	r24, Y+1	; 0x01
    1720:	9a 81       	ldd	r25, Y+2	; 0x02
    1722:	fc 01       	movw	r30, r24
    1724:	90 81       	ld	r25, Z
    1726:	81 e0       	ldi	r24, 0x01	; 1
    1728:	99 23       	and	r25, r25
    172a:	09 f0       	breq	.+2      	; 0x172e <_7SegSeven+0xc0>
    172c:	80 e0       	ldi	r24, 0x00	; 0
    172e:	38 2f       	mov	r19, r24
    1730:	89 81       	ldd	r24, Y+1	; 0x01
    1732:	9a 81       	ldd	r25, Y+2	; 0x02
    1734:	fc 01       	movw	r30, r24
    1736:	23 85       	ldd	r18, Z+11	; 0x0b
    1738:	89 81       	ldd	r24, Y+1	; 0x01
    173a:	9a 81       	ldd	r25, Y+2	; 0x02
    173c:	fc 01       	movw	r30, r24
    173e:	82 85       	ldd	r24, Z+10	; 0x0a
    1740:	43 2f       	mov	r20, r19
    1742:	62 2f       	mov	r22, r18
    1744:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F OFF
    1748:	89 81       	ldd	r24, Y+1	; 0x01
    174a:	9a 81       	ldd	r25, Y+2	; 0x02
    174c:	fc 01       	movw	r30, r24
    174e:	90 81       	ld	r25, Z
    1750:	81 e0       	ldi	r24, 0x01	; 1
    1752:	99 23       	and	r25, r25
    1754:	09 f0       	breq	.+2      	; 0x1758 <_7SegSeven+0xea>
    1756:	80 e0       	ldi	r24, 0x00	; 0
    1758:	38 2f       	mov	r19, r24
    175a:	89 81       	ldd	r24, Y+1	; 0x01
    175c:	9a 81       	ldd	r25, Y+2	; 0x02
    175e:	fc 01       	movw	r30, r24
    1760:	25 85       	ldd	r18, Z+13	; 0x0d
    1762:	89 81       	ldd	r24, Y+1	; 0x01
    1764:	9a 81       	ldd	r25, Y+2	; 0x02
    1766:	fc 01       	movw	r30, r24
    1768:	84 85       	ldd	r24, Z+12	; 0x0c
    176a:	43 2f       	mov	r20, r19
    176c:	62 2f       	mov	r22, r18
    176e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G OFF
    1772:	89 81       	ldd	r24, Y+1	; 0x01
    1774:	9a 81       	ldd	r25, Y+2	; 0x02
    1776:	fc 01       	movw	r30, r24
    1778:	90 81       	ld	r25, Z
    177a:	81 e0       	ldi	r24, 0x01	; 1
    177c:	99 23       	and	r25, r25
    177e:	09 f0       	breq	.+2      	; 0x1782 <_7SegSeven+0x114>
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	38 2f       	mov	r19, r24
    1784:	89 81       	ldd	r24, Y+1	; 0x01
    1786:	9a 81       	ldd	r25, Y+2	; 0x02
    1788:	fc 01       	movw	r30, r24
    178a:	27 85       	ldd	r18, Z+15	; 0x0f
    178c:	89 81       	ldd	r24, Y+1	; 0x01
    178e:	9a 81       	ldd	r25, Y+2	; 0x02
    1790:	fc 01       	movw	r30, r24
    1792:	86 85       	ldd	r24, Z+14	; 0x0e
    1794:	43 2f       	mov	r20, r19
    1796:	62 2f       	mov	r22, r18
    1798:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break ;
    179c:	50 c0       	rjmp	.+160    	; 0x183e <_7SegSeven+0x1d0>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    179e:	89 81       	ldd	r24, Y+1	; 0x01
    17a0:	9a 81       	ldd	r25, Y+2	; 0x02
    17a2:	fc 01       	movw	r30, r24
    17a4:	90 81       	ld	r25, Z
    17a6:	81 e0       	ldi	r24, 0x01	; 1
    17a8:	99 23       	and	r25, r25
    17aa:	09 f0       	breq	.+2      	; 0x17ae <_7SegSeven+0x140>
    17ac:	80 e0       	ldi	r24, 0x00	; 0
    17ae:	38 2f       	mov	r19, r24
    17b0:	89 81       	ldd	r24, Y+1	; 0x01
    17b2:	9a 81       	ldd	r25, Y+2	; 0x02
    17b4:	fc 01       	movw	r30, r24
    17b6:	23 81       	ldd	r18, Z+3	; 0x03
    17b8:	89 81       	ldd	r24, Y+1	; 0x01
    17ba:	9a 81       	ldd	r25, Y+2	; 0x02
    17bc:	fc 01       	movw	r30, r24
    17be:	82 81       	ldd	r24, Z+2	; 0x02
    17c0:	43 2f       	mov	r20, r19
    17c2:	62 2f       	mov	r22, r18
    17c4:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    17c8:	89 81       	ldd	r24, Y+1	; 0x01
    17ca:	9a 81       	ldd	r25, Y+2	; 0x02
    17cc:	fc 01       	movw	r30, r24
    17ce:	90 81       	ld	r25, Z
    17d0:	81 e0       	ldi	r24, 0x01	; 1
    17d2:	99 23       	and	r25, r25
    17d4:	09 f0       	breq	.+2      	; 0x17d8 <_7SegSeven+0x16a>
    17d6:	80 e0       	ldi	r24, 0x00	; 0
    17d8:	38 2f       	mov	r19, r24
    17da:	89 81       	ldd	r24, Y+1	; 0x01
    17dc:	9a 81       	ldd	r25, Y+2	; 0x02
    17de:	fc 01       	movw	r30, r24
    17e0:	25 81       	ldd	r18, Z+5	; 0x05
    17e2:	89 81       	ldd	r24, Y+1	; 0x01
    17e4:	9a 81       	ldd	r25, Y+2	; 0x02
    17e6:	fc 01       	movw	r30, r24
    17e8:	84 81       	ldd	r24, Z+4	; 0x04
    17ea:	43 2f       	mov	r20, r19
    17ec:	62 2f       	mov	r22, r18
    17ee:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    17f2:	89 81       	ldd	r24, Y+1	; 0x01
    17f4:	9a 81       	ldd	r25, Y+2	; 0x02
    17f6:	fc 01       	movw	r30, r24
    17f8:	90 81       	ld	r25, Z
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	99 23       	and	r25, r25
    17fe:	09 f0       	breq	.+2      	; 0x1802 <_7SegSeven+0x194>
    1800:	80 e0       	ldi	r24, 0x00	; 0
    1802:	38 2f       	mov	r19, r24
    1804:	89 81       	ldd	r24, Y+1	; 0x01
    1806:	9a 81       	ldd	r25, Y+2	; 0x02
    1808:	fc 01       	movw	r30, r24
    180a:	27 81       	ldd	r18, Z+7	; 0x07
    180c:	89 81       	ldd	r24, Y+1	; 0x01
    180e:	9a 81       	ldd	r25, Y+2	; 0x02
    1810:	fc 01       	movw	r30, r24
    1812:	86 81       	ldd	r24, Z+6	; 0x06
    1814:	43 2f       	mov	r20, r19
    1816:	62 2f       	mov	r22, r18
    1818:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
    181c:	89 81       	ldd	r24, Y+1	; 0x01
    181e:	9a 81       	ldd	r25, Y+2	; 0x02
    1820:	fc 01       	movw	r30, r24
    1822:	30 81       	ld	r19, Z
    1824:	89 81       	ldd	r24, Y+1	; 0x01
    1826:	9a 81       	ldd	r25, Y+2	; 0x02
    1828:	fc 01       	movw	r30, r24
    182a:	21 85       	ldd	r18, Z+9	; 0x09
    182c:	89 81       	ldd	r24, Y+1	; 0x01
    182e:	9a 81       	ldd	r25, Y+2	; 0x02
    1830:	fc 01       	movw	r30, r24
    1832:	80 85       	ldd	r24, Z+8	; 0x08
    1834:	43 2f       	mov	r20, r19
    1836:	62 2f       	mov	r22, r18
    1838:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		
		break;
    183c:	00 00       	nop
	}
}
    183e:	00 00       	nop
    1840:	0f 90       	pop	r0
    1842:	0f 90       	pop	r0
    1844:	df 91       	pop	r29
    1846:	cf 91       	pop	r28
    1848:	08 95       	ret

0000184a <_7SegEight>:
static void _7SegEight (_7Segment_Config* ptr_config) 
{
    184a:	cf 93       	push	r28
    184c:	df 93       	push	r29
    184e:	00 d0       	rcall	.+0      	; 0x1850 <_7SegEight+0x6>
    1850:	cd b7       	in	r28, 0x3d	; 61
    1852:	de b7       	in	r29, 0x3e	; 62
    1854:	9a 83       	std	Y+2, r25	; 0x02
    1856:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
    1858:	89 81       	ldd	r24, Y+1	; 0x01
    185a:	9a 81       	ldd	r25, Y+2	; 0x02
    185c:	fc 01       	movw	r30, r24
    185e:	81 81       	ldd	r24, Z+1	; 0x01
    1860:	88 2f       	mov	r24, r24
    1862:	90 e0       	ldi	r25, 0x00	; 0
    1864:	00 97       	sbiw	r24, 0x00	; 0
    1866:	21 f0       	breq	.+8      	; 0x1870 <_7SegEight+0x26>
    1868:	01 97       	sbiw	r24, 0x01	; 1
    186a:	09 f4       	brne	.+2      	; 0x186e <_7SegEight+0x24>
    186c:	72 c0       	rjmp	.+228    	; 0x1952 <_7SegEight+0x108>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		
		break;
	}
}
    186e:	b7 c0       	rjmp	.+366    	; 0x19de <_7SegEight+0x194>
static void _7SegEight (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A ON 
    1870:	89 81       	ldd	r24, Y+1	; 0x01
    1872:	9a 81       	ldd	r25, Y+2	; 0x02
    1874:	fc 01       	movw	r30, r24
    1876:	30 81       	ld	r19, Z
    1878:	89 81       	ldd	r24, Y+1	; 0x01
    187a:	9a 81       	ldd	r25, Y+2	; 0x02
    187c:	fc 01       	movw	r30, r24
    187e:	23 81       	ldd	r18, Z+3	; 0x03
    1880:	89 81       	ldd	r24, Y+1	; 0x01
    1882:	9a 81       	ldd	r25, Y+2	; 0x02
    1884:	fc 01       	movw	r30, r24
    1886:	82 81       	ldd	r24, Z+2	; 0x02
    1888:	43 2f       	mov	r20, r19
    188a:	62 2f       	mov	r22, r18
    188c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B ON
    1890:	89 81       	ldd	r24, Y+1	; 0x01
    1892:	9a 81       	ldd	r25, Y+2	; 0x02
    1894:	fc 01       	movw	r30, r24
    1896:	30 81       	ld	r19, Z
    1898:	89 81       	ldd	r24, Y+1	; 0x01
    189a:	9a 81       	ldd	r25, Y+2	; 0x02
    189c:	fc 01       	movw	r30, r24
    189e:	25 81       	ldd	r18, Z+5	; 0x05
    18a0:	89 81       	ldd	r24, Y+1	; 0x01
    18a2:	9a 81       	ldd	r25, Y+2	; 0x02
    18a4:	fc 01       	movw	r30, r24
    18a6:	84 81       	ldd	r24, Z+4	; 0x04
    18a8:	43 2f       	mov	r20, r19
    18aa:	62 2f       	mov	r22, r18
    18ac:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;	// C ON
    18b0:	89 81       	ldd	r24, Y+1	; 0x01
    18b2:	9a 81       	ldd	r25, Y+2	; 0x02
    18b4:	fc 01       	movw	r30, r24
    18b6:	30 81       	ld	r19, Z
    18b8:	89 81       	ldd	r24, Y+1	; 0x01
    18ba:	9a 81       	ldd	r25, Y+2	; 0x02
    18bc:	fc 01       	movw	r30, r24
    18be:	27 81       	ldd	r18, Z+7	; 0x07
    18c0:	89 81       	ldd	r24, Y+1	; 0x01
    18c2:	9a 81       	ldd	r25, Y+2	; 0x02
    18c4:	fc 01       	movw	r30, r24
    18c6:	86 81       	ldd	r24, Z+6	; 0x06
    18c8:	43 2f       	mov	r20, r19
    18ca:	62 2f       	mov	r22, r18
    18cc:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D ON
    18d0:	89 81       	ldd	r24, Y+1	; 0x01
    18d2:	9a 81       	ldd	r25, Y+2	; 0x02
    18d4:	fc 01       	movw	r30, r24
    18d6:	30 81       	ld	r19, Z
    18d8:	89 81       	ldd	r24, Y+1	; 0x01
    18da:	9a 81       	ldd	r25, Y+2	; 0x02
    18dc:	fc 01       	movw	r30, r24
    18de:	21 85       	ldd	r18, Z+9	; 0x09
    18e0:	89 81       	ldd	r24, Y+1	; 0x01
    18e2:	9a 81       	ldd	r25, Y+2	; 0x02
    18e4:	fc 01       	movw	r30, r24
    18e6:	80 85       	ldd	r24, Z+8	; 0x08
    18e8:	43 2f       	mov	r20, r19
    18ea:	62 2f       	mov	r22, r18
    18ec:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E ON
    18f0:	89 81       	ldd	r24, Y+1	; 0x01
    18f2:	9a 81       	ldd	r25, Y+2	; 0x02
    18f4:	fc 01       	movw	r30, r24
    18f6:	30 81       	ld	r19, Z
    18f8:	89 81       	ldd	r24, Y+1	; 0x01
    18fa:	9a 81       	ldd	r25, Y+2	; 0x02
    18fc:	fc 01       	movw	r30, r24
    18fe:	23 85       	ldd	r18, Z+11	; 0x0b
    1900:	89 81       	ldd	r24, Y+1	; 0x01
    1902:	9a 81       	ldd	r25, Y+2	; 0x02
    1904:	fc 01       	movw	r30, r24
    1906:	82 85       	ldd	r24, Z+10	; 0x0a
    1908:	43 2f       	mov	r20, r19
    190a:	62 2f       	mov	r22, r18
    190c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F ON
    1910:	89 81       	ldd	r24, Y+1	; 0x01
    1912:	9a 81       	ldd	r25, Y+2	; 0x02
    1914:	fc 01       	movw	r30, r24
    1916:	30 81       	ld	r19, Z
    1918:	89 81       	ldd	r24, Y+1	; 0x01
    191a:	9a 81       	ldd	r25, Y+2	; 0x02
    191c:	fc 01       	movw	r30, r24
    191e:	25 85       	ldd	r18, Z+13	; 0x0d
    1920:	89 81       	ldd	r24, Y+1	; 0x01
    1922:	9a 81       	ldd	r25, Y+2	; 0x02
    1924:	fc 01       	movw	r30, r24
    1926:	84 85       	ldd	r24, Z+12	; 0x0c
    1928:	43 2f       	mov	r20, r19
    192a:	62 2f       	mov	r22, r18
    192c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G ON
    1930:	89 81       	ldd	r24, Y+1	; 0x01
    1932:	9a 81       	ldd	r25, Y+2	; 0x02
    1934:	fc 01       	movw	r30, r24
    1936:	30 81       	ld	r19, Z
    1938:	89 81       	ldd	r24, Y+1	; 0x01
    193a:	9a 81       	ldd	r25, Y+2	; 0x02
    193c:	fc 01       	movw	r30, r24
    193e:	27 85       	ldd	r18, Z+15	; 0x0f
    1940:	89 81       	ldd	r24, Y+1	; 0x01
    1942:	9a 81       	ldd	r25, Y+2	; 0x02
    1944:	fc 01       	movw	r30, r24
    1946:	86 85       	ldd	r24, Z+14	; 0x0e
    1948:	43 2f       	mov	r20, r19
    194a:	62 2f       	mov	r22, r18
    194c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break ;
    1950:	46 c0       	rjmp	.+140    	; 0x19de <_7SegEight+0x194>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1952:	89 81       	ldd	r24, Y+1	; 0x01
    1954:	9a 81       	ldd	r25, Y+2	; 0x02
    1956:	fc 01       	movw	r30, r24
    1958:	30 81       	ld	r19, Z
    195a:	89 81       	ldd	r24, Y+1	; 0x01
    195c:	9a 81       	ldd	r25, Y+2	; 0x02
    195e:	fc 01       	movw	r30, r24
    1960:	23 81       	ldd	r18, Z+3	; 0x03
    1962:	89 81       	ldd	r24, Y+1	; 0x01
    1964:	9a 81       	ldd	r25, Y+2	; 0x02
    1966:	fc 01       	movw	r30, r24
    1968:	82 81       	ldd	r24, Z+2	; 0x02
    196a:	43 2f       	mov	r20, r19
    196c:	62 2f       	mov	r22, r18
    196e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1972:	89 81       	ldd	r24, Y+1	; 0x01
    1974:	9a 81       	ldd	r25, Y+2	; 0x02
    1976:	fc 01       	movw	r30, r24
    1978:	30 81       	ld	r19, Z
    197a:	89 81       	ldd	r24, Y+1	; 0x01
    197c:	9a 81       	ldd	r25, Y+2	; 0x02
    197e:	fc 01       	movw	r30, r24
    1980:	25 81       	ldd	r18, Z+5	; 0x05
    1982:	89 81       	ldd	r24, Y+1	; 0x01
    1984:	9a 81       	ldd	r25, Y+2	; 0x02
    1986:	fc 01       	movw	r30, r24
    1988:	84 81       	ldd	r24, Z+4	; 0x04
    198a:	43 2f       	mov	r20, r19
    198c:	62 2f       	mov	r22, r18
    198e:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1992:	89 81       	ldd	r24, Y+1	; 0x01
    1994:	9a 81       	ldd	r25, Y+2	; 0x02
    1996:	fc 01       	movw	r30, r24
    1998:	30 81       	ld	r19, Z
    199a:	89 81       	ldd	r24, Y+1	; 0x01
    199c:	9a 81       	ldd	r25, Y+2	; 0x02
    199e:	fc 01       	movw	r30, r24
    19a0:	27 81       	ldd	r18, Z+7	; 0x07
    19a2:	89 81       	ldd	r24, Y+1	; 0x01
    19a4:	9a 81       	ldd	r25, Y+2	; 0x02
    19a6:	fc 01       	movw	r30, r24
    19a8:	86 81       	ldd	r24, Z+6	; 0x06
    19aa:	43 2f       	mov	r20, r19
    19ac:	62 2f       	mov	r22, r18
    19ae:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
    19b2:	89 81       	ldd	r24, Y+1	; 0x01
    19b4:	9a 81       	ldd	r25, Y+2	; 0x02
    19b6:	fc 01       	movw	r30, r24
    19b8:	90 81       	ld	r25, Z
    19ba:	81 e0       	ldi	r24, 0x01	; 1
    19bc:	99 23       	and	r25, r25
    19be:	09 f0       	breq	.+2      	; 0x19c2 <_7SegEight+0x178>
    19c0:	80 e0       	ldi	r24, 0x00	; 0
    19c2:	38 2f       	mov	r19, r24
    19c4:	89 81       	ldd	r24, Y+1	; 0x01
    19c6:	9a 81       	ldd	r25, Y+2	; 0x02
    19c8:	fc 01       	movw	r30, r24
    19ca:	21 85       	ldd	r18, Z+9	; 0x09
    19cc:	89 81       	ldd	r24, Y+1	; 0x01
    19ce:	9a 81       	ldd	r25, Y+2	; 0x02
    19d0:	fc 01       	movw	r30, r24
    19d2:	80 85       	ldd	r24, Z+8	; 0x08
    19d4:	43 2f       	mov	r20, r19
    19d6:	62 2f       	mov	r22, r18
    19d8:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		
		break;
    19dc:	00 00       	nop
	}
}
    19de:	00 00       	nop
    19e0:	0f 90       	pop	r0
    19e2:	0f 90       	pop	r0
    19e4:	df 91       	pop	r29
    19e6:	cf 91       	pop	r28
    19e8:	08 95       	ret

000019ea <_7SegNine>:
static void _7SegNine  (_7Segment_Config* ptr_config) 
{
    19ea:	cf 93       	push	r28
    19ec:	df 93       	push	r29
    19ee:	00 d0       	rcall	.+0      	; 0x19f0 <_7SegNine+0x6>
    19f0:	cd b7       	in	r28, 0x3d	; 61
    19f2:	de b7       	in	r29, 0x3e	; 62
    19f4:	9a 83       	std	Y+2, r25	; 0x02
    19f6:	89 83       	std	Y+1, r24	; 0x01
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
    19f8:	89 81       	ldd	r24, Y+1	; 0x01
    19fa:	9a 81       	ldd	r25, Y+2	; 0x02
    19fc:	fc 01       	movw	r30, r24
    19fe:	81 81       	ldd	r24, Z+1	; 0x01
    1a00:	88 2f       	mov	r24, r24
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	00 97       	sbiw	r24, 0x00	; 0
    1a06:	21 f0       	breq	.+8      	; 0x1a10 <_7SegNine+0x26>
    1a08:	01 97       	sbiw	r24, 0x01	; 1
    1a0a:	09 f4       	brne	.+2      	; 0x1a0e <_7SegNine+0x24>
    1a0c:	77 c0       	rjmp	.+238    	; 0x1afc <_7SegNine+0x112>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
		
		break;
	}
}
    1a0e:	c1 c0       	rjmp	.+386    	; 0x1b92 <_7SegNine+0x1a8>
static void _7SegNine  (_7Segment_Config* ptr_config) 
{
	switch(ACCESS_STRUCT(ptr_config,_7SegmentMode))
	{
		case _7_SEG_NORMAL_MODE :
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// A ON 
    1a10:	89 81       	ldd	r24, Y+1	; 0x01
    1a12:	9a 81       	ldd	r25, Y+2	; 0x02
    1a14:	fc 01       	movw	r30, r24
    1a16:	30 81       	ld	r19, Z
    1a18:	89 81       	ldd	r24, Y+1	; 0x01
    1a1a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	23 81       	ldd	r18, Z+3	; 0x03
    1a20:	89 81       	ldd	r24, Y+1	; 0x01
    1a22:	9a 81       	ldd	r25, Y+2	; 0x02
    1a24:	fc 01       	movw	r30, r24
    1a26:	82 81       	ldd	r24, Z+2	; 0x02
    1a28:	43 2f       	mov	r20, r19
    1a2a:	62 2f       	mov	r22, r18
    1a2c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// B ON
    1a30:	89 81       	ldd	r24, Y+1	; 0x01
    1a32:	9a 81       	ldd	r25, Y+2	; 0x02
    1a34:	fc 01       	movw	r30, r24
    1a36:	30 81       	ld	r19, Z
    1a38:	89 81       	ldd	r24, Y+1	; 0x01
    1a3a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	25 81       	ldd	r18, Z+5	; 0x05
    1a40:	89 81       	ldd	r24, Y+1	; 0x01
    1a42:	9a 81       	ldd	r25, Y+2	; 0x02
    1a44:	fc 01       	movw	r30, r24
    1a46:	84 81       	ldd	r24, Z+4	; 0x04
    1a48:	43 2f       	mov	r20, r19
    1a4a:	62 2f       	mov	r22, r18
    1a4c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;	// C ON
    1a50:	89 81       	ldd	r24, Y+1	; 0x01
    1a52:	9a 81       	ldd	r25, Y+2	; 0x02
    1a54:	fc 01       	movw	r30, r24
    1a56:	30 81       	ld	r19, Z
    1a58:	89 81       	ldd	r24, Y+1	; 0x01
    1a5a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a5c:	fc 01       	movw	r30, r24
    1a5e:	27 81       	ldd	r18, Z+7	; 0x07
    1a60:	89 81       	ldd	r24, Y+1	; 0x01
    1a62:	9a 81       	ldd	r25, Y+2	; 0x02
    1a64:	fc 01       	movw	r30, r24
    1a66:	86 81       	ldd	r24, Z+6	; 0x06
    1a68:	43 2f       	mov	r20, r19
    1a6a:	62 2f       	mov	r22, r18
    1a6c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// D ON
    1a70:	89 81       	ldd	r24, Y+1	; 0x01
    1a72:	9a 81       	ldd	r25, Y+2	; 0x02
    1a74:	fc 01       	movw	r30, r24
    1a76:	30 81       	ld	r19, Z
    1a78:	89 81       	ldd	r24, Y+1	; 0x01
    1a7a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a7c:	fc 01       	movw	r30, r24
    1a7e:	21 85       	ldd	r18, Z+9	; 0x09
    1a80:	89 81       	ldd	r24, Y+1	; 0x01
    1a82:	9a 81       	ldd	r25, Y+2	; 0x02
    1a84:	fc 01       	movw	r30, r24
    1a86:	80 85       	ldd	r24, Z+8	; 0x08
    1a88:	43 2f       	mov	r20, r19
    1a8a:	62 2f       	mov	r22, r18
    1a8c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_E_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ;		// E OFF
    1a90:	89 81       	ldd	r24, Y+1	; 0x01
    1a92:	9a 81       	ldd	r25, Y+2	; 0x02
    1a94:	fc 01       	movw	r30, r24
    1a96:	90 81       	ld	r25, Z
    1a98:	81 e0       	ldi	r24, 0x01	; 1
    1a9a:	99 23       	and	r25, r25
    1a9c:	09 f0       	breq	.+2      	; 0x1aa0 <_7SegNine+0xb6>
    1a9e:	80 e0       	ldi	r24, 0x00	; 0
    1aa0:	38 2f       	mov	r19, r24
    1aa2:	89 81       	ldd	r24, Y+1	; 0x01
    1aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	23 85       	ldd	r18, Z+11	; 0x0b
    1aaa:	89 81       	ldd	r24, Y+1	; 0x01
    1aac:	9a 81       	ldd	r25, Y+2	; 0x02
    1aae:	fc 01       	movw	r30, r24
    1ab0:	82 85       	ldd	r24, Z+10	; 0x0a
    1ab2:	43 2f       	mov	r20, r19
    1ab4:	62 2f       	mov	r22, r18
    1ab6:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_F_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// F ON
    1aba:	89 81       	ldd	r24, Y+1	; 0x01
    1abc:	9a 81       	ldd	r25, Y+2	; 0x02
    1abe:	fc 01       	movw	r30, r24
    1ac0:	30 81       	ld	r19, Z
    1ac2:	89 81       	ldd	r24, Y+1	; 0x01
    1ac4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ac6:	fc 01       	movw	r30, r24
    1ac8:	25 85       	ldd	r18, Z+13	; 0x0d
    1aca:	89 81       	ldd	r24, Y+1	; 0x01
    1acc:	9a 81       	ldd	r25, Y+2	; 0x02
    1ace:	fc 01       	movw	r30, r24
    1ad0:	84 85       	ldd	r24, Z+12	; 0x0c
    1ad2:	43 2f       	mov	r20, r19
    1ad4:	62 2f       	mov	r22, r18
    1ad6:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		 GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_G_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 	// G ON
    1ada:	89 81       	ldd	r24, Y+1	; 0x01
    1adc:	9a 81       	ldd	r25, Y+2	; 0x02
    1ade:	fc 01       	movw	r30, r24
    1ae0:	30 81       	ld	r19, Z
    1ae2:	89 81       	ldd	r24, Y+1	; 0x01
    1ae4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ae6:	fc 01       	movw	r30, r24
    1ae8:	27 85       	ldd	r18, Z+15	; 0x0f
    1aea:	89 81       	ldd	r24, Y+1	; 0x01
    1aec:	9a 81       	ldd	r25, Y+2	; 0x02
    1aee:	fc 01       	movw	r30, r24
    1af0:	86 85       	ldd	r24, Z+14	; 0x0e
    1af2:	43 2f       	mov	r20, r19
    1af4:	62 2f       	mov	r22, r18
    1af6:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		break ;
    1afa:	4b c0       	rjmp	.+150    	; 0x1b92 <_7SegNine+0x1a8>
		case _7_SEG_4_PIN_IC:
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_A_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1afc:	89 81       	ldd	r24, Y+1	; 0x01
    1afe:	9a 81       	ldd	r25, Y+2	; 0x02
    1b00:	fc 01       	movw	r30, r24
    1b02:	90 81       	ld	r25, Z
    1b04:	81 e0       	ldi	r24, 0x01	; 1
    1b06:	99 23       	and	r25, r25
    1b08:	09 f0       	breq	.+2      	; 0x1b0c <_7SegNine+0x122>
    1b0a:	80 e0       	ldi	r24, 0x00	; 0
    1b0c:	38 2f       	mov	r19, r24
    1b0e:	89 81       	ldd	r24, Y+1	; 0x01
    1b10:	9a 81       	ldd	r25, Y+2	; 0x02
    1b12:	fc 01       	movw	r30, r24
    1b14:	23 81       	ldd	r18, Z+3	; 0x03
    1b16:	89 81       	ldd	r24, Y+1	; 0x01
    1b18:	9a 81       	ldd	r25, Y+2	; 0x02
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	82 81       	ldd	r24, Z+2	; 0x02
    1b1e:	43 2f       	mov	r20, r19
    1b20:	62 2f       	mov	r22, r18
    1b22:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_B_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1b26:	89 81       	ldd	r24, Y+1	; 0x01
    1b28:	9a 81       	ldd	r25, Y+2	; 0x02
    1b2a:	fc 01       	movw	r30, r24
    1b2c:	30 81       	ld	r19, Z
    1b2e:	89 81       	ldd	r24, Y+1	; 0x01
    1b30:	9a 81       	ldd	r25, Y+2	; 0x02
    1b32:	fc 01       	movw	r30, r24
    1b34:	25 81       	ldd	r18, Z+5	; 0x05
    1b36:	89 81       	ldd	r24, Y+1	; 0x01
    1b38:	9a 81       	ldd	r25, Y+2	; 0x02
    1b3a:	fc 01       	movw	r30, r24
    1b3c:	84 81       	ldd	r24, Z+4	; 0x04
    1b3e:	43 2f       	mov	r20, r19
    1b40:	62 2f       	mov	r22, r18
    1b42:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_C_PIN, ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 
    1b46:	89 81       	ldd	r24, Y+1	; 0x01
    1b48:	9a 81       	ldd	r25, Y+2	; 0x02
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	30 81       	ld	r19, Z
    1b4e:	89 81       	ldd	r24, Y+1	; 0x01
    1b50:	9a 81       	ldd	r25, Y+2	; 0x02
    1b52:	fc 01       	movw	r30, r24
    1b54:	27 81       	ldd	r18, Z+7	; 0x07
    1b56:	89 81       	ldd	r24, Y+1	; 0x01
    1b58:	9a 81       	ldd	r25, Y+2	; 0x02
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	86 81       	ldd	r24, Z+6	; 0x06
    1b5e:	43 2f       	mov	r20, r19
    1b60:	62 2f       	mov	r22, r18
    1b62:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
			GPIO_voidSetPinValue(ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PORT, ACCESS_STRUCT(ptr_config,_7SegmentPins)._7SEG_D_PIN, !ACCESS_STRUCT(ptr_config,_7SegmentType)) ; 		
    1b66:	89 81       	ldd	r24, Y+1	; 0x01
    1b68:	9a 81       	ldd	r25, Y+2	; 0x02
    1b6a:	fc 01       	movw	r30, r24
    1b6c:	90 81       	ld	r25, Z
    1b6e:	81 e0       	ldi	r24, 0x01	; 1
    1b70:	99 23       	and	r25, r25
    1b72:	09 f0       	breq	.+2      	; 0x1b76 <_7SegNine+0x18c>
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	38 2f       	mov	r19, r24
    1b78:	89 81       	ldd	r24, Y+1	; 0x01
    1b7a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b7c:	fc 01       	movw	r30, r24
    1b7e:	21 85       	ldd	r18, Z+9	; 0x09
    1b80:	89 81       	ldd	r24, Y+1	; 0x01
    1b82:	9a 81       	ldd	r25, Y+2	; 0x02
    1b84:	fc 01       	movw	r30, r24
    1b86:	80 85       	ldd	r24, Z+8	; 0x08
    1b88:	43 2f       	mov	r20, r19
    1b8a:	62 2f       	mov	r22, r18
    1b8c:	0e 94 4a 02 	call	0x494	; 0x494 <GPIO_voidSetPinValue>
		
		break;
    1b90:	00 00       	nop
	}
}
    1b92:	00 00       	nop
    1b94:	0f 90       	pop	r0
    1b96:	0f 90       	pop	r0
    1b98:	df 91       	pop	r29
    1b9a:	cf 91       	pop	r28
    1b9c:	08 95       	ret

00001b9e <__cmpsf2>:
    1b9e:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <__fp_cmp>
    1ba2:	08 f4       	brcc	.+2      	; 0x1ba6 <__cmpsf2+0x8>
    1ba4:	81 e0       	ldi	r24, 0x01	; 1
    1ba6:	08 95       	ret

00001ba8 <__fixunssfsi>:
    1ba8:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__fp_splitA>
    1bac:	88 f0       	brcs	.+34     	; 0x1bd0 <__fixunssfsi+0x28>
    1bae:	9f 57       	subi	r25, 0x7F	; 127
    1bb0:	98 f0       	brcs	.+38     	; 0x1bd8 <__fixunssfsi+0x30>
    1bb2:	b9 2f       	mov	r27, r25
    1bb4:	99 27       	eor	r25, r25
    1bb6:	b7 51       	subi	r27, 0x17	; 23
    1bb8:	b0 f0       	brcs	.+44     	; 0x1be6 <__fixunssfsi+0x3e>
    1bba:	e1 f0       	breq	.+56     	; 0x1bf4 <__fixunssfsi+0x4c>
    1bbc:	66 0f       	add	r22, r22
    1bbe:	77 1f       	adc	r23, r23
    1bc0:	88 1f       	adc	r24, r24
    1bc2:	99 1f       	adc	r25, r25
    1bc4:	1a f0       	brmi	.+6      	; 0x1bcc <__fixunssfsi+0x24>
    1bc6:	ba 95       	dec	r27
    1bc8:	c9 f7       	brne	.-14     	; 0x1bbc <__fixunssfsi+0x14>
    1bca:	14 c0       	rjmp	.+40     	; 0x1bf4 <__fixunssfsi+0x4c>
    1bcc:	b1 30       	cpi	r27, 0x01	; 1
    1bce:	91 f0       	breq	.+36     	; 0x1bf4 <__fixunssfsi+0x4c>
    1bd0:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <__fp_zero>
    1bd4:	b1 e0       	ldi	r27, 0x01	; 1
    1bd6:	08 95       	ret
    1bd8:	0c 94 49 0e 	jmp	0x1c92	; 0x1c92 <__fp_zero>
    1bdc:	67 2f       	mov	r22, r23
    1bde:	78 2f       	mov	r23, r24
    1be0:	88 27       	eor	r24, r24
    1be2:	b8 5f       	subi	r27, 0xF8	; 248
    1be4:	39 f0       	breq	.+14     	; 0x1bf4 <__fixunssfsi+0x4c>
    1be6:	b9 3f       	cpi	r27, 0xF9	; 249
    1be8:	cc f3       	brlt	.-14     	; 0x1bdc <__fixunssfsi+0x34>
    1bea:	86 95       	lsr	r24
    1bec:	77 95       	ror	r23
    1bee:	67 95       	ror	r22
    1bf0:	b3 95       	inc	r27
    1bf2:	d9 f7       	brne	.-10     	; 0x1bea <__fixunssfsi+0x42>
    1bf4:	3e f4       	brtc	.+14     	; 0x1c04 <__fixunssfsi+0x5c>
    1bf6:	90 95       	com	r25
    1bf8:	80 95       	com	r24
    1bfa:	70 95       	com	r23
    1bfc:	61 95       	neg	r22
    1bfe:	7f 4f       	sbci	r23, 0xFF	; 255
    1c00:	8f 4f       	sbci	r24, 0xFF	; 255
    1c02:	9f 4f       	sbci	r25, 0xFF	; 255
    1c04:	08 95       	ret

00001c06 <__fp_cmp>:
    1c06:	99 0f       	add	r25, r25
    1c08:	00 08       	sbc	r0, r0
    1c0a:	55 0f       	add	r21, r21
    1c0c:	aa 0b       	sbc	r26, r26
    1c0e:	e0 e8       	ldi	r30, 0x80	; 128
    1c10:	fe ef       	ldi	r31, 0xFE	; 254
    1c12:	16 16       	cp	r1, r22
    1c14:	17 06       	cpc	r1, r23
    1c16:	e8 07       	cpc	r30, r24
    1c18:	f9 07       	cpc	r31, r25
    1c1a:	c0 f0       	brcs	.+48     	; 0x1c4c <__fp_cmp+0x46>
    1c1c:	12 16       	cp	r1, r18
    1c1e:	13 06       	cpc	r1, r19
    1c20:	e4 07       	cpc	r30, r20
    1c22:	f5 07       	cpc	r31, r21
    1c24:	98 f0       	brcs	.+38     	; 0x1c4c <__fp_cmp+0x46>
    1c26:	62 1b       	sub	r22, r18
    1c28:	73 0b       	sbc	r23, r19
    1c2a:	84 0b       	sbc	r24, r20
    1c2c:	95 0b       	sbc	r25, r21
    1c2e:	39 f4       	brne	.+14     	; 0x1c3e <__fp_cmp+0x38>
    1c30:	0a 26       	eor	r0, r26
    1c32:	61 f0       	breq	.+24     	; 0x1c4c <__fp_cmp+0x46>
    1c34:	23 2b       	or	r18, r19
    1c36:	24 2b       	or	r18, r20
    1c38:	25 2b       	or	r18, r21
    1c3a:	21 f4       	brne	.+8      	; 0x1c44 <__fp_cmp+0x3e>
    1c3c:	08 95       	ret
    1c3e:	0a 26       	eor	r0, r26
    1c40:	09 f4       	brne	.+2      	; 0x1c44 <__fp_cmp+0x3e>
    1c42:	a1 40       	sbci	r26, 0x01	; 1
    1c44:	a6 95       	lsr	r26
    1c46:	8f ef       	ldi	r24, 0xFF	; 255
    1c48:	81 1d       	adc	r24, r1
    1c4a:	81 1d       	adc	r24, r1
    1c4c:	08 95       	ret

00001c4e <__fp_split3>:
    1c4e:	57 fd       	sbrc	r21, 7
    1c50:	90 58       	subi	r25, 0x80	; 128
    1c52:	44 0f       	add	r20, r20
    1c54:	55 1f       	adc	r21, r21
    1c56:	59 f0       	breq	.+22     	; 0x1c6e <__fp_splitA+0x10>
    1c58:	5f 3f       	cpi	r21, 0xFF	; 255
    1c5a:	71 f0       	breq	.+28     	; 0x1c78 <__fp_splitA+0x1a>
    1c5c:	47 95       	ror	r20

00001c5e <__fp_splitA>:
    1c5e:	88 0f       	add	r24, r24
    1c60:	97 fb       	bst	r25, 7
    1c62:	99 1f       	adc	r25, r25
    1c64:	61 f0       	breq	.+24     	; 0x1c7e <__fp_splitA+0x20>
    1c66:	9f 3f       	cpi	r25, 0xFF	; 255
    1c68:	79 f0       	breq	.+30     	; 0x1c88 <__fp_splitA+0x2a>
    1c6a:	87 95       	ror	r24
    1c6c:	08 95       	ret
    1c6e:	12 16       	cp	r1, r18
    1c70:	13 06       	cpc	r1, r19
    1c72:	14 06       	cpc	r1, r20
    1c74:	55 1f       	adc	r21, r21
    1c76:	f2 cf       	rjmp	.-28     	; 0x1c5c <__fp_split3+0xe>
    1c78:	46 95       	lsr	r20
    1c7a:	f1 df       	rcall	.-30     	; 0x1c5e <__fp_splitA>
    1c7c:	08 c0       	rjmp	.+16     	; 0x1c8e <__fp_splitA+0x30>
    1c7e:	16 16       	cp	r1, r22
    1c80:	17 06       	cpc	r1, r23
    1c82:	18 06       	cpc	r1, r24
    1c84:	99 1f       	adc	r25, r25
    1c86:	f1 cf       	rjmp	.-30     	; 0x1c6a <__fp_splitA+0xc>
    1c88:	86 95       	lsr	r24
    1c8a:	71 05       	cpc	r23, r1
    1c8c:	61 05       	cpc	r22, r1
    1c8e:	08 94       	sec
    1c90:	08 95       	ret

00001c92 <__fp_zero>:
    1c92:	e8 94       	clt

00001c94 <__fp_szero>:
    1c94:	bb 27       	eor	r27, r27
    1c96:	66 27       	eor	r22, r22
    1c98:	77 27       	eor	r23, r23
    1c9a:	cb 01       	movw	r24, r22
    1c9c:	97 f9       	bld	r25, 7
    1c9e:	08 95       	ret

00001ca0 <__gesf2>:
    1ca0:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <__fp_cmp>
    1ca4:	08 f4       	brcc	.+2      	; 0x1ca8 <__gesf2+0x8>
    1ca6:	8f ef       	ldi	r24, 0xFF	; 255
    1ca8:	08 95       	ret

00001caa <__mulsf3>:
    1caa:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <__mulsf3x>
    1cae:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_round>
    1cb2:	0e 94 cb 0e 	call	0x1d96	; 0x1d96 <__fp_pscA>
    1cb6:	38 f0       	brcs	.+14     	; 0x1cc6 <__mulsf3+0x1c>
    1cb8:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <__fp_pscB>
    1cbc:	20 f0       	brcs	.+8      	; 0x1cc6 <__mulsf3+0x1c>
    1cbe:	95 23       	and	r25, r21
    1cc0:	11 f0       	breq	.+4      	; 0x1cc6 <__mulsf3+0x1c>
    1cc2:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__fp_inf>
    1cc6:	0c 94 c8 0e 	jmp	0x1d90	; 0x1d90 <__fp_nan>
    1cca:	11 24       	eor	r1, r1
    1ccc:	0c 94 4a 0e 	jmp	0x1c94	; 0x1c94 <__fp_szero>

00001cd0 <__mulsf3x>:
    1cd0:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <__fp_split3>
    1cd4:	70 f3       	brcs	.-36     	; 0x1cb2 <__mulsf3+0x8>

00001cd6 <__mulsf3_pse>:
    1cd6:	95 9f       	mul	r25, r21
    1cd8:	c1 f3       	breq	.-16     	; 0x1cca <__mulsf3+0x20>
    1cda:	95 0f       	add	r25, r21
    1cdc:	50 e0       	ldi	r21, 0x00	; 0
    1cde:	55 1f       	adc	r21, r21
    1ce0:	62 9f       	mul	r22, r18
    1ce2:	f0 01       	movw	r30, r0
    1ce4:	72 9f       	mul	r23, r18
    1ce6:	bb 27       	eor	r27, r27
    1ce8:	f0 0d       	add	r31, r0
    1cea:	b1 1d       	adc	r27, r1
    1cec:	63 9f       	mul	r22, r19
    1cee:	aa 27       	eor	r26, r26
    1cf0:	f0 0d       	add	r31, r0
    1cf2:	b1 1d       	adc	r27, r1
    1cf4:	aa 1f       	adc	r26, r26
    1cf6:	64 9f       	mul	r22, r20
    1cf8:	66 27       	eor	r22, r22
    1cfa:	b0 0d       	add	r27, r0
    1cfc:	a1 1d       	adc	r26, r1
    1cfe:	66 1f       	adc	r22, r22
    1d00:	82 9f       	mul	r24, r18
    1d02:	22 27       	eor	r18, r18
    1d04:	b0 0d       	add	r27, r0
    1d06:	a1 1d       	adc	r26, r1
    1d08:	62 1f       	adc	r22, r18
    1d0a:	73 9f       	mul	r23, r19
    1d0c:	b0 0d       	add	r27, r0
    1d0e:	a1 1d       	adc	r26, r1
    1d10:	62 1f       	adc	r22, r18
    1d12:	83 9f       	mul	r24, r19
    1d14:	a0 0d       	add	r26, r0
    1d16:	61 1d       	adc	r22, r1
    1d18:	22 1f       	adc	r18, r18
    1d1a:	74 9f       	mul	r23, r20
    1d1c:	33 27       	eor	r19, r19
    1d1e:	a0 0d       	add	r26, r0
    1d20:	61 1d       	adc	r22, r1
    1d22:	23 1f       	adc	r18, r19
    1d24:	84 9f       	mul	r24, r20
    1d26:	60 0d       	add	r22, r0
    1d28:	21 1d       	adc	r18, r1
    1d2a:	82 2f       	mov	r24, r18
    1d2c:	76 2f       	mov	r23, r22
    1d2e:	6a 2f       	mov	r22, r26
    1d30:	11 24       	eor	r1, r1
    1d32:	9f 57       	subi	r25, 0x7F	; 127
    1d34:	50 40       	sbci	r21, 0x00	; 0
    1d36:	9a f0       	brmi	.+38     	; 0x1d5e <__mulsf3_pse+0x88>
    1d38:	f1 f0       	breq	.+60     	; 0x1d76 <__mulsf3_pse+0xa0>
    1d3a:	88 23       	and	r24, r24
    1d3c:	4a f0       	brmi	.+18     	; 0x1d50 <__mulsf3_pse+0x7a>
    1d3e:	ee 0f       	add	r30, r30
    1d40:	ff 1f       	adc	r31, r31
    1d42:	bb 1f       	adc	r27, r27
    1d44:	66 1f       	adc	r22, r22
    1d46:	77 1f       	adc	r23, r23
    1d48:	88 1f       	adc	r24, r24
    1d4a:	91 50       	subi	r25, 0x01	; 1
    1d4c:	50 40       	sbci	r21, 0x00	; 0
    1d4e:	a9 f7       	brne	.-22     	; 0x1d3a <__mulsf3_pse+0x64>
    1d50:	9e 3f       	cpi	r25, 0xFE	; 254
    1d52:	51 05       	cpc	r21, r1
    1d54:	80 f0       	brcs	.+32     	; 0x1d76 <__mulsf3_pse+0xa0>
    1d56:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__fp_inf>
    1d5a:	0c 94 4a 0e 	jmp	0x1c94	; 0x1c94 <__fp_szero>
    1d5e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d60:	e4 f3       	brlt	.-8      	; 0x1d5a <__mulsf3_pse+0x84>
    1d62:	98 3e       	cpi	r25, 0xE8	; 232
    1d64:	d4 f3       	brlt	.-12     	; 0x1d5a <__mulsf3_pse+0x84>
    1d66:	86 95       	lsr	r24
    1d68:	77 95       	ror	r23
    1d6a:	67 95       	ror	r22
    1d6c:	b7 95       	ror	r27
    1d6e:	f7 95       	ror	r31
    1d70:	e7 95       	ror	r30
    1d72:	9f 5f       	subi	r25, 0xFF	; 255
    1d74:	c1 f7       	brne	.-16     	; 0x1d66 <__mulsf3_pse+0x90>
    1d76:	fe 2b       	or	r31, r30
    1d78:	88 0f       	add	r24, r24
    1d7a:	91 1d       	adc	r25, r1
    1d7c:	96 95       	lsr	r25
    1d7e:	87 95       	ror	r24
    1d80:	97 f9       	bld	r25, 7
    1d82:	08 95       	ret

00001d84 <__fp_inf>:
    1d84:	97 f9       	bld	r25, 7
    1d86:	9f 67       	ori	r25, 0x7F	; 127
    1d88:	80 e8       	ldi	r24, 0x80	; 128
    1d8a:	70 e0       	ldi	r23, 0x00	; 0
    1d8c:	60 e0       	ldi	r22, 0x00	; 0
    1d8e:	08 95       	ret

00001d90 <__fp_nan>:
    1d90:	9f ef       	ldi	r25, 0xFF	; 255
    1d92:	80 ec       	ldi	r24, 0xC0	; 192
    1d94:	08 95       	ret

00001d96 <__fp_pscA>:
    1d96:	00 24       	eor	r0, r0
    1d98:	0a 94       	dec	r0
    1d9a:	16 16       	cp	r1, r22
    1d9c:	17 06       	cpc	r1, r23
    1d9e:	18 06       	cpc	r1, r24
    1da0:	09 06       	cpc	r0, r25
    1da2:	08 95       	ret

00001da4 <__fp_pscB>:
    1da4:	00 24       	eor	r0, r0
    1da6:	0a 94       	dec	r0
    1da8:	12 16       	cp	r1, r18
    1daa:	13 06       	cpc	r1, r19
    1dac:	14 06       	cpc	r1, r20
    1dae:	05 06       	cpc	r0, r21
    1db0:	08 95       	ret

00001db2 <__fp_round>:
    1db2:	09 2e       	mov	r0, r25
    1db4:	03 94       	inc	r0
    1db6:	00 0c       	add	r0, r0
    1db8:	11 f4       	brne	.+4      	; 0x1dbe <__fp_round+0xc>
    1dba:	88 23       	and	r24, r24
    1dbc:	52 f0       	brmi	.+20     	; 0x1dd2 <__fp_round+0x20>
    1dbe:	bb 0f       	add	r27, r27
    1dc0:	40 f4       	brcc	.+16     	; 0x1dd2 <__fp_round+0x20>
    1dc2:	bf 2b       	or	r27, r31
    1dc4:	11 f4       	brne	.+4      	; 0x1dca <__fp_round+0x18>
    1dc6:	60 ff       	sbrs	r22, 0
    1dc8:	04 c0       	rjmp	.+8      	; 0x1dd2 <__fp_round+0x20>
    1dca:	6f 5f       	subi	r22, 0xFF	; 255
    1dcc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dce:	8f 4f       	sbci	r24, 0xFF	; 255
    1dd0:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd2:	08 95       	ret

00001dd4 <_exit>:
    1dd4:	f8 94       	cli

00001dd6 <__stop_program>:
    1dd6:	ff cf       	rjmp	.-2      	; 0x1dd6 <__stop_program>
