/**
* @file OS_private.h
* @author Mohamed Abd El-Naby (mahameda.naby@gmail.com) 
* @brief 
* @version 0.1
* @date 2022-11-05
*
*/
#ifndef OS_PRIVATE_H 
#define OS_PRIVATE_H 





/******************************************************************************
* Includes
*******************************************************************************/




/******************************************************************************
* Preprocessor Constants
 *******************************************************************************/




/******************************************************************************
* Configuration Constants
*******************************************************************************/




/******************************************************************************
* Macros
*******************************************************************************/




/******************************************************************************
* Typedefs
*******************************************************************************/

/**
 * @brief This enum Holds Taks Stats 
 * 
 */
typedef enum
{
    TASK_READY , 
    TASK_SUSPEND
}TASK_state ; 


/**
 * @brief This Enum Holds Task Prop
 * 
 */
typedef struct
{
    u16  Copy_u16Periodicity                        ;
	void ( *TaskHandler )( void )                   ;
	u16          Copy_u16FirstDelay                 ;
	TASK_state   Copy_u8State                       ;
}TASK_TCB ; 


/******************************************************************************
* Variables
*******************************************************************************/




/******************************************************************************
* Module Variable Definitions
*******************************************************************************/




/******************************************************************************
* Private Function Prototypes
*******************************************************************************/
static void RTOS_voidSchedular( void );




#endif
/************************************* End of File ******************************************/
